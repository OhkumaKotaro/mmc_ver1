ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"control.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PID_value,"ax",%progbits
  18              		.align	1
  19              		.global	PID_value
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	PID_value:
  26              	.LFB159:
  27              		.file 1 "Src/control.c"
   1:Src/control.c **** #include "control.h"
   2:Src/control.c **** #include <stdint.h>
   3:Src/control.c **** #include "global.h"
   4:Src/control.c **** #include "tim.h"
   5:Src/control.c **** #include "arm_math.h"
   6:Src/control.c **** #include "main.h"
   7:Src/control.c **** #include "stm32f4xx_hal.h"
   8:Src/control.c **** 
   9:Src/control.c **** 
  10:Src/control.c **** 
  11:Src/control.c **** 
  12:Src/control.c **** /****************************************************************************************
  13:Src/control.c ****  * outline  : PID control
  14:Src/control.c ****  * argument : 
  15:Src/control.c ****  * return   : control value
  16:Src/control.c **** ********************************************************************************************/
  17:Src/control.c **** float PID_value(float target,float measured,float *sum,float*old,float Kp,float Ki,float Kd){
  28              		.loc 1 17 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  18:Src/control.c ****     float error;
  19:Src/control.c ****     float p,i,d;
  20:Src/control.c **** 
  21:Src/control.c ****     error = target - measured;
  34              		.loc 1 21 0
  35 0000 30EE600A 		vsub.f32	s0, s0, s1
  36              	.LVL1:
  22:Src/control.c ****     p = Kp*error;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 2


  37              		.loc 1 22 0
  38 0004 20EE011A 		vmul.f32	s2, s0, s2
  39              	.LVL2:
  23:Src/control.c **** 
  24:Src/control.c ****     *sum += error * dt;
  40              		.loc 1 24 0
  41 0008 DFED0D7A 		vldr.32	s15, .L2
  42 000c 20EE270A 		vmul.f32	s0, s0, s15
  43              	.LVL3:
  44 0010 D0ED007A 		vldr.32	s15, [r0]
  45 0014 30EE270A 		vadd.f32	s0, s0, s15
  46 0018 80ED000A 		vstr.32	s0, [r0]
  25:Src/control.c ****     i = Ki * *sum;
  47              		.loc 1 25 0
  48 001c 20EE210A 		vmul.f32	s0, s0, s3
  49              	.LVL4:
  26:Src/control.c **** 
  27:Src/control.c ****     *old = measured;
  50              		.loc 1 27 0
  51 0020 C1ED000A 		vstr.32	s1, [r1]
  28:Src/control.c ****     d = Kd * (measured - *old);
  52              		.loc 1 28 0
  53 0024 70EEE00A 		vsub.f32	s1, s1, s1
  54              	.LVL5:
  55 0028 60EE820A 		vmul.f32	s1, s1, s4
  56              	.LVL6:
  29:Src/control.c **** 
  30:Src/control.c ****     return (p+i+d)/batt_Vcc;
  57              		.loc 1 30 0
  58 002c 31EE000A 		vadd.f32	s0, s2, s0
  59              	.LVL7:
  60 0030 70EE200A 		vadd.f32	s1, s0, s1
  61              	.LVL8:
  62 0034 034B     		ldr	r3, .L2+4
  63 0036 93ED000A 		vldr.32	s0, [r3]
  31:Src/control.c **** }
  64              		.loc 1 31 0
  65 003a 80EE800A 		vdiv.f32	s0, s1, s0
  66 003e 7047     		bx	lr
  67              	.L3:
  68              		.align	2
  69              	.L2:
  70 0040 6F12833A 		.word	981668463
  71 0044 00000000 		.word	batt_Vcc
  72              		.cfi_endproc
  73              	.LFE159:
  75              		.section	.text.Calc_Palam,"ax",%progbits
  76              		.align	1
  77              		.global	Calc_Palam
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu fpv4-sp-d16
  83              	Calc_Palam:
  84              	.LFB160:
  32:Src/control.c **** 
  33:Src/control.c **** /****************************************************************************************
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 3


  34:Src/control.c ****  * outline  : calculate parameter
  35:Src/control.c ****  * argument : accel,*velocity,*distance
  36:Src/control.c ****  * return   : void
  37:Src/control.c **** ********************************************************************************************/
  38:Src/control.c **** void Calc_Palam(int16_t accel,int16_t *velocity,uint16_t *calc_tim){
  85              		.loc 1 38 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90              	.LVL9:
  39:Src/control.c ****     *calc_tim += 1;
  91              		.loc 1 39 0
  92 0000 1388     		ldrh	r3, [r2]
  93 0002 0133     		adds	r3, r3, #1
  94 0004 1380     		strh	r3, [r2]	@ movhi
  40:Src/control.c ****     *velocity += accel * dt;
  95              		.loc 1 40 0
  96 0006 07EE900A 		vmov	s15, r0	@ int
  97 000a F8EEE77A 		vcvt.f32.s32	s15, s15
  98 000e 9FED097A 		vldr.32	s14, .L5
  99 0012 27EE877A 		vmul.f32	s14, s15, s14
 100 0016 B1F90030 		ldrsh	r3, [r1]
 101 001a 07EE903A 		vmov	s15, r3	@ int
 102 001e F8EEE77A 		vcvt.f32.s32	s15, s15
 103 0022 77EE877A 		vadd.f32	s15, s15, s14
 104 0026 FDEEE77A 		vcvt.s32.f32	s15, s15
 105 002a 17EE903A 		vmov	r3, s15	@ int
 106 002e 0B80     		strh	r3, [r1]	@ movhi
  41:Src/control.c **** }
 107              		.loc 1 41 0
 108 0030 7047     		bx	lr
 109              	.L6:
 110 0032 00BF     		.align	2
 111              	.L5:
 112 0034 6F12833A 		.word	981668463
 113              		.cfi_endproc
 114              	.LFE160:
 116              		.global	__aeabi_f2d
 117              		.section	.text.Straight_Calc_fb,"ax",%progbits
 118              		.align	1
 119              		.global	Straight_Calc_fb
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv4-sp-d16
 125              	Straight_Calc_fb:
 126              	.LFB161:
  42:Src/control.c **** 
  43:Src/control.c **** 
  44:Src/control.c **** /****************************************************************************************
  45:Src/control.c ****  * outline  : calcurate accele distance
  46:Src/control.c ****  * argument : distance[mm],v_start[mm/s],v_end[mm/s]
  47:Src/control.c ****  * return   : void
  48:Src/control.c **** ********************************************************************************************/
  49:Src/control.c **** void Straight_Calc_fb(int16_t distant,int16_t v_start,int16_t v_end){
 127              		.loc 1 49 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 4


 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              	.LVL10:
 132 0000 30B5     		push	{r4, r5, lr}
 133              	.LCFI0:
 134              		.cfi_def_cfa_offset 12
 135              		.cfi_offset 4, -12
 136              		.cfi_offset 5, -8
 137              		.cfi_offset 14, -4
 138 0002 2DED048B 		vpush.64	{d8, d9}
 139              	.LCFI1:
 140              		.cfi_def_cfa_offset 28
 141              		.cfi_offset 80, -28
 142              		.cfi_offset 81, -24
 143              		.cfi_offset 82, -20
 144              		.cfi_offset 83, -16
 145 0006 85B0     		sub	sp, sp, #20
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 48
  50:Src/control.c ****     float t1,t2,t3;
  51:Src/control.c ****     float constant_L;
  52:Src/control.c ****     calc.velocity = v_start;
 148              		.loc 1 52 0
 149 0008 324B     		ldr	r3, .L9
 150 000a 9980     		strh	r1, [r3, #4]	@ movhi
  53:Src/control.c ****     t1 = (float)(MAX_VELOCITY - v_start) / ACCEL;
 151              		.loc 1 53 0
 152 000c C1F59673 		rsb	r3, r1, #300
 153 0010 07EE903A 		vmov	s15, r3	@ int
 154 0014 F8EEE77A 		vcvt.f32.s32	s15, s15
 155 0018 9FED2F7A 		vldr.32	s14, .L9+4
 156 001c C7EE878A 		vdiv.f32	s17, s15, s14
 157              	.LVL11:
  54:Src/control.c ****     t3 = (float)(MAX_VELOCITY - v_end) / ACCEL;
 158              		.loc 1 54 0
 159 0020 C2F59672 		rsb	r2, r2, #300
 160              	.LVL12:
 161 0024 07EE902A 		vmov	s15, r2	@ int
 162 0028 F8EEE77A 		vcvt.f32.s32	s15, s15
 163 002c 87EE878A 		vdiv.f32	s16, s15, s14
 164              	.LVL13:
  55:Src/control.c **** 
  56:Src/control.c ****     constant_L = (float)distant - (MAX_VELOCITY + v_start) * t1 / 2 - (MAX_VELOCITY + v_start) * t3
 165              		.loc 1 56 0
 166 0030 07EE900A 		vmov	s15, r0	@ int
 167 0034 B8EEE77A 		vcvt.f32.s32	s14, s15
 168 0038 01F59671 		add	r1, r1, #300
 169              	.LVL14:
 170 003c 07EE901A 		vmov	s15, r1	@ int
 171 0040 F8EEE77A 		vcvt.f32.s32	s15, s15
 172 0044 67EEA86A 		vmul.f32	s13, s15, s17
 173 0048 B6EE006A 		vmov.f32	s12, #5.0e-1
 174 004c 66EE866A 		vmul.f32	s13, s13, s12
 175 0050 37EE667A 		vsub.f32	s14, s14, s13
 176 0054 67EE887A 		vmul.f32	s15, s15, s16
 177 0058 67EE867A 		vmul.f32	s15, s15, s12
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 5


 178 005c 77EE677A 		vsub.f32	s15, s14, s15
 179              	.LVL15:
  57:Src/control.c **** 
  58:Src/control.c ****     t2 = constant_L / MAX_VELOCITY;
 180              		.loc 1 58 0
 181 0060 9FED1E7A 		vldr.32	s14, .L9+8
 182 0064 87EE879A 		vdiv.f32	s18, s15, s14
 183              	.LVL16:
  59:Src/control.c ****     printf("\nt1:%f,t2:%f,t3%f\r\n",t1,t2,t3);
 184              		.loc 1 59 0
 185 0068 18EE900A 		vmov	r0, s17
 186              	.LVL17:
 187 006c FFF7FEFF 		bl	__aeabi_f2d
 188              	.LVL18:
 189 0070 0446     		mov	r4, r0
 190 0072 0D46     		mov	r5, r1
 191 0074 18EE100A 		vmov	r0, s16
 192 0078 FFF7FEFF 		bl	__aeabi_f2d
 193              	.LVL19:
 194 007c CDE90201 		strd	r0, [sp, #8]
 195 0080 19EE100A 		vmov	r0, s18
 196 0084 FFF7FEFF 		bl	__aeabi_f2d
 197              	.LVL20:
 198 0088 CDE90001 		strd	r0, [sp]
 199 008c 2246     		mov	r2, r4
 200 008e 2B46     		mov	r3, r5
 201 0090 1348     		ldr	r0, .L9+12
 202 0092 FFF7FEFF 		bl	printf
 203              	.LVL21:
  60:Src/control.c **** 
  61:Src/control.c ****     t1 *= 1000;
 204              		.loc 1 61 0
 205 0096 DFED137A 		vldr.32	s15, .L9+16
 206 009a 68EEA78A 		vmul.f32	s17, s17, s15
 207              	.LVL22:
  62:Src/control.c ****     t2 *= 1000;
 208              		.loc 1 62 0
 209 009e 29EE279A 		vmul.f32	s18, s18, s15
 210              	.LVL23:
  63:Src/control.c ****     t3 *= 1000;
 211              		.loc 1 63 0
 212 00a2 28EE278A 		vmul.f32	s16, s16, s15
 213              	.LVL24:
  64:Src/control.c **** 
  65:Src/control.c ****     accel_T = t1;
 214              		.loc 1 65 0
 215 00a6 FCEEE88A 		vcvt.u32.f32	s17, s17
 216              	.LVL25:
 217 00aa 0F4B     		ldr	r3, .L9+20
 218 00ac 18EE902A 		vmov	r2, s17	@ int
 219 00b0 1A80     		strh	r2, [r3]	@ movhi
  66:Src/control.c ****     constant_T = t2;
 220              		.loc 1 66 0
 221 00b2 BCEEC99A 		vcvt.u32.f32	s18, s18
 222              	.LVL26:
 223 00b6 0D4B     		ldr	r3, .L9+24
 224 00b8 19EE102A 		vmov	r2, s18	@ int
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 6


 225 00bc 1A80     		strh	r2, [r3]	@ movhi
  67:Src/control.c ****     decrease_T = t3;
 226              		.loc 1 67 0
 227 00be BCEEC88A 		vcvt.u32.f32	s16, s16
 228              	.LVL27:
 229 00c2 0B4B     		ldr	r3, .L9+28
 230 00c4 18EE102A 		vmov	r2, s16	@ int
 231 00c8 1A80     		strh	r2, [r3]	@ movhi
  68:Src/control.c **** }
 232              		.loc 1 68 0
 233 00ca 05B0     		add	sp, sp, #20
 234              	.LCFI3:
 235              		.cfi_def_cfa_offset 28
 236              		@ sp needed
 237 00cc BDEC048B 		vldm	sp!, {d8-d9}
 238              	.LCFI4:
 239              		.cfi_restore 82
 240              		.cfi_restore 83
 241              		.cfi_restore 80
 242              		.cfi_restore 81
 243              		.cfi_def_cfa_offset 12
 244 00d0 30BD     		pop	{r4, r5, pc}
 245              	.L10:
 246 00d2 00BF     		.align	2
 247              	.L9:
 248 00d4 00000000 		.word	calc
 249 00d8 00007A45 		.word	1165623296
 250 00dc 00009643 		.word	1133903872
 251 00e0 00000000 		.word	.LC0
 252 00e4 00007A44 		.word	1148846080
 253 00e8 00000000 		.word	accel_T
 254 00ec 00000000 		.word	constant_T
 255 00f0 00000000 		.word	decrease_T
 256              		.cfi_endproc
 257              	.LFE161:
 259              		.section	.text.Straight_SysTic_fb,"ax",%progbits
 260              		.align	1
 261              		.global	Straight_SysTic_fb
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	Straight_SysTic_fb:
 268              	.LFB162:
  69:Src/control.c **** 
  70:Src/control.c **** 
  71:Src/control.c **** /****************************************************************************************
  72:Src/control.c ****  * outline  : output pwm for trapezoid accele straight by feadbuck control
  73:Src/control.c ****  * argument : void
  74:Src/control.c ****  * return   : void
  75:Src/control.c **** ********************************************************************************************/
  76:Src/control.c **** void Straight_SysTic_fb(void){
 269              		.loc 1 76 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 7


 274              	.LCFI5:
 275              		.cfi_def_cfa_offset 16
 276              		.cfi_offset 4, -16
 277              		.cfi_offset 5, -12
 278              		.cfi_offset 6, -8
 279              		.cfi_offset 14, -4
 280 0002 2DED028B 		vpush.64	{d8}
 281              	.LCFI6:
 282              		.cfi_def_cfa_offset 24
 283              		.cfi_offset 80, -24
 284              		.cfi_offset 81, -20
  77:Src/control.c ****     int16_t straight_pid_l,straight_pid_r;
  78:Src/control.c ****     if(ms_count < accel_T){
 285              		.loc 1 78 0
 286 0006 324B     		ldr	r3, .L20
 287 0008 1A88     		ldrh	r2, [r3]
 288 000a 324B     		ldr	r3, .L20+4
 289 000c 1B88     		ldrh	r3, [r3]
 290 000e 9A42     		cmp	r2, r3
 291 0010 4BD3     		bcc	.L17
  79:Src/control.c ****         Calc_Palam(ACCEL,&calc.velocity,&ms_count);
  80:Src/control.c ****     }
  81:Src/control.c ****     else if(ms_count < constant_T + accel_T){
 292              		.loc 1 81 0
 293 0012 3149     		ldr	r1, .L20+8
 294 0014 0888     		ldrh	r0, [r1]
 295 0016 C118     		adds	r1, r0, r3
 296 0018 8A42     		cmp	r2, r1
 297 001a 4DDB     		blt	.L18
  82:Src/control.c ****         Calc_Palam(0,&calc.velocity,&ms_count);
  83:Src/control.c ****     }
  84:Src/control.c ****     else if(ms_count < decrease_T + constant_T + accel_T){
 298              		.loc 1 84 0
 299 001c 2F49     		ldr	r1, .L20+12
 300 001e 0988     		ldrh	r1, [r1]
 301 0020 0144     		add	r1, r1, r0
 302 0022 0B44     		add	r3, r3, r1
 303 0024 9A42     		cmp	r2, r3
 304 0026 4DDB     		blt	.L19
  85:Src/control.c ****         Calc_Palam(-ACCEL,&calc.velocity,&ms_count);
  86:Src/control.c ****     }else{
  87:Src/control.c ****         calc.velocity = 0;
 305              		.loc 1 87 0
 306 0028 0023     		movs	r3, #0
 307 002a 2D4A     		ldr	r2, .L20+16
 308 002c 9380     		strh	r3, [r2, #4]	@ movhi
  88:Src/control.c ****         flag.straight = OFF;
 309              		.loc 1 88 0
 310 002e 2D4A     		ldr	r2, .L20+20
 311 0030 5380     		strh	r3, [r2, #2]	@ movhi
 312              	.L13:
  89:Src/control.c ****     }
  90:Src/control.c ****     
  91:Src/control.c ****     
  92:Src/control.c ****     straight_pid_l = (int16_t)PID_value(calc.velocity,enc.velocity_l,&s_sum_l,&enc.old_l,20.0f,90.0
 313              		.loc 1 92 0
 314 0032 2B4E     		ldr	r6, .L20+16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 8


 315 0034 B6F90430 		ldrsh	r3, [r6, #4]
 316 0038 00EE103A 		vmov	s0, r3	@ int
 317 003c DFED2A8A 		vldr.32	s17, .L20+24
 318 0040 9FED2A8A 		vldr.32	s16, .L20+28
 319 0044 2A49     		ldr	r1, .L20+32
 320 0046 A1F12005 		sub	r5, r1, #32
 321 004a B0EE682A 		vmov.f32	s4, s17
 322 004e F0EE481A 		vmov.f32	s3, s16
 323 0052 B3EE041A 		vmov.f32	s2, #2.0e+1
 324 0056 2748     		ldr	r0, .L20+36
 325 0058 51ED040A 		vldr.32	s1, [r1, #-16]
 326 005c B8EEC00A 		vcvt.f32.s32	s0, s0
 327 0060 FFF7FEFF 		bl	PID_value
 328              	.LVL28:
 329 0064 BDEEC00A 		vcvt.s32.f32	s0, s0
 330 0068 10EE103A 		vmov	r3, s0	@ int
 331 006c 1CB2     		sxth	r4, r3
 332              	.LVL29:
  93:Src/control.c ****     straight_pid_r = (int16_t)PID_value(calc.velocity,enc.velocity_r,&s_sum_r,&enc.old_r,20.0f,90.0
 333              		.loc 1 93 0
 334 006e B6F90430 		ldrsh	r3, [r6, #4]
 335 0072 00EE103A 		vmov	s0, r3	@ int
 336 0076 B0EE682A 		vmov.f32	s4, s17
 337 007a F0EE481A 		vmov.f32	s3, s16
 338 007e B3EE041A 		vmov.f32	s2, #2.0e+1
 339 0082 05F12401 		add	r1, r5, #36
 340 0086 1C48     		ldr	r0, .L20+40
 341 0088 D5ED050A 		vldr.32	s1, [r5, #20]
 342 008c B8EEC00A 		vcvt.f32.s32	s0, s0
 343 0090 FFF7FEFF 		bl	PID_value
 344              	.LVL30:
 345 0094 BDEEC00A 		vcvt.s32.f32	s0, s0
 346              	.LVL31:
  94:Src/control.c ****     Motor_pwm(straight_pid_l,straight_pid_r);
 347              		.loc 1 94 0
 348 0098 10EE103A 		vmov	r3, s0	@ int
 349 009c 19B2     		sxth	r1, r3
 350 009e 2046     		mov	r0, r4
 351 00a0 FFF7FEFF 		bl	Motor_pwm
 352              	.LVL32:
  95:Src/control.c **** }
 353              		.loc 1 95 0
 354 00a4 BDEC028B 		vldm	sp!, {d8}
 355              	.LCFI7:
 356              		.cfi_remember_state
 357              		.cfi_restore 80
 358              		.cfi_restore 81
 359              		.cfi_def_cfa_offset 16
 360 00a8 70BD     		pop	{r4, r5, r6, pc}
 361              	.LVL33:
 362              	.L17:
 363              	.LCFI8:
 364              		.cfi_restore_state
  79:Src/control.c ****     }
 365              		.loc 1 79 0
 366 00aa 094A     		ldr	r2, .L20
 367 00ac 1349     		ldr	r1, .L20+44
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 9


 368 00ae 4FF47A60 		mov	r0, #4000
 369 00b2 FFF7FEFF 		bl	Calc_Palam
 370              	.LVL34:
 371 00b6 BCE7     		b	.L13
 372              	.L18:
  82:Src/control.c ****     }
 373              		.loc 1 82 0
 374 00b8 054A     		ldr	r2, .L20
 375 00ba 1049     		ldr	r1, .L20+44
 376 00bc 0020     		movs	r0, #0
 377 00be FFF7FEFF 		bl	Calc_Palam
 378              	.LVL35:
 379 00c2 B6E7     		b	.L13
 380              	.L19:
  85:Src/control.c ****     }else{
 381              		.loc 1 85 0
 382 00c4 024A     		ldr	r2, .L20
 383 00c6 0D49     		ldr	r1, .L20+44
 384 00c8 0D48     		ldr	r0, .L20+48
 385 00ca FFF7FEFF 		bl	Calc_Palam
 386              	.LVL36:
 387 00ce B0E7     		b	.L13
 388              	.L21:
 389              		.align	2
 390              	.L20:
 391 00d0 00000000 		.word	ms_count
 392 00d4 00000000 		.word	accel_T
 393 00d8 00000000 		.word	constant_T
 394 00dc 00000000 		.word	decrease_T
 395 00e0 00000000 		.word	calc
 396 00e4 00000000 		.word	flag
 397 00e8 00000000 		.word	0
 398 00ec 0000B442 		.word	1119092736
 399 00f0 20000000 		.word	enc+32
 400 00f4 00000000 		.word	s_sum_l
 401 00f8 00000000 		.word	s_sum_r
 402 00fc 04000000 		.word	calc+4
 403 0100 60F0FFFF 		.word	-4000
 404              		.cfi_endproc
 405              	.LFE162:
 407              		.section	.text.Yawrate_Calc_fb,"ax",%progbits
 408              		.align	1
 409              		.global	Yawrate_Calc_fb
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 413              		.fpu fpv4-sp-d16
 415              	Yawrate_Calc_fb:
 416              	.LFB163:
  96:Src/control.c **** 
  97:Src/control.c **** 
  98:Src/control.c **** /****************************************************************************************
  99:Src/control.c ****  * outline  : calcurate trapezoid accel
 100:Src/control.c ****  * argument : degree[degree],v_start[degree/s],v_end[degree/s]
 101:Src/control.c ****  * return   : void
 102:Src/control.c **** ********************************************************************************************/
 103:Src/control.c **** void Yawrate_Calc_fb(int16_t degree,int16_t v_start,int16_t v_end){
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 10


 417              		.loc 1 103 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422              	.LVL37:
 104:Src/control.c ****     calc.yawrate_degree = 0;
 423              		.loc 1 104 0
 424 0000 064B     		ldr	r3, .L24
 425 0002 0022     		movs	r2, #0
 426              	.LVL38:
 427 0004 9A60     		str	r2, [r3, #8]	@ float
 105:Src/control.c ****     calc.yawrate_velocity = v_start;
 428              		.loc 1 105 0
 429 0006 9981     		strh	r1, [r3, #12]	@ movhi
 106:Src/control.c ****     if(degree == 0){
 430              		.loc 1 106 0
 431 0008 30B9     		cbnz	r0, .L22
 107:Src/control.c ****         y_accel_T = 0;
 432              		.loc 1 107 0
 433 000a 1346     		mov	r3, r2	@ float
 434 000c 044A     		ldr	r2, .L24+4
 435 000e 1360     		str	r3, [r2]	@ float
 108:Src/control.c ****         y_constant_T = 0;
 436              		.loc 1 108 0
 437 0010 044A     		ldr	r2, .L24+8
 438 0012 1360     		str	r3, [r2]	@ float
 109:Src/control.c ****         y_decrease_T = 0;
 439              		.loc 1 109 0
 440 0014 044A     		ldr	r2, .L24+12
 441 0016 1360     		str	r3, [r2]	@ float
 442              	.L22:
 110:Src/control.c ****     }
 111:Src/control.c ****     else{
 112:Src/control.c **** 
 113:Src/control.c ****     }
 114:Src/control.c **** }
 443              		.loc 1 114 0
 444 0018 7047     		bx	lr
 445              	.L25:
 446 001a 00BF     		.align	2
 447              	.L24:
 448 001c 00000000 		.word	calc
 449 0020 00000000 		.word	y_accel_T
 450 0024 00000000 		.word	y_constant_T
 451 0028 00000000 		.word	y_decrease_T
 452              		.cfi_endproc
 453              	.LFE163:
 455              		.section	.text.Yawrate_SysTic_fb,"ax",%progbits
 456              		.align	1
 457              		.global	Yawrate_SysTic_fb
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 461              		.fpu fpv4-sp-d16
 463              	Yawrate_SysTic_fb:
 464              	.LFB164:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 11


 115:Src/control.c **** 
 116:Src/control.c **** 
 117:Src/control.c **** /****************************************************************************************
 118:Src/control.c ****  * outline  : call 1ms (roll by feadbuck control)
 119:Src/control.c ****  * argument : void
 120:Src/control.c ****  * return   : void
 121:Src/control.c **** ********************************************************************************************/
 122:Src/control.c **** void Yawrate_SysTic_fb(void){
 465              		.loc 1 122 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469 0000 08B5     		push	{r3, lr}
 470              	.LCFI9:
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 3, -8
 473              		.cfi_offset 14, -4
 123:Src/control.c ****     int16_t yawrate_pid;
 124:Src/control.c ****     if(calc.yawrate_degree <= y_accel_T){
 474              		.loc 1 124 0
 475 0002 264B     		ldr	r3, .L42
 476 0004 D3ED027A 		vldr.32	s15, [r3, #8]
 477 0008 254B     		ldr	r3, .L42+4
 478 000a 93ED007A 		vldr.32	s14, [r3]
 479 000e F4EEC77A 		vcmpe.f32	s15, s14
 480 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 481 0016 2DD9     		bls	.L39
 125:Src/control.c ****         Calc_Palam(Y_ACCEL,&calc.yawrate_velocity,&ms_count);
 126:Src/control.c ****     }else if(calc.yawrate_degree <= y_constant_T){
 482              		.loc 1 126 0
 483 0018 224B     		ldr	r3, .L42+8
 484 001a 93ED007A 		vldr.32	s14, [r3]
 485 001e F4EEC77A 		vcmpe.f32	s15, s14
 486 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 487 0026 2CD9     		bls	.L40
 127:Src/control.c ****         Calc_Palam(0,&calc.yawrate_velocity,&ms_count);
 128:Src/control.c ****     }else if(calc.yawrate_degree <= y_decrease_T){
 488              		.loc 1 128 0
 489 0028 1F4B     		ldr	r3, .L42+12
 490 002a 93ED007A 		vldr.32	s14, [r3]
 491 002e F4EEC77A 		vcmpe.f32	s15, s14
 492 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 493 0036 2AD9     		bls	.L41
 494              	.L29:
 129:Src/control.c ****         Calc_Palam(-Y_ACCEL,&calc.yawrate_velocity,&ms_count);
 130:Src/control.c ****     }
 131:Src/control.c ****     yawrate_pid = (int16_t)PID_value((float)calc.yawrate_velocity,gyro.velocity,&gyro.degree,&gyro.
 495              		.loc 1 131 0
 496 0038 184B     		ldr	r3, .L42
 497 003a B3F90C30 		ldrsh	r3, [r3, #12]
 498 003e 00EE103A 		vmov	s0, r3	@ int
 499 0042 1A4B     		ldr	r3, .L42+16
 500 0044 B3EE042A 		vmov.f32	s4, #2.0e+1
 501 0048 DFED191A 		vldr.32	s3, .L42+20
 502 004c B2EE081A 		vmov.f32	s2, #1.2e+1
 503 0050 1946     		mov	r1, r3
 504 0052 181D     		adds	r0, r3, #4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 12


 505 0054 D3ED020A 		vldr.32	s1, [r3, #8]
 506 0058 B8EEC00A 		vcvt.f32.s32	s0, s0
 507 005c FFF7FEFF 		bl	PID_value
 508              	.LVL39:
 509 0060 BDEEC00A 		vcvt.s32.f32	s0, s0
 510 0064 10EE103A 		vmov	r3, s0	@ int
 511 0068 19B2     		sxth	r1, r3
 512              	.LVL40:
 132:Src/control.c ****     Motor_pwm(-yawrate_pid,yawrate_pid);
 513              		.loc 1 132 0
 514 006a 4842     		negs	r0, r1
 515 006c 00B2     		sxth	r0, r0
 516 006e FFF7FEFF 		bl	Motor_pwm
 517              	.LVL41:
 133:Src/control.c **** }
 518              		.loc 1 133 0
 519 0072 08BD     		pop	{r3, pc}
 520              	.L39:
 125:Src/control.c ****     }else if(calc.yawrate_degree <= y_constant_T){
 521              		.loc 1 125 0
 522 0074 0F4A     		ldr	r2, .L42+24
 523 0076 1049     		ldr	r1, .L42+28
 524 0078 4FF49670 		mov	r0, #300
 525 007c FFF7FEFF 		bl	Calc_Palam
 526              	.LVL42:
 527 0080 DAE7     		b	.L29
 528              	.L40:
 127:Src/control.c ****     }else if(calc.yawrate_degree <= y_decrease_T){
 529              		.loc 1 127 0
 530 0082 0C4A     		ldr	r2, .L42+24
 531 0084 0C49     		ldr	r1, .L42+28
 532 0086 0020     		movs	r0, #0
 533 0088 FFF7FEFF 		bl	Calc_Palam
 534              	.LVL43:
 535 008c D4E7     		b	.L29
 536              	.L41:
 129:Src/control.c ****     }
 537              		.loc 1 129 0
 538 008e 094A     		ldr	r2, .L42+24
 539 0090 0949     		ldr	r1, .L42+28
 540 0092 0A48     		ldr	r0, .L42+32
 541 0094 FFF7FEFF 		bl	Calc_Palam
 542              	.LVL44:
 543 0098 CEE7     		b	.L29
 544              	.L43:
 545 009a 00BF     		.align	2
 546              	.L42:
 547 009c 00000000 		.word	calc
 548 00a0 00000000 		.word	y_accel_T
 549 00a4 00000000 		.word	y_constant_T
 550 00a8 00000000 		.word	y_decrease_T
 551 00ac 08000000 		.word	gyro+8
 552 00b0 00000000 		.word	0
 553 00b4 00000000 		.word	ms_count
 554 00b8 0C000000 		.word	calc+12
 555 00bc D4FEFFFF 		.word	-300
 556              		.cfi_endproc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 13


 557              	.LFE164:
 559              		.section	.text.Output_Buzzer,"ax",%progbits
 560              		.align	1
 561              		.global	Output_Buzzer
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 565              		.fpu fpv4-sp-d16
 567              	Output_Buzzer:
 568              	.LFB165:
 134:Src/control.c **** 
 135:Src/control.c **** 
 136:Src/control.c **** /****************************************************************************************
 137:Src/control.c ****  * outline  : turn on buzzer 0.3sec
 138:Src/control.c ****  * argument : Hz
 139:Src/control.c ****  * return   : void
 140:Src/control.c **** ********************************************************************************************/
 141:Src/control.c **** void Output_Buzzer(uint8_t Hz){
 569              		.loc 1 141 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              	.LVL45:
 574 0000 08B5     		push	{r3, lr}
 575              	.LCFI10:
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 3, -8
 578              		.cfi_offset 14, -4
 142:Src/control.c ****     Buzzer_pwm(Hz,300);
 579              		.loc 1 142 0
 580 0002 4FF49671 		mov	r1, #300
 581 0006 FFF7FEFF 		bl	Buzzer_pwm
 582              	.LVL46:
 143:Src/control.c ****     HAL_Delay(300);
 583              		.loc 1 143 0
 584 000a 4FF49670 		mov	r0, #300
 585 000e FFF7FEFF 		bl	HAL_Delay
 586              	.LVL47:
 144:Src/control.c ****     Buzzer_pwm(HZ_NORMAL,0);
 587              		.loc 1 144 0
 588 0012 0021     		movs	r1, #0
 589 0014 0A20     		movs	r0, #10
 590 0016 FFF7FEFF 		bl	Buzzer_pwm
 591              	.LVL48:
 145:Src/control.c **** }
 592              		.loc 1 145 0
 593 001a 08BD     		pop	{r3, pc}
 594              		.cfi_endproc
 595              	.LFE165:
 597              		.section	.text.control_accel,"ax",%progbits
 598              		.align	1
 599              		.global	control_accel
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 603              		.fpu fpv4-sp-d16
 605              	control_accel:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 14


 606              	.LFB166:
 146:Src/control.c **** 
 147:Src/control.c **** 
 148:Src/control.c **** /****************************************************************************************
 149:Src/control.c ****  * outline  : straight run one block
 150:Src/control.c ****  * argument : accel[mm/s^2]
 151:Src/control.c ****  * return   : void
 152:Src/control.c **** ********************************************************************************************/
 153:Src/control.c **** void control_accel(int16_t accel_l,int16_t accel_r){
 607              		.loc 1 153 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 612              	.LVL49:
 154:Src/control.c ****   float pwm_l,pwm_r;
 155:Src/control.c ****   //torque[mNm] = weight[g] * 0.001 * accel[mm/s^2] * 0.001 * tire_radius[mm] / 2 / gear_rate
 156:Src/control.c ****   //pwm =( R * torque[mNM] / KT[mNm/A] + KE[mV/rpm] * rpms * 60) / Vcc
 157:Src/control.c ****   pwm_l = (Resistance * WEIGHT * accel_l * TIRE_RADIUS / 2 / GEAR_RATE / KT + KE * enc.rpms_left * 
 613              		.loc 1 157 0
 614 0000 07EE900A 		vmov	s15, r0	@ int
 615 0004 B8EEE77A 		vcvt.f32.s32	s14, s15
 616 0008 9FED272A 		vldr.32	s4, .L47
 617 000c 27EE027A 		vmul.f32	s14, s14, s4
 618 0010 F2EE092A 		vmov.f32	s5, #1.25e+1
 619 0014 27EE227A 		vmul.f32	s14, s14, s5
 620 0018 B6EE003A 		vmov.f32	s6, #5.0e-1
 621 001c 27EE037A 		vmul.f32	s14, s14, s6
 622 0020 F1EE053A 		vmov.f32	s7, #5.25e+0
 623 0024 C7EE237A 		vdiv.f32	s15, s14, s7
 624 0028 9FED207A 		vldr.32	s14, .L47+4
 625 002c C7EE876A 		vdiv.f32	s13, s15, s14
 626 0030 1F4B     		ldr	r3, .L47+8
 627 0032 93ED006A 		vldr.32	s12, [r3]
 628 0036 9FED1F4A 		vldr.32	s8, .L47+12
 629 003a 26EE046A 		vmul.f32	s12, s12, s8
 630 003e DFED1E4A 		vldr.32	s9, .L47+16
 631 0042 26EE246A 		vmul.f32	s12, s12, s9
 632 0046 76EE866A 		vadd.f32	s13, s13, s12
 633 004a 9FED1C5A 		vldr.32	s10, .L47+20
 634 004e 66EE856A 		vmul.f32	s13, s13, s10
 635 0052 1B4A     		ldr	r2, .L47+24
 636 0054 D2ED005A 		vldr.32	s11, [r2]
 637 0058 86EEA56A 		vdiv.f32	s12, s13, s11
 638              	.LVL50:
 158:Src/control.c ****   pwm_r = (Resistance * WEIGHT * accel_r * TIRE_RADIUS / 2 / GEAR_RATE / KT + KE * enc.rpms_right *
 639              		.loc 1 158 0
 640 005c 07EE901A 		vmov	s15, r1	@ int
 641 0060 F8EEE77A 		vcvt.f32.s32	s15, s15
 642 0064 67EE827A 		vmul.f32	s15, s15, s4
 643 0068 67EEA27A 		vmul.f32	s15, s15, s5
 644 006c 67EE837A 		vmul.f32	s15, s15, s6
 645 0070 C7EEA36A 		vdiv.f32	s13, s15, s7
 646 0074 C6EE877A 		vdiv.f32	s15, s13, s14
 647 0078 93ED017A 		vldr.32	s14, [r3, #4]
 648 007c 27EE047A 		vmul.f32	s14, s14, s8
 649 0080 27EE247A 		vmul.f32	s14, s14, s9
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 15


 650 0084 77EE877A 		vadd.f32	s15, s15, s14
 651 0088 67EE857A 		vmul.f32	s15, s15, s10
 652 008c 87EEA57A 		vdiv.f32	s14, s15, s11
 653              	.LVL51:
 159:Src/control.c **** 
 160:Src/control.c ****   motor.pwm_l = (int16_t)pwm_l;
 654              		.loc 1 160 0
 655 0090 BDEEC66A 		vcvt.s32.f32	s12, s12
 656              	.LVL52:
 657 0094 0B4B     		ldr	r3, .L47+28
 658              	.LVL53:
 659 0096 16EE102A 		vmov	r2, s12	@ int
 660 009a 1A80     		strh	r2, [r3]	@ movhi
 161:Src/control.c ****   motor.pwm_r = (int16_t)pwm_r;
 661              		.loc 1 161 0
 662 009c BDEEC77A 		vcvt.s32.f32	s14, s14
 663              	.LVL54:
 664 00a0 17EE102A 		vmov	r2, s14	@ int
 665 00a4 5A80     		strh	r2, [r3, #2]	@ movhi
 162:Src/control.c **** 
 163:Src/control.c ****   //Motor_pwm(pwm_l,pwm_r);
 164:Src/control.c **** 
 165:Src/control.c **** }
 666              		.loc 1 165 0
 667 00a6 7047     		bx	lr
 668              	.L48:
 669              		.align	2
 670              	.L47:
 671 00a8 0100D642 		.word	1121320961
 672 00ac A470FD3F 		.word	1073574052
 673 00b0 00000000 		.word	enc
 674 00b4 CFF7533E 		.word	1045690319
 675 00b8 00007042 		.word	1114636288
 676 00bc 00C07944 		.word	1148829696
 677 00c0 00000000 		.word	batt_Vcc
 678 00c4 00000000 		.word	motor
 679              		.cfi_endproc
 680              	.LFE166:
 682              		.section	.text.straight_one_ff,"ax",%progbits
 683              		.align	1
 684              		.global	straight_one_ff
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 688              		.fpu fpv4-sp-d16
 690              	straight_one_ff:
 691              	.LFB167:
 166:Src/control.c **** 
 167:Src/control.c **** /****************************************************************************************
 168:Src/control.c ****  * outline  : straight run one block
 169:Src/control.c ****  * argument : void
 170:Src/control.c ****  * return   : void
 171:Src/control.c **** ********************************************************************************************/
 172:Src/control.c **** void straight_one_ff(void){
 692              		.loc 1 172 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 16


 695              		@ frame_needed = 0, uses_anonymous_args = 0
 696 0000 08B5     		push	{r3, lr}
 697              	.LCFI11:
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 3, -8
 700              		.cfi_offset 14, -4
 173:Src/control.c ****     if(flag.accel == OFF){
 701              		.loc 1 173 0
 702 0002 1F4B     		ldr	r3, .L61
 703 0004 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 704 0006 1BB3     		cbz	r3, .L57
 174:Src/control.c ****         motor.pwm_l = 0;
 175:Src/control.c ****         motor.pwm_r = 0;
 176:Src/control.c ****     }
 177:Src/control.c ****     else if(flag.accel == ON){
 705              		.loc 1 177 0
 706 0008 012B     		cmp	r3, #1
 707 000a 26D0     		beq	.L58
 178:Src/control.c ****         speed_count = 0;
 179:Src/control.c ****         flag.accel = 2;
 180:Src/control.c ****     }else if(flag.accel == 2){
 708              		.loc 1 180 0
 709 000c 022B     		cmp	r3, #2
 710 000e 23D1     		bne	.L49
 181:Src/control.c ****         if(speed_count < 300){
 711              		.loc 1 181 0
 712 0010 1C4B     		ldr	r3, .L61+4
 713 0012 1B88     		ldrh	r3, [r3]
 714 0014 B3F5967F 		cmp	r3, #300
 715 0018 26D3     		bcc	.L59
 716              	.L53:
 182:Src/control.c ****             control_accel(1000,1000);
 183:Src/control.c ****         }
 184:Src/control.c **** 
 185:Src/control.c ****         if(speed_count >= 300 && speed_count < 600){
 717              		.loc 1 185 0
 718 001a 1A4B     		ldr	r3, .L61+4
 719 001c 1B88     		ldrh	r3, [r3]
 720 001e A3F59672 		sub	r2, r3, #300
 721 0022 92B2     		uxth	r2, r2
 722 0024 B2F5967F 		cmp	r2, #300
 723 0028 03D2     		bcs	.L54
 186:Src/control.c ****             motor.pwm_l = 0;
 724              		.loc 1 186 0
 725 002a 174A     		ldr	r2, .L61+8
 726 002c 0021     		movs	r1, #0
 727 002e 1180     		strh	r1, [r2]	@ movhi
 187:Src/control.c ****             motor.pwm_r = 0;
 728              		.loc 1 187 0
 729 0030 5180     		strh	r1, [r2, #2]	@ movhi
 730              	.L54:
 188:Src/control.c ****         }
 189:Src/control.c **** 
 190:Src/control.c ****         if(speed_count >= 600 && speed_count < 900){
 731              		.loc 1 190 0
 732 0032 A3F51673 		sub	r3, r3, #600
 733 0036 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 17


 734 0038 B3F5967F 		cmp	r3, #300
 735 003c 1AD3     		bcc	.L60
 736              	.L55:
 191:Src/control.c ****             control_accel(-1000,-1000);
 192:Src/control.c ****         }
 193:Src/control.c ****         if(speed_count >= 900){
 737              		.loc 1 193 0
 738 003e 114B     		ldr	r3, .L61+4
 739 0040 1B88     		ldrh	r3, [r3]
 740 0042 B3F5617F 		cmp	r3, #900
 741 0046 07D3     		bcc	.L49
 194:Src/control.c ****             flag.accel = OFF;
 742              		.loc 1 194 0
 743 0048 0D4B     		ldr	r3, .L61
 744 004a 0022     		movs	r2, #0
 745 004c 1A72     		strb	r2, [r3, #8]
 195:Src/control.c ****         }
 196:Src/control.c ****     }
 197:Src/control.c **** }
 746              		.loc 1 197 0
 747 004e 03E0     		b	.L49
 748              	.L57:
 174:Src/control.c ****         motor.pwm_r = 0;
 749              		.loc 1 174 0
 750 0050 0D4B     		ldr	r3, .L61+8
 751 0052 0022     		movs	r2, #0
 752 0054 1A80     		strh	r2, [r3]	@ movhi
 175:Src/control.c ****     }
 753              		.loc 1 175 0
 754 0056 5A80     		strh	r2, [r3, #2]	@ movhi
 755              	.L49:
 756              		.loc 1 197 0
 757 0058 08BD     		pop	{r3, pc}
 758              	.L58:
 178:Src/control.c ****         flag.accel = 2;
 759              		.loc 1 178 0
 760 005a 0A4B     		ldr	r3, .L61+4
 761 005c 0022     		movs	r2, #0
 762 005e 1A80     		strh	r2, [r3]	@ movhi
 179:Src/control.c ****     }else if(flag.accel == 2){
 763              		.loc 1 179 0
 764 0060 074B     		ldr	r3, .L61
 765 0062 0222     		movs	r2, #2
 766 0064 1A72     		strb	r2, [r3, #8]
 767 0066 F7E7     		b	.L49
 768              	.L59:
 182:Src/control.c ****         }
 769              		.loc 1 182 0
 770 0068 4FF47A71 		mov	r1, #1000
 771 006c 0846     		mov	r0, r1
 772 006e FFF7FEFF 		bl	control_accel
 773              	.LVL55:
 774 0072 D2E7     		b	.L53
 775              	.L60:
 191:Src/control.c ****         }
 776              		.loc 1 191 0
 777 0074 0548     		ldr	r0, .L61+12
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 18


 778 0076 0146     		mov	r1, r0
 779 0078 FFF7FEFF 		bl	control_accel
 780              	.LVL56:
 781 007c DFE7     		b	.L55
 782              	.L62:
 783 007e 00BF     		.align	2
 784              	.L61:
 785 0080 00000000 		.word	flag
 786 0084 00000000 		.word	speed_count
 787 0088 00000000 		.word	motor
 788 008c 18FCFFFF 		.word	-1000
 789              		.cfi_endproc
 790              	.LFE167:
 792              		.section	.text.Sensor_Check,"ax",%progbits
 793              		.align	1
 794              		.global	Sensor_Check
 795              		.syntax unified
 796              		.thumb
 797              		.thumb_func
 798              		.fpu fpv4-sp-d16
 800              	Sensor_Check:
 801              	.LFB168:
 198:Src/control.c **** 
 199:Src/control.c **** 
 200:Src/control.c **** /****************************************************************************************
 201:Src/control.c ****  * outline  : sensor check
 202:Src/control.c ****  * argument : void
 203:Src/control.c ****  * return   : void
 204:Src/control.c **** ********************************************************************************************/
 205:Src/control.c **** void Sensor_Check(void){
 802              		.loc 1 205 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806 0000 08B5     		push	{r3, lr}
 807              	.LCFI12:
 808              		.cfi_def_cfa_offset 8
 809              		.cfi_offset 3, -8
 810              		.cfi_offset 14, -4
 206:Src/control.c ****     if(sensor.wall[0]==true){
 811              		.loc 1 206 0
 812 0002 214B     		ldr	r3, .L77
 813 0004 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 814 0006 012B     		cmp	r3, #1
 815 0008 23D0     		beq	.L73
 207:Src/control.c ****         HAL_GPIO_WritePin(led0_GPIO_Port,led0_Pin,GPIO_PIN_RESET);
 208:Src/control.c ****     }else{
 209:Src/control.c ****         HAL_GPIO_WritePin(led0_GPIO_Port,led0_Pin,GPIO_PIN_SET);
 816              		.loc 1 209 0
 817 000a 0122     		movs	r2, #1
 818 000c 4FF40051 		mov	r1, #8192
 819 0010 1E48     		ldr	r0, .L77+4
 820 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 821              	.LVL57:
 822              	.L65:
 210:Src/control.c ****     }
 211:Src/control.c ****     if(sensor.wall[1]==true){
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 19


 823              		.loc 1 211 0
 824 0016 1C4B     		ldr	r3, .L77
 825 0018 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 826 001a 012B     		cmp	r3, #1
 827 001c 20D0     		beq	.L74
 212:Src/control.c ****         HAL_GPIO_WritePin(led3_GPIO_Port,led3_Pin,GPIO_PIN_RESET);
 213:Src/control.c ****     }else{
 214:Src/control.c ****         HAL_GPIO_WritePin(led3_GPIO_Port,led3_Pin,GPIO_PIN_SET);
 828              		.loc 1 214 0
 829 001e 0122     		movs	r2, #1
 830 0020 4FF48071 		mov	r1, #256
 831 0024 1948     		ldr	r0, .L77+4
 832 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 833              	.LVL58:
 834              	.L67:
 215:Src/control.c ****     }
 216:Src/control.c ****     if(sensor.wall[2]==true){
 835              		.loc 1 216 0
 836 002a 174B     		ldr	r3, .L77
 837 002c 9B7E     		ldrb	r3, [r3, #26]	@ zero_extendqisi2
 838 002e 012B     		cmp	r3, #1
 839 0030 1DD0     		beq	.L75
 217:Src/control.c ****         HAL_GPIO_WritePin(led2_GPIO_Port,led2_Pin,GPIO_PIN_RESET);
 218:Src/control.c ****     }else{
 219:Src/control.c ****         HAL_GPIO_WritePin(led2_GPIO_Port,led2_Pin,GPIO_PIN_SET);
 840              		.loc 1 219 0
 841 0032 0122     		movs	r2, #1
 842 0034 8021     		movs	r1, #128
 843 0036 1548     		ldr	r0, .L77+4
 844 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 845              	.LVL59:
 846              	.L69:
 220:Src/control.c ****     }
 221:Src/control.c ****     if(sensor.wall[3]==true){
 847              		.loc 1 221 0
 848 003c 124B     		ldr	r3, .L77
 849 003e DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 850 0040 012B     		cmp	r3, #1
 851 0042 1AD0     		beq	.L76
 222:Src/control.c ****         HAL_GPIO_WritePin(led1_GPIO_Port,led1_Pin,GPIO_PIN_RESET);
 223:Src/control.c ****     }else{
 224:Src/control.c ****         HAL_GPIO_WritePin(led1_GPIO_Port,led1_Pin,GPIO_PIN_SET);
 852              		.loc 1 224 0
 853 0044 0122     		movs	r2, #1
 854 0046 4FF48041 		mov	r1, #16384
 855 004a 1048     		ldr	r0, .L77+4
 856 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 857              	.LVL60:
 858              	.L63:
 225:Src/control.c ****     } 
 226:Src/control.c **** }
 859              		.loc 1 226 0
 860 0050 08BD     		pop	{r3, pc}
 861              	.L73:
 207:Src/control.c ****     }else{
 862              		.loc 1 207 0
 863 0052 0022     		movs	r2, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 20


 864 0054 4FF40051 		mov	r1, #8192
 865 0058 0C48     		ldr	r0, .L77+4
 866 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 867              	.LVL61:
 868 005e DAE7     		b	.L65
 869              	.L74:
 212:Src/control.c ****     }else{
 870              		.loc 1 212 0
 871 0060 0022     		movs	r2, #0
 872 0062 4FF48071 		mov	r1, #256
 873 0066 0948     		ldr	r0, .L77+4
 874 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 875              	.LVL62:
 876 006c DDE7     		b	.L67
 877              	.L75:
 217:Src/control.c ****     }else{
 878              		.loc 1 217 0
 879 006e 0022     		movs	r2, #0
 880 0070 8021     		movs	r1, #128
 881 0072 0648     		ldr	r0, .L77+4
 882 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 883              	.LVL63:
 884 0078 E0E7     		b	.L69
 885              	.L76:
 222:Src/control.c ****     }else{
 886              		.loc 1 222 0
 887 007a 0022     		movs	r2, #0
 888 007c 4FF48041 		mov	r1, #16384
 889 0080 0248     		ldr	r0, .L77+4
 890 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 891              	.LVL64:
 892 0086 E3E7     		b	.L63
 893              	.L78:
 894              		.align	2
 895              	.L77:
 896 0088 00000000 		.word	sensor
 897 008c 00080240 		.word	1073874944
 898              		.cfi_endproc
 899              	.LFE168:
 901              		.comm	y_sum,4,4
 902              		.comm	s_sum_r,4,4
 903              		.comm	s_sum_l,4,4
 904              		.section	.rodata.Straight_Calc_fb.str1.4,"aMS",%progbits,1
 905              		.align	2
 906              	.LC0:
 907 0000 0A74313A 		.ascii	"\012t1:%f,t2:%f,t3%f\015\012\000"
 907      25662C74 
 907      323A2566 
 907      2C743325 
 907      660D0A00 
 908              		.text
 909              	.Letext0:
 910              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 911              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 912              		.file 4 "Inc/control.h"
 913              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 914              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 21


 915              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 916              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 917              		.file 9 "Inc/global.h"
 918              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 919              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 920              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 921              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 922              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 923              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 924              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 925              		.file 17 "Inc/tim.h"
 926              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 927              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 928              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 control.c
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:18     .text.PID_value:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:25     .text.PID_value:00000000 PID_value
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:70     .text.PID_value:00000040 $d
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:76     .text.Calc_Palam:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:83     .text.Calc_Palam:00000000 Calc_Palam
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:112    .text.Calc_Palam:00000034 $d
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:118    .text.Straight_Calc_fb:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:125    .text.Straight_Calc_fb:00000000 Straight_Calc_fb
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:248    .text.Straight_Calc_fb:000000d4 $d
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:260    .text.Straight_SysTic_fb:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:267    .text.Straight_SysTic_fb:00000000 Straight_SysTic_fb
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:391    .text.Straight_SysTic_fb:000000d0 $d
                            *COM*:00000004 s_sum_l
                            *COM*:00000004 s_sum_r
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:408    .text.Yawrate_Calc_fb:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:415    .text.Yawrate_Calc_fb:00000000 Yawrate_Calc_fb
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:448    .text.Yawrate_Calc_fb:0000001c $d
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:456    .text.Yawrate_SysTic_fb:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:463    .text.Yawrate_SysTic_fb:00000000 Yawrate_SysTic_fb
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:547    .text.Yawrate_SysTic_fb:0000009c $d
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:560    .text.Output_Buzzer:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:567    .text.Output_Buzzer:00000000 Output_Buzzer
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:598    .text.control_accel:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:605    .text.control_accel:00000000 control_accel
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:671    .text.control_accel:000000a8 $d
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:683    .text.straight_one_ff:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:690    .text.straight_one_ff:00000000 straight_one_ff
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:785    .text.straight_one_ff:00000080 $d
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:793    .text.Sensor_Check:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:800    .text.Sensor_Check:00000000 Sensor_Check
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:896    .text.Sensor_Check:00000088 $d
                            *COM*:00000004 y_sum
C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s:905    .rodata.Straight_Calc_fb.str1.4:00000000 $d

UNDEFINED SYMBOLS
batt_Vcc
__aeabi_f2d
printf
calc
accel_T
constant_T
decrease_T
Motor_pwm
ms_count
flag
enc
y_accel_T
y_constant_T
y_decrease_T
gyro
Buzzer_pwm
HAL_Delay
motor
speed_count
HAL_GPIO_WritePin
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccVBNemw.s 			page 23


sensor
