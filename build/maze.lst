ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"maze.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Maze_Set,"ax",%progbits
  18              		.align	1
  19              		.global	Maze_Set
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Maze_Set:
  26              	.LFB126:
  27              		.file 1 "Src/maze.c"
   1:Src/maze.c    **** #include "maze.h"
   2:Src/maze.c    **** #include "gpio.h"
   3:Src/maze.c    **** 
   4:Src/maze.c    **** 
   5:Src/maze.c    **** /**************variable**********************/
   6:Src/maze.c    **** mazeDef_t mazeDef;
   7:Src/maze.c    **** maze_t maze;
   8:Src/maze.c    **** 
   9:Src/maze.c    **** 
  10:Src/maze.c    **** 
  11:Src/maze.c    **** /**************************************************************************************************
  12:Src/maze.c    ****  * outline : input maze size , goal point
  13:Src/maze.c    ****  * argument : void
  14:Src/maze.c    ****  * return : void
  15:Src/maze.c    **** ***************************************************************************************************
  16:Src/maze.c    **** void Maze_Set(void){
  28              		.loc 1 16 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  17:Src/maze.c    ****     mazeDef.maze_size_x = 7;
  33              		.loc 1 17 0
  34 0000 034B     		ldr	r3, .L2
  35 0002 0722     		movs	r2, #7
  36 0004 1A70     		strb	r2, [r3]
  18:Src/maze.c    ****     mazeDef.maze_size_y = 7;
  37              		.loc 1 18 0
  38 0006 5A70     		strb	r2, [r3, #1]
  19:Src/maze.c    ****     mazeDef.maze_goal_x = 3;
  39              		.loc 1 19 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 2


  40 0008 0322     		movs	r2, #3
  41 000a 9A70     		strb	r2, [r3, #2]
  20:Src/maze.c    ****     mazeDef.maze_goal_y = 3;
  42              		.loc 1 20 0
  43 000c DA70     		strb	r2, [r3, #3]
  21:Src/maze.c    **** }
  44              		.loc 1 21 0
  45 000e 7047     		bx	lr
  46              	.L3:
  47              		.align	2
  48              	.L2:
  49 0010 00000000 		.word	mazeDef
  50              		.cfi_endproc
  51              	.LFE126:
  53              		.section	.text.Init_maze,"ax",%progbits
  54              		.align	1
  55              		.global	Init_maze
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	Init_maze:
  62              	.LFB127:
  22:Src/maze.c    **** 
  23:Src/maze.c    **** /**************************************************************************************************
  24:Src/maze.c    ****  * outline : initialize maze date
  25:Src/maze.c    ****  * argument : void
  26:Src/maze.c    ****  * return : void
  27:Src/maze.c    **** ***************************************************************************************************
  28:Src/maze.c    **** void Init_maze(void) {
  63              		.loc 1 28 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68 0000 30B4     		push	{r4, r5}
  69              	.LCFI0:
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 5, -4
  73              	.LVL0:
  74              	.LBB2:
  29:Src/maze.c    **** 	//init wall and is_search
  30:Src/maze.c    **** 	for (uint8_t i = 0; i <= mazeDef.maze_size_y; i++)
  75              		.loc 1 30 0
  76 0002 0020     		movs	r0, #0
  77 0004 18E0     		b	.L5
  78              	.LVL1:
  79              	.L6:
  80              	.LBB3:
  31:Src/maze.c    **** 	{
  32:Src/maze.c    **** 		for (uint8_t j = 0; j <= mazeDef.maze_size_x; j++)
  33:Src/maze.c    **** 		{
  34:Src/maze.c    **** 			maze.wall_east[i][j] = 0;
  81              		.loc 1 34 0 discriminator 3
  82 0006 214B     		ldr	r3, .L13
  83 0008 03EB0013 		add	r3, r3, r0, lsl #4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 3


  84 000c 0B44     		add	r3, r3, r1
  85 000e 0022     		movs	r2, #0
  86 0010 83F80223 		strb	r2, [r3, #770]
  35:Src/maze.c    **** 			maze.wall_north[i][j] = 0;
  87              		.loc 1 35 0 discriminator 3
  88 0014 83F80222 		strb	r2, [r3, #514]
  36:Src/maze.c    **** 			maze.wall_south[i][j] = 0;
  89              		.loc 1 36 0 discriminator 3
  90 0018 83F80224 		strb	r2, [r3, #1026]
  37:Src/maze.c    **** 			maze.wall_west[i][j] = 0;
  91              		.loc 1 37 0 discriminator 3
  92 001c 83F80225 		strb	r2, [r3, #1282]
  38:Src/maze.c    **** 			maze.is_search[i][j] = 0;
  93              		.loc 1 38 0 discriminator 3
  94 0020 83F80226 		strb	r2, [r3, #1538]
  39:Src/maze.c    **** 			maze.goal[i][j] = 0;
  95              		.loc 1 39 0 discriminator 3
  96 0024 83F80221 		strb	r2, [r3, #258]
  32:Src/maze.c    **** 		{
  97              		.loc 1 32 0 discriminator 3
  98 0028 0131     		adds	r1, r1, #1
  99              	.LVL2:
 100 002a C9B2     		uxtb	r1, r1
 101              	.LVL3:
 102              	.L7:
  32:Src/maze.c    **** 		{
 103              		.loc 1 32 0 is_stmt 0 discriminator 1
 104 002c 184B     		ldr	r3, .L13+4
 105 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 106 0030 8B42     		cmp	r3, r1
 107 0032 E8D2     		bcs	.L6
 108              	.LBE3:
  30:Src/maze.c    **** 	{
 109              		.loc 1 30 0 is_stmt 1 discriminator 2
 110 0034 0130     		adds	r0, r0, #1
 111              	.LVL4:
 112 0036 C0B2     		uxtb	r0, r0
 113              	.LVL5:
 114              	.L5:
  30:Src/maze.c    **** 	{
 115              		.loc 1 30 0 is_stmt 0 discriminator 1
 116 0038 154B     		ldr	r3, .L13+4
 117 003a 5C78     		ldrb	r4, [r3, #1]	@ zero_extendqisi2
 118 003c 8442     		cmp	r4, r0
 119 003e 01D3     		bcc	.L12
 120              	.LBB4:
  32:Src/maze.c    **** 		{
 121              		.loc 1 32 0 is_stmt 1
 122 0040 0021     		movs	r1, #0
 123 0042 F3E7     		b	.L7
 124              	.L12:
 125              	.LBE4:
 126              	.LBE2:
  40:Src/maze.c    **** 		}
  41:Src/maze.c    **** 	}
  42:Src/maze.c    **** 	//input start wall
  43:Src/maze.c    **** 	maze.wall_east[0][0] = 1;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 4


 127              		.loc 1 43 0
 128 0044 114B     		ldr	r3, .L13
 129 0046 0122     		movs	r2, #1
 130 0048 83F80223 		strb	r2, [r3, #770]
  44:Src/maze.c    **** 	maze.wall_west[1][0] = 1;
 131              		.loc 1 44 0
 132 004c 83F81225 		strb	r2, [r3, #1298]
 133              	.LVL6:
 134              	.LBB5:
  45:Src/maze.c    **** 	//input outer
  46:Src/maze.c    **** 	for (uint8_t i = 0; i <= mazeDef.maze_size_x; i++)
 135              		.loc 1 46 0
 136 0050 0023     		movs	r3, #0
 137 0052 15E0     		b	.L8
 138              	.LVL7:
 139              	.L9:
  47:Src/maze.c    **** 	{
  48:Src/maze.c    **** 		maze.wall_east[mazeDef.maze_size_y][i] = 1;
 140              		.loc 1 48 0 discriminator 3
 141 0054 0D4A     		ldr	r2, .L13
 142 0056 02EB0410 		add	r0, r2, r4, lsl #4
 143 005a 1844     		add	r0, r0, r3
 144 005c 0121     		movs	r1, #1
 145 005e 80F80213 		strb	r1, [r0, #770]
  49:Src/maze.c    **** 		maze.wall_west[0][i] = 1;
 146              		.loc 1 49 0 discriminator 3
 147 0062 D018     		adds	r0, r2, r3
 148 0064 80F80215 		strb	r1, [r0, #1282]
  50:Src/maze.c    ****         maze.wall_south[i][0] = 1;
 149              		.loc 1 50 0 discriminator 3
 150 0068 03F14000 		add	r0, r3, #64
 151 006c 02EB0010 		add	r0, r2, r0, lsl #4
 152 0070 8170     		strb	r1, [r0, #2]
  51:Src/maze.c    **** 		maze.wall_north[i][mazeDef.maze_size_x] = 1;
 153              		.loc 1 51 0 discriminator 3
 154 0072 02EB0312 		add	r2, r2, r3, lsl #4
 155 0076 2A44     		add	r2, r2, r5
 156 0078 82F80212 		strb	r1, [r2, #514]
  46:Src/maze.c    **** 	{
 157              		.loc 1 46 0 discriminator 3
 158 007c 0B44     		add	r3, r3, r1
 159              	.LVL8:
 160 007e DBB2     		uxtb	r3, r3
 161              	.LVL9:
 162              	.L8:
  46:Src/maze.c    **** 	{
 163              		.loc 1 46 0 is_stmt 0 discriminator 1
 164 0080 034A     		ldr	r2, .L13+4
 165 0082 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 166 0084 9D42     		cmp	r5, r3
 167 0086 E5D2     		bcs	.L9
 168              	.LBE5:
  52:Src/maze.c    **** 	}
  53:Src/maze.c    **** }
 169              		.loc 1 53 0 is_stmt 1
 170 0088 30BC     		pop	{r4, r5}
 171              	.LCFI1:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 5


 172              		.cfi_restore 5
 173              		.cfi_restore 4
 174              		.cfi_def_cfa_offset 0
 175 008a 7047     		bx	lr
 176              	.L14:
 177              		.align	2
 178              	.L13:
 179 008c 00000000 		.word	maze
 180 0090 00000000 		.word	mazeDef
 181              		.cfi_endproc
 182              	.LFE127:
 184              		.section	.text.MAZE_Create_Step,"ax",%progbits
 185              		.align	1
 186              		.global	MAZE_Create_Step
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv4-sp-d16
 192              	MAZE_Create_Step:
 193              	.LFB128:
  54:Src/maze.c    **** 
  55:Src/maze.c    **** 
  56:Src/maze.c    **** /**************************************************************************************************
  57:Src/maze.c    ****  * outline : create map
  58:Src/maze.c    ****  * argument : void
  59:Src/maze.c    ****  * return : void
  60:Src/maze.c    **** ***************************************************************************************************
  61:Src/maze.c    **** void MAZE_Create_Step(void) {
 194              		.loc 1 61 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 199              	.LCFI2:
 200              		.cfi_def_cfa_offset 20
 201              		.cfi_offset 4, -20
 202              		.cfi_offset 5, -16
 203              		.cfi_offset 6, -12
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
  62:Src/maze.c    **** 	maze.goal[mazeDef.maze_goal_y][mazeDef.maze_goal_x] = 1;
 206              		.loc 1 62 0
 207 0002 5B4B     		ldr	r3, .L43
 208 0004 D978     		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 209 0006 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 210 0008 5A4B     		ldr	r3, .L43+4
 211 000a 03EB0113 		add	r3, r3, r1, lsl #4
 212 000e 1344     		add	r3, r3, r2
 213 0010 0122     		movs	r2, #1
 214 0012 83F80221 		strb	r2, [r3, #258]
 215              	.LVL10:
 216              	.LBB6:
  63:Src/maze.c    **** 	for (uint8_t i = 0; i <= mazeDef.maze_size_y; i++)
 217              		.loc 1 63 0
 218 0016 0021     		movs	r1, #0
 219 0018 1CE0     		b	.L16
 220              	.LVL11:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 6


 221              	.L34:
 222              	.LBB7:
  64:Src/maze.c    **** 	{
  65:Src/maze.c    **** 		for (uint8_t j = 0; j <= mazeDef.maze_size_x; j++)
  66:Src/maze.c    **** 		{
  67:Src/maze.c    **** 			if (maze.goal[i][j] == 1) {
  68:Src/maze.c    **** 				maze.step[i][j] = 0;
 223              		.loc 1 68 0
 224 001a 564A     		ldr	r2, .L43+4
 225 001c 02EB0112 		add	r2, r2, r1, lsl #4
 226 0020 1A44     		add	r2, r2, r3
 227 0022 0020     		movs	r0, #0
 228 0024 9070     		strb	r0, [r2, #2]
 229              	.L18:
  65:Src/maze.c    **** 		{
 230              		.loc 1 65 0 discriminator 2
 231 0026 0133     		adds	r3, r3, #1
 232              	.LVL12:
 233 0028 DBB2     		uxtb	r3, r3
 234              	.LVL13:
 235              	.L20:
  65:Src/maze.c    **** 		{
 236              		.loc 1 65 0 is_stmt 0 discriminator 1
 237 002a 514A     		ldr	r2, .L43
 238 002c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 239 002e 9A42     		cmp	r2, r3
 240 0030 0ED3     		bcc	.L33
  67:Src/maze.c    **** 				maze.step[i][j] = 0;
 241              		.loc 1 67 0 is_stmt 1
 242 0032 504A     		ldr	r2, .L43+4
 243 0034 02EB0112 		add	r2, r2, r1, lsl #4
 244 0038 1A44     		add	r2, r2, r3
 245 003a 92F80221 		ldrb	r2, [r2, #258]	@ zero_extendqisi2
 246 003e 012A     		cmp	r2, #1
 247 0040 EBD0     		beq	.L34
  69:Src/maze.c    **** 			}
  70:Src/maze.c    **** 			else
  71:Src/maze.c    **** 			{
  72:Src/maze.c    **** 				maze.step[i][j] = MAX_STEP;
 248              		.loc 1 72 0
 249 0042 4C4A     		ldr	r2, .L43+4
 250 0044 02EB0112 		add	r2, r2, r1, lsl #4
 251 0048 1A44     		add	r2, r2, r3
 252 004a FF20     		movs	r0, #255
 253 004c 9070     		strb	r0, [r2, #2]
 254 004e EAE7     		b	.L18
 255              	.L33:
 256              	.LBE7:
  63:Src/maze.c    **** 	{
 257              		.loc 1 63 0 discriminator 2
 258 0050 0131     		adds	r1, r1, #1
 259              	.LVL14:
 260 0052 C9B2     		uxtb	r1, r1
 261              	.LVL15:
 262              	.L16:
  63:Src/maze.c    **** 	{
 263              		.loc 1 63 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 7


 264 0054 464B     		ldr	r3, .L43
 265 0056 5F78     		ldrb	r7, [r3, #1]	@ zero_extendqisi2
 266 0058 8F42     		cmp	r7, r1
 267 005a 01D3     		bcc	.L35
 268              	.LBB8:
  65:Src/maze.c    **** 		{
 269              		.loc 1 65 0 is_stmt 1
 270 005c 0023     		movs	r3, #0
 271 005e E4E7     		b	.L20
 272              	.L35:
 273              	.LBE8:
 274              	.LBE6:
  73:Src/maze.c    **** 			}
  74:Src/maze.c    **** 
  75:Src/maze.c    **** 		}
  76:Src/maze.c    **** 	}
  77:Src/maze.c    **** 
  78:Src/maze.c    **** 	short end_flag = 1;
  79:Src/maze.c    **** 	uint8_t stepNum = 0;
 275              		.loc 1 79 0
 276 0060 0026     		movs	r6, #0
  78:Src/maze.c    **** 	uint8_t stepNum = 0;
 277              		.loc 1 78 0
 278 0062 4FF0010C 		mov	ip, #1
 279 0066 7BE0     		b	.L21
 280              	.LVL16:
 281              	.L38:
 282              	.LBB9:
 283              	.LBB10:
  80:Src/maze.c    **** 	while (end_flag==1) {
  81:Src/maze.c    **** 		end_flag = 0;
  82:Src/maze.c    **** 		for (uint8_t i = 0; i <= mazeDef.maze_size_y; i++)
  83:Src/maze.c    **** 		{
  84:Src/maze.c    **** 			for (uint8_t j = 0; j <= mazeDef.maze_size_x; j++)
  85:Src/maze.c    **** 			{
  86:Src/maze.c    **** 				if (maze.step[i][j] == MAX_STEP) 
  87:Src/maze.c    **** 				{
  88:Src/maze.c    **** 					if (j < mazeDef.maze_size_x) //north wall
  89:Src/maze.c    **** 					{
  90:Src/maze.c    **** 						if (maze.wall_north[i][j] == 0 && maze.step[i][j+1] == stepNum) 
  91:Src/maze.c    **** 						{
  92:Src/maze.c    **** 							maze.step[i][j] = stepNum + 1;
 284              		.loc 1 92 0
 285 0068 711C     		adds	r1, r6, #1
 286 006a 424A     		ldr	r2, .L43+4
 287 006c 02EB0512 		add	r2, r2, r5, lsl #4
 288 0070 1A44     		add	r2, r2, r3
 289 0072 9170     		strb	r1, [r2, #2]
 290              	.LVL17:
  93:Src/maze.c    **** 							end_flag = 1;
 291              		.loc 1 93 0
 292 0074 E646     		mov	lr, ip
 293 0076 3EE0     		b	.L23
 294              	.LVL18:
 295              	.L39:
  94:Src/maze.c    **** 						}
  95:Src/maze.c    **** 					}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 8


  96:Src/maze.c    **** 					if (i < mazeDef.maze_size_y)//east wall
  97:Src/maze.c    **** 					{
  98:Src/maze.c    **** 						if (maze.wall_east[i][j] == 0 && maze.step[i+1][j] == stepNum) 
  99:Src/maze.c    **** 						{
 100:Src/maze.c    **** 							maze.step[i][j] = stepNum + 1;
 296              		.loc 1 100 0
 297 0078 711C     		adds	r1, r6, #1
 298 007a 3E4A     		ldr	r2, .L43+4
 299 007c 02EB0412 		add	r2, r2, r4, lsl #4
 300 0080 0244     		add	r2, r2, r0
 301 0082 9170     		strb	r1, [r2, #2]
 302              	.LVL19:
 101:Src/maze.c    **** 							end_flag = 1;
 303              		.loc 1 101 0
 304 0084 E646     		mov	lr, ip
 305 0086 47E0     		b	.L24
 306              	.LVL20:
 307              	.L40:
 102:Src/maze.c    **** 						}
 103:Src/maze.c    **** 					}
 104:Src/maze.c    **** 					if (j>0)//south wall
 105:Src/maze.c    **** 					{
 106:Src/maze.c    **** 						if (maze.wall_south[i][j] == 0 && maze.step[i][j-1]==stepNum)
 107:Src/maze.c    **** 						{
 108:Src/maze.c    **** 							maze.step[i][j] = stepNum + 1;
 308              		.loc 1 108 0
 309 0088 711C     		adds	r1, r6, #1
 310 008a 3A4A     		ldr	r2, .L43+4
 311 008c 02EB0412 		add	r2, r2, r4, lsl #4
 312 0090 0244     		add	r2, r2, r0
 313 0092 9170     		strb	r1, [r2, #2]
 314              	.LVL21:
 109:Src/maze.c    **** 							end_flag = 1;
 315              		.loc 1 109 0
 316 0094 E646     		mov	lr, ip
 317              	.LVL22:
 318              	.L25:
 110:Src/maze.c    **** 						}
 111:Src/maze.c    **** 					}
 112:Src/maze.c    **** 					if (i>0)//west wall
 319              		.loc 1 112 0
 320 0096 75B1     		cbz	r5, .L22
 113:Src/maze.c    **** 					{
 114:Src/maze.c    **** 						if (maze.wall_west[i][j] == 0 && maze.step[i-1][j]==stepNum)
 321              		.loc 1 114 0
 322 0098 364A     		ldr	r2, .L43+4
 323 009a 02EB0412 		add	r2, r2, r4, lsl #4
 324 009e 0244     		add	r2, r2, r0
 325 00a0 92F80225 		ldrb	r2, [r2, #1282]	@ zero_extendqisi2
 326 00a4 3AB9     		cbnz	r2, .L22
 327              		.loc 1 114 0 is_stmt 0 discriminator 1
 328 00a6 621E     		subs	r2, r4, #1
 329 00a8 3249     		ldr	r1, .L43+4
 330 00aa 01EB0212 		add	r2, r1, r2, lsl #4
 331 00ae 0244     		add	r2, r2, r0
 332 00b0 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 333 00b2 B242     		cmp	r2, r6
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 9


 334 00b4 43D0     		beq	.L36
 335              	.LVL23:
 336              	.L22:
  84:Src/maze.c    **** 			{
 337              		.loc 1 84 0 is_stmt 1 discriminator 2
 338 00b6 0133     		adds	r3, r3, #1
 339              	.LVL24:
 340 00b8 DBB2     		uxtb	r3, r3
 341              	.LVL25:
 342              	.L27:
  84:Src/maze.c    **** 			{
 343              		.loc 1 84 0 is_stmt 0 discriminator 1
 344 00ba 2D4A     		ldr	r2, .L43
 345 00bc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 346 00be 9942     		cmp	r1, r3
 347 00c0 45D3     		bcc	.L37
  86:Src/maze.c    **** 				{
 348              		.loc 1 86 0 is_stmt 1
 349 00c2 2C46     		mov	r4, r5
 350 00c4 1846     		mov	r0, r3
 351 00c6 2B4A     		ldr	r2, .L43+4
 352 00c8 02EB0512 		add	r2, r2, r5, lsl #4
 353 00cc 1A44     		add	r2, r2, r3
 354 00ce 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 355 00d0 FF2A     		cmp	r2, #255
 356 00d2 F0D1     		bne	.L22
  88:Src/maze.c    **** 					{
 357              		.loc 1 88 0
 358 00d4 9942     		cmp	r1, r3
 359 00d6 0ED9     		bls	.L23
  90:Src/maze.c    **** 						{
 360              		.loc 1 90 0
 361 00d8 264A     		ldr	r2, .L43+4
 362 00da 02EB0512 		add	r2, r2, r5, lsl #4
 363 00de 1A44     		add	r2, r2, r3
 364 00e0 92F80222 		ldrb	r2, [r2, #514]	@ zero_extendqisi2
 365 00e4 3AB9     		cbnz	r2, .L23
  90:Src/maze.c    **** 						{
 366              		.loc 1 90 0 is_stmt 0 discriminator 1
 367 00e6 5A1C     		adds	r2, r3, #1
 368 00e8 2249     		ldr	r1, .L43+4
 369 00ea 01EB0511 		add	r1, r1, r5, lsl #4
 370 00ee 0A44     		add	r2, r2, r1
 371 00f0 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 372 00f2 B242     		cmp	r2, r6
 373 00f4 B8D0     		beq	.L38
 374              	.LVL26:
 375              	.L23:
  96:Src/maze.c    **** 					{
 376              		.loc 1 96 0 is_stmt 1
 377 00f6 AF42     		cmp	r7, r5
 378 00f8 0ED9     		bls	.L24
  98:Src/maze.c    **** 						{
 379              		.loc 1 98 0
 380 00fa 1E4A     		ldr	r2, .L43+4
 381 00fc 02EB0412 		add	r2, r2, r4, lsl #4
 382 0100 0244     		add	r2, r2, r0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 10


 383 0102 92F80223 		ldrb	r2, [r2, #770]	@ zero_extendqisi2
 384 0106 3AB9     		cbnz	r2, .L24
  98:Src/maze.c    **** 						{
 385              		.loc 1 98 0 is_stmt 0 discriminator 1
 386 0108 621C     		adds	r2, r4, #1
 387 010a 1A49     		ldr	r1, .L43+4
 388 010c 01EB0212 		add	r2, r1, r2, lsl #4
 389 0110 0244     		add	r2, r2, r0
 390 0112 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 391 0114 B242     		cmp	r2, r6
 392 0116 AFD0     		beq	.L39
 393              	.LVL27:
 394              	.L24:
 104:Src/maze.c    **** 					{
 395              		.loc 1 104 0 is_stmt 1
 396 0118 002B     		cmp	r3, #0
 397 011a BCD0     		beq	.L25
 106:Src/maze.c    **** 						{
 398              		.loc 1 106 0
 399 011c 154A     		ldr	r2, .L43+4
 400 011e 02EB0412 		add	r2, r2, r4, lsl #4
 401 0122 0244     		add	r2, r2, r0
 402 0124 92F80224 		ldrb	r2, [r2, #1026]	@ zero_extendqisi2
 403 0128 002A     		cmp	r2, #0
 404 012a B4D1     		bne	.L25
 106:Src/maze.c    **** 						{
 405              		.loc 1 106 0 is_stmt 0 discriminator 1
 406 012c 421E     		subs	r2, r0, #1
 407 012e 1149     		ldr	r1, .L43+4
 408 0130 01EB0411 		add	r1, r1, r4, lsl #4
 409 0134 0A44     		add	r2, r2, r1
 410 0136 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 411 0138 B242     		cmp	r2, r6
 412 013a ACD1     		bne	.L25
 413 013c A4E7     		b	.L40
 414              	.L36:
 115:Src/maze.c    **** 						{
 116:Src/maze.c    **** 							maze.step[i][j] = stepNum + 1;
 415              		.loc 1 116 0 is_stmt 1
 416 013e 711C     		adds	r1, r6, #1
 417 0140 0C4A     		ldr	r2, .L43+4
 418 0142 02EB0414 		add	r4, r2, r4, lsl #4
 419 0146 2044     		add	r0, r0, r4
 420 0148 8170     		strb	r1, [r0, #2]
 421              	.LVL28:
 117:Src/maze.c    **** 							end_flag = 1;
 422              		.loc 1 117 0
 423 014a E646     		mov	lr, ip
 424 014c B3E7     		b	.L22
 425              	.LVL29:
 426              	.L37:
 427              	.LBE10:
  82:Src/maze.c    **** 		{
 428              		.loc 1 82 0 discriminator 2
 429 014e 0135     		adds	r5, r5, #1
 430              	.LVL30:
 431 0150 EDB2     		uxtb	r5, r5
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 11


 432              	.LVL31:
 433              	.L28:
  82:Src/maze.c    **** 		{
 434              		.loc 1 82 0 is_stmt 0 discriminator 1
 435 0152 AF42     		cmp	r7, r5
 436 0154 01D3     		bcc	.L41
 437              	.LBB11:
  84:Src/maze.c    **** 			{
 438              		.loc 1 84 0 is_stmt 1
 439 0156 0023     		movs	r3, #0
 440 0158 AFE7     		b	.L27
 441              	.L41:
 442              	.LBE11:
 443              	.LBE9:
 118:Src/maze.c    **** 						}
 119:Src/maze.c    **** 					}
 120:Src/maze.c    **** 				}
 121:Src/maze.c    **** 			}
 122:Src/maze.c    **** 		}
 123:Src/maze.c    **** 		stepNum ++;
 444              		.loc 1 123 0
 445 015a 0136     		adds	r6, r6, #1
 446              	.LVL32:
 447 015c F6B2     		uxtb	r6, r6
 448              	.LVL33:
 449 015e F446     		mov	ip, lr
 450              	.LVL34:
 451              	.L21:
  80:Src/maze.c    **** 		end_flag = 0;
 452              		.loc 1 80 0
 453 0160 BCF1010F 		cmp	ip, #1
 454 0164 02D1     		bne	.L42
 455              	.LBB12:
  82:Src/maze.c    **** 		{
 456              		.loc 1 82 0
 457 0166 0025     		movs	r5, #0
 458              	.LBE12:
  81:Src/maze.c    **** 		for (uint8_t i = 0; i <= mazeDef.maze_size_y; i++)
 459              		.loc 1 81 0
 460 0168 AE46     		mov	lr, r5
 461 016a F2E7     		b	.L28
 462              	.L42:
 124:Src/maze.c    **** 	}
 125:Src/maze.c    **** }
 463              		.loc 1 125 0
 464 016c F0BD     		pop	{r4, r5, r6, r7, pc}
 465              	.LVL35:
 466              	.L44:
 467 016e 00BF     		.align	2
 468              	.L43:
 469 0170 00000000 		.word	mazeDef
 470 0174 00000000 		.word	maze
 471              		.cfi_endproc
 472              	.LFE128:
 474              		.section	.text.MAZE_Out_Step,"ax",%progbits
 475              		.align	1
 476              		.global	MAZE_Out_Step
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 12


 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 480              		.fpu fpv4-sp-d16
 482              	MAZE_Out_Step:
 483              	.LFB129:
 126:Src/maze.c    **** 
 127:Src/maze.c    **** 
 128:Src/maze.c    **** /**************************************************************************************************
 129:Src/maze.c    ****  * outline : output step
 130:Src/maze.c    ****  * argument : void
 131:Src/maze.c    ****  * return : void
 132:Src/maze.c    **** ***************************************************************************************************
 133:Src/maze.c    **** void MAZE_Out_Step(void) {
 484              		.loc 1 133 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 489              	.LCFI3:
 490              		.cfi_def_cfa_offset 24
 491              		.cfi_offset 3, -24
 492              		.cfi_offset 4, -20
 493              		.cfi_offset 5, -16
 494              		.cfi_offset 6, -12
 495              		.cfi_offset 7, -8
 496              		.cfi_offset 14, -4
 497              	.LVL36:
 498              	.LBB13:
 134:Src/maze.c    **** 	for (uint8_t i = 0; i <= mazeDef.maze_size_y; i++)
 499              		.loc 1 134 0
 500 0002 0025     		movs	r5, #0
 501 0004 42E0     		b	.L46
 502              	.LVL37:
 503              	.L60:
 504              	.LBB14:
 135:Src/maze.c    **** 	{
 136:Src/maze.c    **** 		for (uint8_t j = 0; j <= mazeDef.maze_size_x; j++)
 137:Src/maze.c    **** 		{
 138:Src/maze.c    **** 			printf("+");
 139:Src/maze.c    **** 			if (maze.wall_west[i][j] == 1)
 140:Src/maze.c    **** 			{
 141:Src/maze.c    **** 				printf("---");
 505              		.loc 1 141 0
 506 0006 2D48     		ldr	r0, .L64
 507 0008 FFF7FEFF 		bl	printf
 508              	.LVL38:
 509              	.L48:
 136:Src/maze.c    **** 		{
 510              		.loc 1 136 0 discriminator 2
 511 000c 0134     		adds	r4, r4, #1
 512              	.LVL39:
 513 000e E4B2     		uxtb	r4, r4
 514              	.LVL40:
 515              	.L54:
 136:Src/maze.c    **** 		{
 516              		.loc 1 136 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 13


 517 0010 2B4B     		ldr	r3, .L64+4
 518 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 519 0014 A342     		cmp	r3, r4
 520 0016 10D3     		bcc	.L59
 138:Src/maze.c    **** 			if (maze.wall_west[i][j] == 1)
 521              		.loc 1 138 0 is_stmt 1
 522 0018 2B20     		movs	r0, #43
 523 001a FFF7FEFF 		bl	putchar
 524              	.LVL41:
 139:Src/maze.c    **** 			{
 525              		.loc 1 139 0
 526 001e 294B     		ldr	r3, .L64+8
 527 0020 03EB0513 		add	r3, r3, r5, lsl #4
 528 0024 2344     		add	r3, r3, r4
 529 0026 93F80235 		ldrb	r3, [r3, #1282]	@ zero_extendqisi2
 530 002a 012B     		cmp	r3, #1
 531 002c EBD0     		beq	.L60
 142:Src/maze.c    **** 			}
 143:Src/maze.c    **** 			else if(maze.wall_west[i][j] == 0)
 532              		.loc 1 143 0
 533 002e 002B     		cmp	r3, #0
 534 0030 ECD1     		bne	.L48
 144:Src/maze.c    **** 			{
 145:Src/maze.c    **** 				printf("   ");
 535              		.loc 1 145 0
 536 0032 2548     		ldr	r0, .L64+12
 537 0034 FFF7FEFF 		bl	printf
 538              	.LVL42:
 539 0038 E8E7     		b	.L48
 540              	.L59:
 541              	.LBE14:
 146:Src/maze.c    **** 			}
 147:Src/maze.c    **** 		}
 148:Src/maze.c    **** 		printf("+\r\n");
 542              		.loc 1 148 0
 543 003a 2448     		ldr	r0, .L64+16
 544 003c FFF7FEFF 		bl	puts
 545              	.LVL43:
 546              	.LBB15:
 149:Src/maze.c    **** 		for (uint8_t j = 0; j <= mazeDef.maze_size_x; j++)
 547              		.loc 1 149 0
 548 0040 0024     		movs	r4, #0
 549              	.LVL44:
 550 0042 0CE0     		b	.L50
 551              	.LVL45:
 552              	.L62:
 150:Src/maze.c    **** 		{
 151:Src/maze.c    **** 			if (maze.wall_south[i][j] == 1)
 152:Src/maze.c    **** 			{
 153:Src/maze.c    **** 				printf("|");
 553              		.loc 1 153 0
 554 0044 7C20     		movs	r0, #124
 555 0046 FFF7FEFF 		bl	putchar
 556              	.LVL46:
 557              	.L52:
 154:Src/maze.c    **** 			}
 155:Src/maze.c    **** 			else
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 14


 156:Src/maze.c    **** 			{
 157:Src/maze.c    **** 				printf(" ");
 158:Src/maze.c    **** 			}
 159:Src/maze.c    **** 			printf("%3d", maze.step[i][j]);
 558              		.loc 1 159 0 discriminator 2
 559 004a 1E4B     		ldr	r3, .L64+8
 560 004c 03EB0713 		add	r3, r3, r7, lsl #4
 561 0050 3344     		add	r3, r3, r6
 562 0052 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 563 0054 1E48     		ldr	r0, .L64+20
 564 0056 FFF7FEFF 		bl	printf
 565              	.LVL47:
 149:Src/maze.c    **** 		{
 566              		.loc 1 149 0 discriminator 2
 567 005a 0134     		adds	r4, r4, #1
 568              	.LVL48:
 569 005c E4B2     		uxtb	r4, r4
 570              	.LVL49:
 571              	.L50:
 149:Src/maze.c    **** 		{
 572              		.loc 1 149 0 is_stmt 0 discriminator 1
 573 005e 184B     		ldr	r3, .L64+4
 574 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 575 0062 A342     		cmp	r3, r4
 576 0064 0DD3     		bcc	.L61
 151:Src/maze.c    **** 			{
 577              		.loc 1 151 0 is_stmt 1
 578 0066 2F46     		mov	r7, r5
 579 0068 2646     		mov	r6, r4
 580 006a 164B     		ldr	r3, .L64+8
 581 006c 03EB0513 		add	r3, r3, r5, lsl #4
 582 0070 2344     		add	r3, r3, r4
 583 0072 93F80234 		ldrb	r3, [r3, #1026]	@ zero_extendqisi2
 584 0076 012B     		cmp	r3, #1
 585 0078 E4D0     		beq	.L62
 157:Src/maze.c    **** 			}
 586              		.loc 1 157 0
 587 007a 2020     		movs	r0, #32
 588 007c FFF7FEFF 		bl	putchar
 589              	.LVL50:
 590 0080 E3E7     		b	.L52
 591              	.L61:
 592              	.LBE15:
 160:Src/maze.c    **** 		}
 161:Src/maze.c    **** 		printf("|\r\n");
 593              		.loc 1 161 0 discriminator 2
 594 0082 1448     		ldr	r0, .L64+24
 595 0084 FFF7FEFF 		bl	puts
 596              	.LVL51:
 134:Src/maze.c    **** 	{
 597              		.loc 1 134 0 discriminator 2
 598 0088 0135     		adds	r5, r5, #1
 599              	.LVL52:
 600 008a EDB2     		uxtb	r5, r5
 601              	.LVL53:
 602              	.L46:
 134:Src/maze.c    **** 	{
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 15


 603              		.loc 1 134 0 is_stmt 0 discriminator 1
 604 008c 0C4B     		ldr	r3, .L64+4
 605 008e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 606 0090 AB42     		cmp	r3, r5
 607 0092 01D3     		bcc	.L63
 608              	.LBB16:
 136:Src/maze.c    **** 		{
 609              		.loc 1 136 0 is_stmt 1
 610 0094 0024     		movs	r4, #0
 611 0096 BBE7     		b	.L54
 612              	.L63:
 613              	.LBE16:
 614              	.LBE13:
 615              	.LBB17:
 162:Src/maze.c    **** 	}
 163:Src/maze.c    **** 	for (uint8_t j = 0; j <= mazeDef.maze_size_x; j++)
 616              		.loc 1 163 0
 617 0098 0024     		movs	r4, #0
 618 009a 07E0     		b	.L55
 619              	.LVL54:
 620              	.L56:
 164:Src/maze.c    **** 	{
 165:Src/maze.c    **** 		printf("+");
 621              		.loc 1 165 0 discriminator 3
 622 009c 2B20     		movs	r0, #43
 623 009e FFF7FEFF 		bl	putchar
 624              	.LVL55:
 166:Src/maze.c    **** 		printf("---");
 625              		.loc 1 166 0 discriminator 3
 626 00a2 0648     		ldr	r0, .L64
 627 00a4 FFF7FEFF 		bl	printf
 628              	.LVL56:
 163:Src/maze.c    **** 	{
 629              		.loc 1 163 0 discriminator 3
 630 00a8 0134     		adds	r4, r4, #1
 631              	.LVL57:
 632 00aa E4B2     		uxtb	r4, r4
 633              	.LVL58:
 634              	.L55:
 163:Src/maze.c    **** 	{
 635              		.loc 1 163 0 is_stmt 0 discriminator 1
 636 00ac 044B     		ldr	r3, .L64+4
 637 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 638 00b0 A342     		cmp	r3, r4
 639 00b2 F3D2     		bcs	.L56
 640              	.LBE17:
 167:Src/maze.c    **** 	}
 168:Src/maze.c    **** 	printf("+\r\n\n");
 641              		.loc 1 168 0 is_stmt 1
 642 00b4 0848     		ldr	r0, .L64+28
 643 00b6 FFF7FEFF 		bl	puts
 644              	.LVL59:
 169:Src/maze.c    **** }...
 645              		.loc 1 169 0
 646 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 647              	.LVL60:
 648              	.L65:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 16


 649              		.align	2
 650              	.L64:
 651 00bc 00000000 		.word	.LC0
 652 00c0 00000000 		.word	mazeDef
 653 00c4 00000000 		.word	maze
 654 00c8 04000000 		.word	.LC1
 655 00cc 08000000 		.word	.LC2
 656 00d0 0C000000 		.word	.LC3
 657 00d4 10000000 		.word	.LC4
 658 00d8 14000000 		.word	.LC5
 659              		.cfi_endproc
 660              	.LFE129:
 662              		.comm	maze,1795,4
 663              		.comm	mazeDef,4,4
 664              		.section	.rodata.MAZE_Out_Step.str1.4,"aMS",%progbits,1
 665              		.align	2
 666              	.LC0:
 667 0000 2D2D2D00 		.ascii	"---\000"
 668              	.LC1:
 669 0004 20202000 		.ascii	"   \000"
 670              	.LC2:
 671 0008 2B0D00   		.ascii	"+\015\000"
 672 000b 00       		.space	1
 673              	.LC3:
 674 000c 25336400 		.ascii	"%3d\000"
 675              	.LC4:
 676 0010 7C0D00   		.ascii	"|\015\000"
 677 0013 00       		.space	1
 678              	.LC5:
 679 0014 2B0D0A00 		.ascii	"+\015\012\000"
 680              		.text
 681              	.Letext0:
 682              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 683              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 684              		.file 4 "Inc/maze.h"
 685              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 686              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 687              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 688              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 689              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 690              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 691              		.file 11 "<built-in>"
 692              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 maze.c
C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s:18     .text.Maze_Set:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s:25     .text.Maze_Set:00000000 Maze_Set
C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s:49     .text.Maze_Set:00000010 $d
                            *COM*:00000004 mazeDef
C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s:54     .text.Init_maze:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s:61     .text.Init_maze:00000000 Init_maze
C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s:179    .text.Init_maze:0000008c $d
                            *COM*:00000703 maze
C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s:185    .text.MAZE_Create_Step:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s:192    .text.MAZE_Create_Step:00000000 MAZE_Create_Step
C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s:469    .text.MAZE_Create_Step:00000170 $d
C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s:475    .text.MAZE_Out_Step:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s:482    .text.MAZE_Out_Step:00000000 MAZE_Out_Step
C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s:651    .text.MAZE_Out_Step:000000bc $d
C:\Users\kotaro\AppData\Local\Temp\cckCpOJ8.s:665    .rodata.MAZE_Out_Step.str1.4:00000000 $d

UNDEFINED SYMBOLS
printf
putchar
puts
