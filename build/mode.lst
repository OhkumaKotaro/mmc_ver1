ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Mode_select,"ax",%progbits
  18              		.align	1
  19              		.global	Mode_select
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Mode_select:
  26              	.LFB126:
  27              		.file 1 "Src/mode.c"
   1:Src/mode.c    **** #include "mode.h"
   2:Src/mode.c    **** #include "global.h"
   3:Src/mode.c    **** #include "gpio.h"
   4:Src/mode.c    **** #include "tim.h"
   5:Src/mode.c    **** #include "motion.h"
   6:Src/mode.c    **** #include "control.h"
   7:Src/mode.c    **** #include "spi.h"
   8:Src/mode.c    **** 
   9:Src/mode.c    **** maze_t maze;
  10:Src/mode.c    **** 
  11:Src/mode.c    **** 
  12:Src/mode.c    **** /****************************************************************************************
  13:Src/mode.c    ****  * outline  : return mode nomber
  14:Src/mode.c    ****  * argument : void
  15:Src/mode.c    ****  * return   : mode nomber 
  16:Src/mode.c    **** ********************************************************************************************/
  17:Src/mode.c    **** int8_t Mode_select(void){
  28              		.loc 1 17 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LVL0:
  18:Src/mode.c    ****     int8_t mode=0;
  38              		.loc 1 18 0
  39 0002 0024     		movs	r4, #0
  40 0004 1CE0     		b	.L7
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s 			page 2


  41              	.LVL1:
  42              	.L3:
  19:Src/mode.c    ****     while(1){
  20:Src/mode.c    ****         if((int16_t)enc.distance_l > 30 || (int16_t)enc.distance_l < -30){
  21:Src/mode.c    ****             if((int16_t)enc.distance_l > 30){
  22:Src/mode.c    ****                 mode++;
  23:Src/mode.c    ****             }else if((int16_t)enc.distance_l < -30){
  43              		.loc 1 23 0
  44 0006 13F11E0F 		cmn	r3, #30
  45 000a 2ADA     		bge	.L4
  24:Src/mode.c    ****                 mode--;
  46              		.loc 1 24 0
  47 000c 013C     		subs	r4, r4, #1
  48              	.LVL2:
  49 000e 64B2     		sxtb	r4, r4
  50              	.LVL3:
  51 0010 27E0     		b	.L4
  52              	.L8:
  25:Src/mode.c    ****             }
  26:Src/mode.c    ****             if(mode > 6){
  27:Src/mode.c    ****                 mode = 0;
  53              		.loc 1 27 0
  54 0012 0024     		movs	r4, #0
  55              	.LVL4:
  56              	.L5:
  28:Src/mode.c    ****             }else if(mode < 0){
  29:Src/mode.c    ****                 mode = 6;
  30:Src/mode.c    ****             }
  31:Src/mode.c    ****             enc.distance_l = 0;
  57              		.loc 1 31 0
  58 0014 184B     		ldr	r3, .L13
  59 0016 0022     		movs	r2, #0
  60 0018 DA61     		str	r2, [r3, #28]	@ float
  32:Src/mode.c    ****             Output_Buzzer(170-10*mode);
  61              		.loc 1 32 0
  62 001a C4EB4413 		rsb	r3, r4, r4, lsl #5
  63 001e C4EB8303 		rsb	r3, r4, r3, lsl #2
  64 0022 5800     		lsls	r0, r3, #1
  65 0024 C0B2     		uxtb	r0, r0
  66 0026 5638     		subs	r0, r0, #86
  67 0028 00F0FE00 		and	r0, r0, #254
  68 002c FFF7FEFF 		bl	Output_Buzzer
  69              	.LVL5:
  70              	.L2:
  33:Src/mode.c    ****         }
  34:Src/mode.c    ****         if(Push()==ON){
  71              		.loc 1 34 0
  72 0030 FFF7FEFF 		bl	Push
  73              	.LVL6:
  74 0034 0128     		cmp	r0, #1
  75 0036 1AD0     		beq	.L11
  35:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
  36:Src/mode.c    ****             break;
  37:Src/mode.c    ****         }
  38:Src/mode.c    ****         printf("%d\r",mode);
  76              		.loc 1 38 0
  77 0038 2146     		mov	r1, r4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s 			page 3


  78 003a 1048     		ldr	r0, .L13+4
  79 003c FFF7FEFF 		bl	printf
  80              	.LVL7:
  81              	.L7:
  20:Src/mode.c    ****             if((int16_t)enc.distance_l > 30){
  82              		.loc 1 20 0
  83 0040 0D4B     		ldr	r3, .L13
  84 0042 D3ED077A 		vldr.32	s15, [r3, #28]
  85 0046 FDEEE77A 		vcvt.s32.f32	s15, s15
  86 004a 17EE903A 		vmov	r3, s15	@ int
  87 004e 1BB2     		sxth	r3, r3
  88 0050 03F11E02 		add	r2, r3, #30
  89 0054 92B2     		uxth	r2, r2
  90 0056 3C2A     		cmp	r2, #60
  91 0058 EAD9     		bls	.L2
  21:Src/mode.c    ****                 mode++;
  92              		.loc 1 21 0
  93 005a 1E2B     		cmp	r3, #30
  94 005c D3DD     		ble	.L3
  22:Src/mode.c    ****             }else if((int16_t)enc.distance_l < -30){
  95              		.loc 1 22 0
  96 005e 0134     		adds	r4, r4, #1
  97              	.LVL8:
  98 0060 64B2     		sxtb	r4, r4
  99              	.LVL9:
 100              	.L4:
  26:Src/mode.c    ****                 mode = 0;
 101              		.loc 1 26 0
 102 0062 062C     		cmp	r4, #6
 103 0064 D5DC     		bgt	.L8
  28:Src/mode.c    ****                 mode = 6;
 104              		.loc 1 28 0
 105 0066 002C     		cmp	r4, #0
 106 0068 D4DA     		bge	.L5
  29:Src/mode.c    ****             }
 107              		.loc 1 29 0
 108 006a 0624     		movs	r4, #6
 109              	.LVL10:
 110 006c D2E7     		b	.L5
 111              	.LVL11:
 112              	.L11:
  35:Src/mode.c    ****             break;
 113              		.loc 1 35 0
 114 006e 4C20     		movs	r0, #76
 115 0070 FFF7FEFF 		bl	Output_Buzzer
 116              	.LVL12:
  39:Src/mode.c    ****     }
  40:Src/mode.c    ****     return mode;
  41:Src/mode.c    **** }
 117              		.loc 1 41 0
 118 0074 2046     		mov	r0, r4
 119 0076 10BD     		pop	{r4, pc}
 120              	.LVL13:
 121              	.L14:
 122              		.align	2
 123              	.L13:
 124 0078 00000000 		.word	enc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s 			page 4


 125 007c 00000000 		.word	.LC0
 126              		.cfi_endproc
 127              	.LFE126:
 129              		.section	.text.LeftHand,"ax",%progbits
 130              		.align	1
 131              		.global	LeftHand
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	LeftHand:
 138              	.LFB128:
  42:Src/mode.c    **** 
  43:Src/mode.c    **** 
  44:Src/mode.c    **** /****************************************************************************************
  45:Src/mode.c    ****  * outline  : wright mode 
  46:Src/mode.c    ****  * argument : mode nomber
  47:Src/mode.c    ****  * return   : void
  48:Src/mode.c    **** ********************************************************************************************/
  49:Src/mode.c    **** void Mode_mouse(int8_t mode){
  50:Src/mode.c    ****     switch(mode){
  51:Src/mode.c    ****         case 0:
  52:Src/mode.c    ****             Ennkai();
  53:Src/mode.c    ****             //Show_log();
  54:Src/mode.c    ****             break;
  55:Src/mode.c    ****         case 1:
  56:Src/mode.c    ****             Mode_Straight();
  57:Src/mode.c    ****             break;
  58:Src/mode.c    ****         case 2:
  59:Src/mode.c    ****             Mode_Turn_Half();
  60:Src/mode.c    ****             break;
  61:Src/mode.c    ****         case 3:
  62:Src/mode.c    ****             Normal_Straight();
  63:Src/mode.c    ****             break;
  64:Src/mode.c    ****         case 4:
  65:Src/mode.c    ****             Normal_Turn_Half();
  66:Src/mode.c    ****             break;
  67:Src/mode.c    ****         case 5:
  68:Src/mode.c    ****             Sensor_Mode();
  69:Src/mode.c    ****             break;
  70:Src/mode.c    ****         case 6:
  71:Src/mode.c    ****             Test_Create_Map();
  72:Src/mode.c    ****             break;
  73:Src/mode.c    ****         default:
  74:Src/mode.c    ****             break;
  75:Src/mode.c    ****     }
  76:Src/mode.c    **** }
  77:Src/mode.c    **** 
  78:Src/mode.c    **** 
  79:Src/mode.c    **** void LeftHand(void){
 139              		.loc 1 79 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143 0000 08B5     		push	{r3, lr}
 144              	.LCFI1:
 145              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s 			page 5


 146              		.cfi_offset 3, -8
 147              		.cfi_offset 14, -4
 148              	.LVL14:
  80:Src/mode.c    ****     short flag_goal = false;
  81:Src/mode.c    ****     while(flag_goal==false){
 149              		.loc 1 81 0
 150 0002 02E0     		b	.L16
 151              	.L24:
  82:Src/mode.c    ****         if(sensor.wall[2] == false){
  83:Src/mode.c    ****             Turn_Quarter(0);
 152              		.loc 1 83 0
 153 0004 0020     		movs	r0, #0
 154 0006 FFF7FEFF 		bl	Turn_Quarter
 155              	.LVL15:
 156              	.L16:
  82:Src/mode.c    ****         if(sensor.wall[2] == false){
 157              		.loc 1 82 0
 158 000a 0D4B     		ldr	r3, .L27
 159 000c 9B7E     		ldrb	r3, [r3, #26]	@ zero_extendqisi2
 160 000e 002B     		cmp	r3, #0
 161 0010 F8D0     		beq	.L24
  84:Src/mode.c    ****         }else if(sensor.wall[0]==true && sensor.wall[3]==true){
 162              		.loc 1 84 0
 163 0012 0B4B     		ldr	r3, .L27
 164 0014 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 165 0016 012B     		cmp	r3, #1
 166 0018 06D0     		beq	.L25
 167              	.L18:
  85:Src/mode.c    ****             Straight();
  86:Src/mode.c    ****         }else if(sensor.wall[1]==true){
 168              		.loc 1 86 0
 169 001a 094B     		ldr	r3, .L27
 170 001c 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 171 001e 012B     		cmp	r3, #1
 172 0020 09D0     		beq	.L26
  87:Src/mode.c    ****             Turn_Quarter(1);
  88:Src/mode.c    ****         }else{
  89:Src/mode.c    ****             Turn_Half();
 173              		.loc 1 89 0
 174 0022 FFF7FEFF 		bl	Turn_Half
 175              	.LVL16:
 176 0026 F0E7     		b	.L16
 177              	.L25:
  84:Src/mode.c    ****             Straight();
 178              		.loc 1 84 0 discriminator 1
 179 0028 054B     		ldr	r3, .L27
 180 002a DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 181 002c 012B     		cmp	r3, #1
 182 002e F4D1     		bne	.L18
  85:Src/mode.c    ****             Straight();
 183              		.loc 1 85 0
 184 0030 FFF7FEFF 		bl	Straight
 185              	.LVL17:
 186 0034 E9E7     		b	.L16
 187              	.L26:
  87:Src/mode.c    ****             Turn_Quarter(1);
 188              		.loc 1 87 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s 			page 6


 189 0036 0120     		movs	r0, #1
 190 0038 FFF7FEFF 		bl	Turn_Quarter
 191              	.LVL18:
 192 003c E5E7     		b	.L16
 193              	.L28:
 194 003e 00BF     		.align	2
 195              	.L27:
 196 0040 00000000 		.word	sensor
 197              		.cfi_endproc
 198              	.LFE128:
 200              		.section	.text.Mode_Straight,"ax",%progbits
 201              		.align	1
 202              		.global	Mode_Straight
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 206              		.fpu fpv4-sp-d16
 208              	Mode_Straight:
 209              	.LFB129:
  90:Src/mode.c    ****         }
  91:Src/mode.c    **** 
  92:Src/mode.c    ****     }
  93:Src/mode.c    **** }
  94:Src/mode.c    **** 
  95:Src/mode.c    **** void Mode_Straight(void){
 210              		.loc 1 95 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214 0000 08B5     		push	{r3, lr}
 215              	.LCFI2:
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 3, -8
 218              		.cfi_offset 14, -4
  96:Src/mode.c    ****     flag.ir_led = ON;
 219              		.loc 1 96 0
 220 0002 114B     		ldr	r3, .L34
 221 0004 0122     		movs	r2, #1
 222 0006 5A71     		strb	r2, [r3, #5]
 223              	.L30:
  97:Src/mode.c    ****     while(1){
  98:Src/mode.c    ****         if(sensor.wall[0]==true && sensor.wall[3]==true){
 224              		.loc 1 98 0
 225 0008 104B     		ldr	r3, .L34+4
 226 000a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 227 000c 012B     		cmp	r3, #1
 228 000e FBD1     		bne	.L30
 229              		.loc 1 98 0 is_stmt 0 discriminator 1
 230 0010 0E4B     		ldr	r3, .L34+4
 231 0012 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 232 0014 012B     		cmp	r3, #1
 233 0016 F7D1     		bne	.L30
  99:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
 234              		.loc 1 99 0 is_stmt 1
 235 0018 4C20     		movs	r0, #76
 236 001a FFF7FEFF 		bl	Output_Buzzer
 237              	.LVL19:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s 			page 7


 100:Src/mode.c    ****             break;
 101:Src/mode.c    ****         }
 102:Src/mode.c    ****     }
 103:Src/mode.c    ****     gyro_offset_calc_reset();
 238              		.loc 1 103 0
 239 001e FFF7FEFF 		bl	gyro_offset_calc_reset
 240              	.LVL20:
 104:Src/mode.c    ****     HAL_Delay(1030);
 241              		.loc 1 104 0
 242 0022 40F20640 		movw	r0, #1030
 243 0026 FFF7FEFF 		bl	HAL_Delay
 244              	.LVL21:
 105:Src/mode.c    ****     Straight();
 245              		.loc 1 105 0
 246 002a FFF7FEFF 		bl	Straight
 247              	.LVL22:
 248              	.L32:
 106:Src/mode.c    ****     while(1){
 107:Src/mode.c    ****         if(Push()==ON){
 249              		.loc 1 107 0
 250 002e FFF7FEFF 		bl	Push
 251              	.LVL23:
 252 0032 0128     		cmp	r0, #1
 253 0034 FBD1     		bne	.L32
 108:Src/mode.c    ****             flag.straight = OFF;
 254              		.loc 1 108 0
 255 0036 044B     		ldr	r3, .L34
 256 0038 0022     		movs	r2, #0
 257 003a 5A70     		strb	r2, [r3, #1]
 109:Src/mode.c    ****             flag.yawrate = OFF;
 258              		.loc 1 109 0
 259 003c 9A70     		strb	r2, [r3, #2]
 110:Src/mode.c    ****             Output_Buzzer(HZ_A);
 260              		.loc 1 110 0
 261 003e 5B20     		movs	r0, #91
 262 0040 FFF7FEFF 		bl	Output_Buzzer
 263              	.LVL24:
 111:Src/mode.c    ****             break;
 112:Src/mode.c    ****         }
 113:Src/mode.c    ****     }
 114:Src/mode.c    **** }
 264              		.loc 1 114 0
 265 0044 08BD     		pop	{r3, pc}
 266              	.L35:
 267 0046 00BF     		.align	2
 268              	.L34:
 269 0048 00000000 		.word	flag
 270 004c 00000000 		.word	sensor
 271              		.cfi_endproc
 272              	.LFE129:
 274              		.section	.text.Mode_Turn_Half,"ax",%progbits
 275              		.align	1
 276              		.global	Mode_Turn_Half
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s 			page 8


 282              	Mode_Turn_Half:
 283              	.LFB130:
 115:Src/mode.c    **** 
 116:Src/mode.c    **** void Mode_Turn_Half(void){
 284              		.loc 1 116 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288 0000 08B5     		push	{r3, lr}
 289              	.LCFI3:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 3, -8
 292              		.cfi_offset 14, -4
 117:Src/mode.c    ****     flag.ir_led = ON;
 293              		.loc 1 117 0
 294 0002 124B     		ldr	r3, .L41
 295 0004 0122     		movs	r2, #1
 296 0006 5A71     		strb	r2, [r3, #5]
 297              	.L37:
 118:Src/mode.c    ****     while(1){
 119:Src/mode.c    ****         if(sensor.wall[0]==ON && sensor.wall[3]==ON){
 298              		.loc 1 119 0
 299 0008 114B     		ldr	r3, .L41+4
 300 000a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 301 000c 012B     		cmp	r3, #1
 302 000e FBD1     		bne	.L37
 303              		.loc 1 119 0 is_stmt 0 discriminator 1
 304 0010 0F4B     		ldr	r3, .L41+4
 305 0012 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 306 0014 012B     		cmp	r3, #1
 307 0016 F7D1     		bne	.L37
 120:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
 308              		.loc 1 120 0 is_stmt 1
 309 0018 4C20     		movs	r0, #76
 310 001a FFF7FEFF 		bl	Output_Buzzer
 311              	.LVL25:
 121:Src/mode.c    ****             break;
 122:Src/mode.c    ****         }
 123:Src/mode.c    ****     }
 124:Src/mode.c    ****     gyro_offset_calc_reset();
 312              		.loc 1 124 0
 313 001e FFF7FEFF 		bl	gyro_offset_calc_reset
 314              	.LVL26:
 125:Src/mode.c    ****     HAL_Delay(1030);
 315              		.loc 1 125 0
 316 0022 40F20640 		movw	r0, #1030
 317 0026 FFF7FEFF 		bl	HAL_Delay
 318              	.LVL27:
 126:Src/mode.c    ****     Output_Buzzer(HZ_C_H);
 319              		.loc 1 126 0
 320 002a 4C20     		movs	r0, #76
 321 002c FFF7FEFF 		bl	Output_Buzzer
 322              	.LVL28:
 127:Src/mode.c    ****     Turn_Half();
 323              		.loc 1 127 0
 324 0030 FFF7FEFF 		bl	Turn_Half
 325              	.LVL29:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s 			page 9


 326              	.L39:
 128:Src/mode.c    ****     while(1){
 129:Src/mode.c    ****         if(Push()==ON){
 327              		.loc 1 129 0
 328 0034 FFF7FEFF 		bl	Push
 329              	.LVL30:
 330 0038 0128     		cmp	r0, #1
 331 003a FBD1     		bne	.L39
 130:Src/mode.c    ****             flag.yawrate = OFF;
 332              		.loc 1 130 0
 333 003c 034B     		ldr	r3, .L41
 334 003e 0022     		movs	r2, #0
 335 0040 9A70     		strb	r2, [r3, #2]
 131:Src/mode.c    ****             flag.straight = OFF;
 336              		.loc 1 131 0
 337 0042 5A70     		strb	r2, [r3, #1]
 132:Src/mode.c    ****             Output_Buzzer(HZ_A);
 338              		.loc 1 132 0
 339 0044 5B20     		movs	r0, #91
 340 0046 FFF7FEFF 		bl	Output_Buzzer
 341              	.LVL31:
 133:Src/mode.c    ****             break;
 134:Src/mode.c    ****         }
 135:Src/mode.c    ****     }
 136:Src/mode.c    **** }
 342              		.loc 1 136 0
 343 004a 08BD     		pop	{r3, pc}
 344              	.L42:
 345              		.align	2
 346              	.L41:
 347 004c 00000000 		.word	flag
 348 0050 00000000 		.word	sensor
 349              		.cfi_endproc
 350              	.LFE130:
 352              		.section	.text.Mode_mouse,"ax",%progbits
 353              		.align	1
 354              		.global	Mode_mouse
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 358              		.fpu fpv4-sp-d16
 360              	Mode_mouse:
 361              	.LFB127:
  49:Src/mode.c    ****     switch(mode){
 362              		.loc 1 49 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              	.LVL32:
 367 0000 08B5     		push	{r3, lr}
 368              	.LCFI4:
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 3, -8
 371              		.cfi_offset 14, -4
  50:Src/mode.c    ****         case 0:
 372              		.loc 1 50 0
 373 0002 0628     		cmp	r0, #6
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s 			page 10


 374 0004 07D8     		bhi	.L43
 375 0006 DFE800F0 		tbb	[pc, r0]
 376              	.L46:
 377 000a 04       		.byte	(.L45-.L46)/2
 378 000b 07       		.byte	(.L47-.L46)/2
 379 000c 0A       		.byte	(.L48-.L46)/2
 380 000d 0D       		.byte	(.L49-.L46)/2
 381 000e 10       		.byte	(.L50-.L46)/2
 382 000f 13       		.byte	(.L51-.L46)/2
 383 0010 16       		.byte	(.L52-.L46)/2
 384 0011 00       		.p2align 1
 385              	.L45:
  52:Src/mode.c    ****             //Show_log();
 386              		.loc 1 52 0
 387 0012 FFF7FEFF 		bl	Ennkai
 388              	.LVL33:
 389              	.L43:
  76:Src/mode.c    **** 
 390              		.loc 1 76 0
 391 0016 08BD     		pop	{r3, pc}
 392              	.LVL34:
 393              	.L47:
  56:Src/mode.c    ****             break;
 394              		.loc 1 56 0
 395 0018 FFF7FEFF 		bl	Mode_Straight
 396              	.LVL35:
  57:Src/mode.c    ****         case 2:
 397              		.loc 1 57 0
 398 001c FBE7     		b	.L43
 399              	.LVL36:
 400              	.L48:
  59:Src/mode.c    ****             break;
 401              		.loc 1 59 0
 402 001e FFF7FEFF 		bl	Mode_Turn_Half
 403              	.LVL37:
  60:Src/mode.c    ****         case 3:
 404              		.loc 1 60 0
 405 0022 F8E7     		b	.L43
 406              	.LVL38:
 407              	.L49:
  62:Src/mode.c    ****             break;
 408              		.loc 1 62 0
 409 0024 FFF7FEFF 		bl	Normal_Straight
 410              	.LVL39:
  63:Src/mode.c    ****         case 4:
 411              		.loc 1 63 0
 412 0028 F5E7     		b	.L43
 413              	.LVL40:
 414              	.L50:
  65:Src/mode.c    ****             break;
 415              		.loc 1 65 0
 416 002a FFF7FEFF 		bl	Normal_Turn_Half
 417              	.LVL41:
  66:Src/mode.c    ****         case 5:
 418              		.loc 1 66 0
 419 002e F2E7     		b	.L43
 420              	.LVL42:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s 			page 11


 421              	.L51:
  68:Src/mode.c    ****             break;
 422              		.loc 1 68 0
 423 0030 FFF7FEFF 		bl	Sensor_Mode
 424              	.LVL43:
  69:Src/mode.c    ****         case 6:
 425              		.loc 1 69 0
 426 0034 EFE7     		b	.L43
 427              	.LVL44:
 428              	.L52:
  71:Src/mode.c    ****             break;
 429              		.loc 1 71 0
 430 0036 FFF7FEFF 		bl	Test_Create_Map
 431              	.LVL45:
  76:Src/mode.c    **** 
 432              		.loc 1 76 0
 433 003a ECE7     		b	.L43
 434              		.cfi_endproc
 435              	.LFE127:
 437              		.comm	maze,128,4
 438              		.comm	yawrate_pid,2,2
 439              		.comm	straight_pid_r,2,2
 440              		.comm	straight_pid_l,2,2
 441              		.comm	y_sumsum,4,4
 442              		.comm	y_sum,4,4
 443              		.comm	s_sum_r,4,4
 444              		.comm	s_sum_l,4,4
 445              		.section	.rodata.Mode_select.str1.4,"aMS",%progbits,1
 446              		.align	2
 447              	.LC0:
 448 0000 25640D00 		.ascii	"%d\015\000"
 449              		.text
 450              	.Letext0:
 451              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 452              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 453              		.file 4 "Inc/mode.h"
 454              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 455              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 456              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 457              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 458              		.file 9 "Inc/global.h"
 459              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 460              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 461              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 462              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 463              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 464              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 465              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 466              		.file 17 "Inc/tim.h"
 467              		.file 18 "Inc/control.h"
 468              		.file 19 "Inc/spi.h"
 469              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 470              		.file 21 "Inc/motion.h"
 471              		.file 22 "Inc/gpio.h"
 472              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 mode.c
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:18     .text.Mode_select:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:25     .text.Mode_select:00000000 Mode_select
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:124    .text.Mode_select:00000078 $d
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:130    .text.LeftHand:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:137    .text.LeftHand:00000000 LeftHand
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:196    .text.LeftHand:00000040 $d
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:201    .text.Mode_Straight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:208    .text.Mode_Straight:00000000 Mode_Straight
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:269    .text.Mode_Straight:00000048 $d
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:275    .text.Mode_Turn_Half:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:282    .text.Mode_Turn_Half:00000000 Mode_Turn_Half
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:347    .text.Mode_Turn_Half:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:353    .text.Mode_mouse:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:360    .text.Mode_mouse:00000000 Mode_mouse
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:377    .text.Mode_mouse:0000000a $d
                            *COM*:00000080 maze
                            *COM*:00000002 yawrate_pid
                            *COM*:00000002 straight_pid_r
                            *COM*:00000002 straight_pid_l
                            *COM*:00000004 y_sumsum
                            *COM*:00000004 y_sum
                            *COM*:00000004 s_sum_r
                            *COM*:00000004 s_sum_l
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:446    .rodata.Mode_select.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:384    .text.Mode_mouse:00000011 $d
C:\Users\kotaro\AppData\Local\Temp\ccfTszt5.s:384    .text.Mode_mouse:00000012 $t

UNDEFINED SYMBOLS
Output_Buzzer
Push
printf
enc
Turn_Quarter
Turn_Half
Straight
sensor
gyro_offset_calc_reset
HAL_Delay
flag
Ennkai
Normal_Straight
Normal_Turn_Half
Sensor_Mode
Test_Create_Map
