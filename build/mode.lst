ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Mode_select,"ax",%progbits
  18              		.align	1
  19              		.global	Mode_select
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Mode_select:
  26              	.LFB126:
  27              		.file 1 "Src/mode.c"
   1:Src/mode.c    **** #include "mode.h"
   2:Src/mode.c    **** #include "global.h"
   3:Src/mode.c    **** #include "gpio.h"
   4:Src/mode.c    **** #include "tim.h"
   5:Src/mode.c    **** #include "motion.h"
   6:Src/mode.c    **** #include "control.h"
   7:Src/mode.c    **** #include "spi.h"
   8:Src/mode.c    **** 
   9:Src/mode.c    **** maze_t maze;
  10:Src/mode.c    **** 
  11:Src/mode.c    **** 
  12:Src/mode.c    **** /****************************************************************************************
  13:Src/mode.c    ****  * outline  : return mode nomber
  14:Src/mode.c    ****  * argument : void
  15:Src/mode.c    ****  * return   : mode nomber 
  16:Src/mode.c    **** ********************************************************************************************/
  17:Src/mode.c    **** int8_t Mode_select(void){
  28              		.loc 1 17 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LVL0:
  18:Src/mode.c    ****     int8_t mode=0;
  38              		.loc 1 18 0
  39 0002 0024     		movs	r4, #0
  40 0004 1FE0     		b	.L7
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 2


  41              	.LVL1:
  42              	.L3:
  19:Src/mode.c    ****     while(1){
  20:Src/mode.c    ****         if((int16_t)enc.distance_l > 30 || (int16_t)enc.distance_l < -30){
  21:Src/mode.c    ****             if((int16_t)enc.distance_l > 30){
  22:Src/mode.c    ****                 mode++;
  23:Src/mode.c    ****             }else if((int16_t)enc.distance_l < -30){
  43              		.loc 1 23 0
  44 0006 13F11E0F 		cmn	r3, #30
  45 000a 2DDA     		bge	.L4
  24:Src/mode.c    ****                 mode--;
  46              		.loc 1 24 0
  47 000c 013C     		subs	r4, r4, #1
  48              	.LVL2:
  49 000e 64B2     		sxtb	r4, r4
  50              	.LVL3:
  51 0010 2AE0     		b	.L4
  52              	.L8:
  25:Src/mode.c    ****             }
  26:Src/mode.c    ****             if(mode > 6){
  27:Src/mode.c    ****                 mode = 0;
  53              		.loc 1 27 0
  54 0012 0024     		movs	r4, #0
  55              	.LVL4:
  56              	.L5:
  28:Src/mode.c    ****             }else if(mode < 0){
  29:Src/mode.c    ****                 mode = 6;
  30:Src/mode.c    ****             }
  31:Src/mode.c    ****             enc.distance_l = 0;
  57              		.loc 1 31 0
  58 0014 1A4B     		ldr	r3, .L13
  59 0016 0022     		movs	r2, #0
  60 0018 DA61     		str	r2, [r3, #28]	@ float
  32:Src/mode.c    ****             Output_Buzzer(170-10*mode);
  61              		.loc 1 32 0
  62 001a C4EB4413 		rsb	r3, r4, r4, lsl #5
  63 001e C4EB8303 		rsb	r3, r4, r3, lsl #2
  64 0022 5800     		lsls	r0, r3, #1
  65 0024 C0B2     		uxtb	r0, r0
  66 0026 5638     		subs	r0, r0, #86
  67 0028 00F0FE00 		and	r0, r0, #254
  68 002c FFF7FEFF 		bl	Output_Buzzer
  69              	.LVL5:
  70              	.L2:
  33:Src/mode.c    ****         }
  34:Src/mode.c    ****         if(Push()==ON){
  71              		.loc 1 34 0
  72 0030 FFF7FEFF 		bl	Push
  73              	.LVL6:
  74 0034 0128     		cmp	r0, #1
  75 0036 1DD0     		beq	.L11
  35:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
  36:Src/mode.c    ****             break;
  37:Src/mode.c    ****         }
  38:Src/mode.c    ****         LED_Control(mode);
  76              		.loc 1 38 0
  77 0038 E0B2     		uxtb	r0, r4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 3


  78 003a FFF7FEFF 		bl	LED_Control
  79              	.LVL7:
  39:Src/mode.c    ****         printf("%d\r",mode);
  80              		.loc 1 39 0
  81 003e 2146     		mov	r1, r4
  82 0040 1048     		ldr	r0, .L13+4
  83 0042 FFF7FEFF 		bl	printf
  84              	.LVL8:
  85              	.L7:
  20:Src/mode.c    ****             if((int16_t)enc.distance_l > 30){
  86              		.loc 1 20 0
  87 0046 0E4B     		ldr	r3, .L13
  88 0048 D3ED077A 		vldr.32	s15, [r3, #28]
  89 004c FDEEE77A 		vcvt.s32.f32	s15, s15
  90 0050 17EE903A 		vmov	r3, s15	@ int
  91 0054 1BB2     		sxth	r3, r3
  92 0056 03F11E02 		add	r2, r3, #30
  93 005a 92B2     		uxth	r2, r2
  94 005c 3C2A     		cmp	r2, #60
  95 005e E7D9     		bls	.L2
  21:Src/mode.c    ****                 mode++;
  96              		.loc 1 21 0
  97 0060 1E2B     		cmp	r3, #30
  98 0062 D0DD     		ble	.L3
  22:Src/mode.c    ****             }else if((int16_t)enc.distance_l < -30){
  99              		.loc 1 22 0
 100 0064 0134     		adds	r4, r4, #1
 101              	.LVL9:
 102 0066 64B2     		sxtb	r4, r4
 103              	.LVL10:
 104              	.L4:
  26:Src/mode.c    ****                 mode = 0;
 105              		.loc 1 26 0
 106 0068 062C     		cmp	r4, #6
 107 006a D2DC     		bgt	.L8
  28:Src/mode.c    ****                 mode = 6;
 108              		.loc 1 28 0
 109 006c 002C     		cmp	r4, #0
 110 006e D1DA     		bge	.L5
  29:Src/mode.c    ****             }
 111              		.loc 1 29 0
 112 0070 0624     		movs	r4, #6
 113              	.LVL11:
 114 0072 CFE7     		b	.L5
 115              	.LVL12:
 116              	.L11:
  35:Src/mode.c    ****             break;
 117              		.loc 1 35 0
 118 0074 4C20     		movs	r0, #76
 119 0076 FFF7FEFF 		bl	Output_Buzzer
 120              	.LVL13:
  40:Src/mode.c    ****     }
  41:Src/mode.c    ****     return mode;
  42:Src/mode.c    **** }
 121              		.loc 1 42 0
 122 007a 2046     		mov	r0, r4
 123 007c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 4


 124              	.LVL14:
 125              	.L14:
 126 007e 00BF     		.align	2
 127              	.L13:
 128 0080 00000000 		.word	enc
 129 0084 00000000 		.word	.LC0
 130              		.cfi_endproc
 131              	.LFE126:
 133              		.section	.text.LeftHand,"ax",%progbits
 134              		.align	1
 135              		.global	LeftHand
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu fpv4-sp-d16
 141              	LeftHand:
 142              	.LFB128:
  43:Src/mode.c    **** 
  44:Src/mode.c    **** 
  45:Src/mode.c    **** /****************************************************************************************
  46:Src/mode.c    ****  * outline  : wright mode 
  47:Src/mode.c    ****  * argument : mode nomber
  48:Src/mode.c    ****  * return   : void
  49:Src/mode.c    **** ********************************************************************************************/
  50:Src/mode.c    **** void Mode_mouse(int8_t mode){
  51:Src/mode.c    ****     switch(mode){
  52:Src/mode.c    ****         case 0:
  53:Src/mode.c    ****             Mode_Circuit();
  54:Src/mode.c    ****             break;
  55:Src/mode.c    ****         case 1:
  56:Src/mode.c    ****             Mode_Straight();
  57:Src/mode.c    ****             break;
  58:Src/mode.c    ****         case 2:
  59:Src/mode.c    ****             Mode_Turn_Half();
  60:Src/mode.c    ****             break;
  61:Src/mode.c    ****         case 3:
  62:Src/mode.c    ****             Mode_Turn_Quarter_Left();
  63:Src/mode.c    ****             break;
  64:Src/mode.c    ****         case 4:
  65:Src/mode.c    ****             Normal_Straight();
  66:Src/mode.c    ****             break;
  67:Src/mode.c    ****         case 5:
  68:Src/mode.c    ****             Sensor_Mode();
  69:Src/mode.c    ****             break;
  70:Src/mode.c    ****         case 6:
  71:Src/mode.c    ****             Test_Create_Map();
  72:Src/mode.c    ****             break;
  73:Src/mode.c    ****         default:
  74:Src/mode.c    ****             break;
  75:Src/mode.c    ****     }
  76:Src/mode.c    **** }
  77:Src/mode.c    **** 
  78:Src/mode.c    **** 
  79:Src/mode.c    **** void LeftHand(void){
 143              		.loc 1 79 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 5


 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147 0000 08B5     		push	{r3, lr}
 148              	.LCFI1:
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 3, -8
 151              		.cfi_offset 14, -4
 152              	.LVL15:
  80:Src/mode.c    ****     short flag_goal = false;
  81:Src/mode.c    ****     Straight_HalF();
 153              		.loc 1 81 0
 154 0002 FFF7FEFF 		bl	Straight_HalF
 155              	.LVL16:
  82:Src/mode.c    ****     while(flag_goal==false){
 156              		.loc 1 82 0
 157 0006 01E0     		b	.L22
 158              	.L24:
  83:Src/mode.c    ****         while(flag.motion_end==true)
  84:Src/mode.c    ****         if(sensor.wall[2] == false){
  85:Src/mode.c    ****             Turn_Quarter_Left();
 159              		.loc 1 85 0
 160 0008 FFF7FEFF 		bl	Turn_Quarter_Left
 161              	.LVL17:
 162              	.L22:
  83:Src/mode.c    ****         while(flag.motion_end==true)
 163              		.loc 1 83 0
 164 000c 0E4B     		ldr	r3, .L27
 165 000e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 166 0010 DBB2     		uxtb	r3, r3
 167 0012 012B     		cmp	r3, #1
 168 0014 FAD1     		bne	.L22
  84:Src/mode.c    ****             Turn_Quarter_Left();
 169              		.loc 1 84 0
 170 0016 0D4B     		ldr	r3, .L27+4
 171 0018 9B7E     		ldrb	r3, [r3, #26]	@ zero_extendqisi2
 172 001a 002B     		cmp	r3, #0
 173 001c F4D0     		beq	.L24
  86:Src/mode.c    ****         }else if(sensor.wall[0]==true && sensor.wall[3]==true){
 174              		.loc 1 86 0
 175 001e 0B4B     		ldr	r3, .L27+4
 176 0020 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 177 0022 012B     		cmp	r3, #1
 178 0024 06D0     		beq	.L25
 179              	.L19:
  87:Src/mode.c    ****             Straight();
  88:Src/mode.c    ****         }else if(sensor.wall[1]==true){
 180              		.loc 1 88 0
 181 0026 094B     		ldr	r3, .L27+4
 182 0028 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 183 002a 012B     		cmp	r3, #1
 184 002c 09D0     		beq	.L26
  89:Src/mode.c    ****             Turn_Quarter_Right();
  90:Src/mode.c    ****         }else{
  91:Src/mode.c    ****             Turn_Half();
 185              		.loc 1 91 0
 186 002e FFF7FEFF 		bl	Turn_Half
 187              	.LVL18:
 188 0032 EBE7     		b	.L22
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 6


 189              	.L25:
  86:Src/mode.c    ****             Straight();
 190              		.loc 1 86 0 discriminator 1
 191 0034 054B     		ldr	r3, .L27+4
 192 0036 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 193 0038 012B     		cmp	r3, #1
 194 003a F4D1     		bne	.L19
  87:Src/mode.c    ****             Straight();
 195              		.loc 1 87 0
 196 003c FFF7FEFF 		bl	Straight
 197              	.LVL19:
 198 0040 E4E7     		b	.L22
 199              	.L26:
  89:Src/mode.c    ****             Turn_Quarter_Right();
 200              		.loc 1 89 0
 201 0042 FFF7FEFF 		bl	Turn_Quarter_Right
 202              	.LVL20:
 203 0046 E1E7     		b	.L22
 204              	.L28:
 205              		.align	2
 206              	.L27:
 207 0048 00000000 		.word	flag
 208 004c 00000000 		.word	sensor
 209              		.cfi_endproc
 210              	.LFE128:
 212              		.section	.text.Mode_Straight,"ax",%progbits
 213              		.align	1
 214              		.global	Mode_Straight
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu fpv4-sp-d16
 220              	Mode_Straight:
 221              	.LFB129:
  92:Src/mode.c    ****         }
  93:Src/mode.c    ****     }
  94:Src/mode.c    **** }
  95:Src/mode.c    **** 
  96:Src/mode.c    **** void Mode_Straight(void){
 222              		.loc 1 96 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226 0000 08B5     		push	{r3, lr}
 227              	.LCFI2:
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 3, -8
 230              		.cfi_offset 14, -4
  97:Src/mode.c    ****     flag.ir_led = ON;
 231              		.loc 1 97 0
 232 0002 124B     		ldr	r3, .L34
 233 0004 0122     		movs	r2, #1
 234 0006 5A71     		strb	r2, [r3, #5]
 235              	.L30:
  98:Src/mode.c    ****     while(1){
  99:Src/mode.c    ****         if(sensor.wall[0]==true && sensor.wall[3]==true){
 236              		.loc 1 99 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 7


 237 0008 114B     		ldr	r3, .L34+4
 238 000a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 239 000c 012B     		cmp	r3, #1
 240 000e FBD1     		bne	.L30
 241              		.loc 1 99 0 is_stmt 0 discriminator 1
 242 0010 0F4B     		ldr	r3, .L34+4
 243 0012 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 244 0014 012B     		cmp	r3, #1
 245 0016 F7D1     		bne	.L30
 100:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
 246              		.loc 1 100 0 is_stmt 1
 247 0018 4C20     		movs	r0, #76
 248 001a FFF7FEFF 		bl	Output_Buzzer
 249              	.LVL21:
 101:Src/mode.c    ****             break;
 102:Src/mode.c    ****         }
 103:Src/mode.c    ****     }
 104:Src/mode.c    ****     flag.ir_led = OFF;
 250              		.loc 1 104 0
 251 001e 0B4B     		ldr	r3, .L34
 252 0020 0022     		movs	r2, #0
 253 0022 5A71     		strb	r2, [r3, #5]
 105:Src/mode.c    ****     gyro_offset_calc_reset();
 254              		.loc 1 105 0
 255 0024 FFF7FEFF 		bl	gyro_offset_calc_reset
 256              	.LVL22:
 106:Src/mode.c    ****     HAL_Delay(1500);
 257              		.loc 1 106 0
 258 0028 40F2DC50 		movw	r0, #1500
 259 002c FFF7FEFF 		bl	HAL_Delay
 260              	.LVL23:
 107:Src/mode.c    ****     Straight();
 261              		.loc 1 107 0
 262 0030 FFF7FEFF 		bl	Straight
 263              	.LVL24:
 264              	.L32:
 108:Src/mode.c    ****     while(1){
 109:Src/mode.c    ****         if(Push()==ON){
 265              		.loc 1 109 0
 266 0034 FFF7FEFF 		bl	Push
 267              	.LVL25:
 268 0038 0128     		cmp	r0, #1
 269 003a FBD1     		bne	.L32
 110:Src/mode.c    ****             flag.straight = OFF;
 270              		.loc 1 110 0
 271 003c 034B     		ldr	r3, .L34
 272 003e 0022     		movs	r2, #0
 273 0040 5A70     		strb	r2, [r3, #1]
 111:Src/mode.c    ****             flag.yawrate = OFF;
 274              		.loc 1 111 0
 275 0042 9A70     		strb	r2, [r3, #2]
 112:Src/mode.c    ****             Output_Buzzer(HZ_A);
 276              		.loc 1 112 0
 277 0044 5B20     		movs	r0, #91
 278 0046 FFF7FEFF 		bl	Output_Buzzer
 279              	.LVL26:
 113:Src/mode.c    ****             break;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 8


 114:Src/mode.c    ****         }
 115:Src/mode.c    ****     }
 116:Src/mode.c    **** }
 280              		.loc 1 116 0
 281 004a 08BD     		pop	{r3, pc}
 282              	.L35:
 283              		.align	2
 284              	.L34:
 285 004c 00000000 		.word	flag
 286 0050 00000000 		.word	sensor
 287              		.cfi_endproc
 288              	.LFE129:
 290              		.section	.text.Mode_Turn_Half,"ax",%progbits
 291              		.align	1
 292              		.global	Mode_Turn_Half
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu fpv4-sp-d16
 298              	Mode_Turn_Half:
 299              	.LFB130:
 117:Src/mode.c    **** 
 118:Src/mode.c    **** void Mode_Turn_Half(void){
 300              		.loc 1 118 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304 0000 08B5     		push	{r3, lr}
 305              	.LCFI3:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 3, -8
 308              		.cfi_offset 14, -4
 119:Src/mode.c    ****     flag.ir_led = ON;
 309              		.loc 1 119 0
 310 0002 124B     		ldr	r3, .L41
 311 0004 0122     		movs	r2, #1
 312 0006 5A71     		strb	r2, [r3, #5]
 313              	.L37:
 120:Src/mode.c    ****     while(1){
 121:Src/mode.c    ****         if(sensor.wall[0]==ON && sensor.wall[3]==ON){
 314              		.loc 1 121 0
 315 0008 114B     		ldr	r3, .L41+4
 316 000a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 317 000c 012B     		cmp	r3, #1
 318 000e FBD1     		bne	.L37
 319              		.loc 1 121 0 is_stmt 0 discriminator 1
 320 0010 0F4B     		ldr	r3, .L41+4
 321 0012 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 322 0014 012B     		cmp	r3, #1
 323 0016 F7D1     		bne	.L37
 122:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
 324              		.loc 1 122 0 is_stmt 1
 325 0018 4C20     		movs	r0, #76
 326 001a FFF7FEFF 		bl	Output_Buzzer
 327              	.LVL27:
 123:Src/mode.c    ****             break;
 124:Src/mode.c    ****         }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 9


 125:Src/mode.c    ****     }
 126:Src/mode.c    ****     gyro_offset_calc_reset();
 328              		.loc 1 126 0
 329 001e FFF7FEFF 		bl	gyro_offset_calc_reset
 330              	.LVL28:
 127:Src/mode.c    ****     HAL_Delay(1030);
 331              		.loc 1 127 0
 332 0022 40F20640 		movw	r0, #1030
 333 0026 FFF7FEFF 		bl	HAL_Delay
 334              	.LVL29:
 128:Src/mode.c    ****     Output_Buzzer(HZ_C_H);
 335              		.loc 1 128 0
 336 002a 4C20     		movs	r0, #76
 337 002c FFF7FEFF 		bl	Output_Buzzer
 338              	.LVL30:
 129:Src/mode.c    ****     Turn_Half();
 339              		.loc 1 129 0
 340 0030 FFF7FEFF 		bl	Turn_Half
 341              	.LVL31:
 342              	.L39:
 130:Src/mode.c    ****     while(1){
 131:Src/mode.c    ****         if(Push()==ON){
 343              		.loc 1 131 0
 344 0034 FFF7FEFF 		bl	Push
 345              	.LVL32:
 346 0038 0128     		cmp	r0, #1
 347 003a FBD1     		bne	.L39
 132:Src/mode.c    ****             flag.yawrate = OFF;
 348              		.loc 1 132 0
 349 003c 034B     		ldr	r3, .L41
 350 003e 0022     		movs	r2, #0
 351 0040 9A70     		strb	r2, [r3, #2]
 133:Src/mode.c    ****             flag.straight = OFF;
 352              		.loc 1 133 0
 353 0042 5A70     		strb	r2, [r3, #1]
 134:Src/mode.c    ****             Output_Buzzer(HZ_A);
 354              		.loc 1 134 0
 355 0044 5B20     		movs	r0, #91
 356 0046 FFF7FEFF 		bl	Output_Buzzer
 357              	.LVL33:
 135:Src/mode.c    ****             break;
 136:Src/mode.c    ****         }
 137:Src/mode.c    ****     }
 138:Src/mode.c    **** }
 358              		.loc 1 138 0
 359 004a 08BD     		pop	{r3, pc}
 360              	.L42:
 361              		.align	2
 362              	.L41:
 363 004c 00000000 		.word	flag
 364 0050 00000000 		.word	sensor
 365              		.cfi_endproc
 366              	.LFE130:
 368              		.section	.text.Mode_Turn_Quarter_Left,"ax",%progbits
 369              		.align	1
 370              		.global	Mode_Turn_Quarter_Left
 371              		.syntax unified
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 10


 372              		.thumb
 373              		.thumb_func
 374              		.fpu fpv4-sp-d16
 376              	Mode_Turn_Quarter_Left:
 377              	.LFB131:
 139:Src/mode.c    **** 
 140:Src/mode.c    **** void Mode_Turn_Quarter_Left(void){
 378              		.loc 1 140 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382 0000 08B5     		push	{r3, lr}
 383              	.LCFI4:
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 3, -8
 386              		.cfi_offset 14, -4
 141:Src/mode.c    ****     flag.ir_led = ON;
 387              		.loc 1 141 0
 388 0002 124B     		ldr	r3, .L48
 389 0004 0122     		movs	r2, #1
 390 0006 5A71     		strb	r2, [r3, #5]
 391              	.L44:
 142:Src/mode.c    ****     while(1){
 143:Src/mode.c    ****         if(sensor.wall[0]==ON && sensor.wall[3]==ON){
 392              		.loc 1 143 0
 393 0008 114B     		ldr	r3, .L48+4
 394 000a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 395 000c 012B     		cmp	r3, #1
 396 000e FBD1     		bne	.L44
 397              		.loc 1 143 0 is_stmt 0 discriminator 1
 398 0010 0F4B     		ldr	r3, .L48+4
 399 0012 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 400 0014 012B     		cmp	r3, #1
 401 0016 F7D1     		bne	.L44
 144:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
 402              		.loc 1 144 0 is_stmt 1
 403 0018 4C20     		movs	r0, #76
 404 001a FFF7FEFF 		bl	Output_Buzzer
 405              	.LVL34:
 145:Src/mode.c    ****             break;
 146:Src/mode.c    ****         }
 147:Src/mode.c    ****     }
 148:Src/mode.c    ****     gyro_offset_calc_reset();
 406              		.loc 1 148 0
 407 001e FFF7FEFF 		bl	gyro_offset_calc_reset
 408              	.LVL35:
 149:Src/mode.c    ****     HAL_Delay(1030);
 409              		.loc 1 149 0
 410 0022 40F20640 		movw	r0, #1030
 411 0026 FFF7FEFF 		bl	HAL_Delay
 412              	.LVL36:
 150:Src/mode.c    ****     Output_Buzzer(HZ_C_H);
 413              		.loc 1 150 0
 414 002a 4C20     		movs	r0, #76
 415 002c FFF7FEFF 		bl	Output_Buzzer
 416              	.LVL37:
 151:Src/mode.c    ****     Turn_Quarter_Left();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 11


 417              		.loc 1 151 0
 418 0030 FFF7FEFF 		bl	Turn_Quarter_Left
 419              	.LVL38:
 420              	.L46:
 152:Src/mode.c    ****     while(1){
 153:Src/mode.c    ****         if(Push()==ON){
 421              		.loc 1 153 0
 422 0034 FFF7FEFF 		bl	Push
 423              	.LVL39:
 424 0038 0128     		cmp	r0, #1
 425 003a FBD1     		bne	.L46
 154:Src/mode.c    ****             flag.yawrate = OFF;
 426              		.loc 1 154 0
 427 003c 034B     		ldr	r3, .L48
 428 003e 0022     		movs	r2, #0
 429 0040 9A70     		strb	r2, [r3, #2]
 155:Src/mode.c    ****             flag.straight = OFF;
 430              		.loc 1 155 0
 431 0042 5A70     		strb	r2, [r3, #1]
 156:Src/mode.c    ****             Output_Buzzer(HZ_A);
 432              		.loc 1 156 0
 433 0044 5B20     		movs	r0, #91
 434 0046 FFF7FEFF 		bl	Output_Buzzer
 435              	.LVL40:
 157:Src/mode.c    ****             break;
 158:Src/mode.c    ****         }
 159:Src/mode.c    ****     }
 160:Src/mode.c    **** }
 436              		.loc 1 160 0
 437 004a 08BD     		pop	{r3, pc}
 438              	.L49:
 439              		.align	2
 440              	.L48:
 441 004c 00000000 		.word	flag
 442 0050 00000000 		.word	sensor
 443              		.cfi_endproc
 444              	.LFE131:
 446              		.section	.text.Mode_Circuit,"ax",%progbits
 447              		.align	1
 448              		.global	Mode_Circuit
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu fpv4-sp-d16
 454              	Mode_Circuit:
 455              	.LFB132:
 161:Src/mode.c    **** 
 162:Src/mode.c    **** void Mode_Circuit(void){
 456              		.loc 1 162 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460 0000 08B5     		push	{r3, lr}
 461              	.LCFI5:
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 3, -8
 464              		.cfi_offset 14, -4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 12


 163:Src/mode.c    ****     flag.ir_led = ON;
 465              		.loc 1 163 0
 466 0002 124B     		ldr	r3, .L57
 467 0004 0122     		movs	r2, #1
 468 0006 5A71     		strb	r2, [r3, #5]
 469              	.L51:
 164:Src/mode.c    ****     while(1){
 165:Src/mode.c    ****         if(sensor.wall[0]==ON && sensor.wall[3]==ON){
 470              		.loc 1 165 0
 471 0008 114B     		ldr	r3, .L57+4
 472 000a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 473 000c 012B     		cmp	r3, #1
 474 000e FBD1     		bne	.L51
 475              		.loc 1 165 0 is_stmt 0 discriminator 1
 476 0010 0F4B     		ldr	r3, .L57+4
 477 0012 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 478 0014 012B     		cmp	r3, #1
 479 0016 F7D1     		bne	.L51
 166:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
 480              		.loc 1 166 0 is_stmt 1
 481 0018 4C20     		movs	r0, #76
 482 001a FFF7FEFF 		bl	Output_Buzzer
 483              	.LVL41:
 167:Src/mode.c    ****             break;
 168:Src/mode.c    ****         }
 169:Src/mode.c    ****     }
 170:Src/mode.c    ****     flag.ir_led = OFF;
 484              		.loc 1 170 0
 485 001e 0B4B     		ldr	r3, .L57
 486 0020 0022     		movs	r2, #0
 487 0022 5A71     		strb	r2, [r3, #5]
 171:Src/mode.c    ****     Straight();
 488              		.loc 1 171 0
 489 0024 FFF7FEFF 		bl	Straight
 490              	.LVL42:
 491              	.L53:
 172:Src/mode.c    ****     while(flag.motion_end==false){};
 492              		.loc 1 172 0 discriminator 1
 493 0028 084B     		ldr	r3, .L57
 494 002a 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 495 002c 002B     		cmp	r3, #0
 496 002e FBD0     		beq	.L53
 173:Src/mode.c    ****     Turn_Half();
 497              		.loc 1 173 0
 498 0030 FFF7FEFF 		bl	Turn_Half
 499              	.LVL43:
 500              	.L54:
 174:Src/mode.c    ****     while(flag.motion_end==false){};
 501              		.loc 1 174 0 discriminator 1
 502 0034 054B     		ldr	r3, .L57
 503 0036 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 504 0038 002B     		cmp	r3, #0
 505 003a FBD0     		beq	.L54
 175:Src/mode.c    ****     Straight();
 506              		.loc 1 175 0
 507 003c FFF7FEFF 		bl	Straight
 508              	.LVL44:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 13


 509              	.L55:
 176:Src/mode.c    ****     while(flag.motion_end==false){};
 510              		.loc 1 176 0 discriminator 1
 511 0040 024B     		ldr	r3, .L57
 512 0042 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 513 0044 002B     		cmp	r3, #0
 514 0046 FBD0     		beq	.L55
 177:Src/mode.c    **** }...
 515              		.loc 1 177 0
 516 0048 08BD     		pop	{r3, pc}
 517              	.L58:
 518 004a 00BF     		.align	2
 519              	.L57:
 520 004c 00000000 		.word	flag
 521 0050 00000000 		.word	sensor
 522              		.cfi_endproc
 523              	.LFE132:
 525              		.section	.text.Mode_mouse,"ax",%progbits
 526              		.align	1
 527              		.global	Mode_mouse
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 531              		.fpu fpv4-sp-d16
 533              	Mode_mouse:
 534              	.LFB127:
  50:Src/mode.c    **** void Mode_mouse(int8_t mode){
 535              		.loc 1 50 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539              	.LVL45:
 540 0000 08B5     		push	{r3, lr}
 541              	.LCFI6:
 542              		.cfi_def_cfa_offset 8
 543              		.cfi_offset 3, -8
 544              		.cfi_offset 14, -4
  51:Src/mode.c    ****     switch(mode){
 545              		.loc 1 51 0
 546 0002 0628     		cmp	r0, #6
 547 0004 07D8     		bhi	.L59
 548 0006 DFE800F0 		tbb	[pc, r0]
 549              	.L62:
 550 000a 04       		.byte	(.L61-.L62)/2
 551 000b 07       		.byte	(.L63-.L62)/2
 552 000c 0A       		.byte	(.L64-.L62)/2
 553 000d 0D       		.byte	(.L65-.L62)/2
 554 000e 10       		.byte	(.L66-.L62)/2
 555 000f 13       		.byte	(.L67-.L62)/2
 556 0010 16       		.byte	(.L68-.L62)/2
 557 0011 00       		.p2align 1
 558              	.L61:
  53:Src/mode.c    ****             Mode_Circuit();
 559              		.loc 1 53 0
 560 0012 FFF7FEFF 		bl	Mode_Circuit
 561              	.LVL46:
 562              	.L59:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 14


  76:Src/mode.c    **** }
 563              		.loc 1 76 0
 564 0016 08BD     		pop	{r3, pc}
 565              	.LVL47:
 566              	.L63:
  56:Src/mode.c    ****             Mode_Straight();
 567              		.loc 1 56 0
 568 0018 FFF7FEFF 		bl	Mode_Straight
 569              	.LVL48:
  57:Src/mode.c    ****             break;
 570              		.loc 1 57 0
 571 001c FBE7     		b	.L59
 572              	.LVL49:
 573              	.L64:
  59:Src/mode.c    ****             Mode_Turn_Half();
 574              		.loc 1 59 0
 575 001e FFF7FEFF 		bl	Mode_Turn_Half
 576              	.LVL50:
  60:Src/mode.c    ****             break;
 577              		.loc 1 60 0
 578 0022 F8E7     		b	.L59
 579              	.LVL51:
 580              	.L65:
  62:Src/mode.c    ****             Mode_Turn_Quarter_Left();
 581              		.loc 1 62 0
 582 0024 FFF7FEFF 		bl	Mode_Turn_Quarter_Left
 583              	.LVL52:
  63:Src/mode.c    ****             break;
 584              		.loc 1 63 0
 585 0028 F5E7     		b	.L59
 586              	.LVL53:
 587              	.L66:
  65:Src/mode.c    ****             Normal_Straight();
 588              		.loc 1 65 0
 589 002a FFF7FEFF 		bl	Normal_Straight
 590              	.LVL54:
  66:Src/mode.c    ****             break;
 591              		.loc 1 66 0
 592 002e F2E7     		b	.L59
 593              	.LVL55:
 594              	.L67:
  68:Src/mode.c    ****             Sensor_Mode();
 595              		.loc 1 68 0
 596 0030 FFF7FEFF 		bl	Sensor_Mode
 597              	.LVL56:
  69:Src/mode.c    ****             break;
 598              		.loc 1 69 0
 599 0034 EFE7     		b	.L59
 600              	.LVL57:
 601              	.L68:
  71:Src/mode.c    ****             Test_Create_Map();
 602              		.loc 1 71 0
 603 0036 FFF7FEFF 		bl	Test_Create_Map
 604              	.LVL58:
  76:Src/mode.c    **** }
 605              		.loc 1 76 0
 606 003a ECE7     		b	.L59
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 15


 607              		.cfi_endproc
 608              	.LFE127:
 610              		.comm	maze,128,4
 611              		.comm	yawrate_pid,2,2
 612              		.comm	straight_pid_r,2,2
 613              		.comm	straight_pid_l,2,2
 614              		.comm	y_sumsum,4,4
 615              		.comm	y_sum,4,4
 616              		.comm	s_sum_r,4,4
 617              		.comm	s_sum_l,4,4
 618              		.section	.rodata.Mode_select.str1.4,"aMS",%progbits,1
 619              		.align	2
 620              	.LC0:
 621 0000 25640D00 		.ascii	"%d\015\000"
 622              		.text
 623              	.Letext0:
 624              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 625              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 626              		.file 4 "Inc/mode.h"
 627              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 628              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 629              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 630              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 631              		.file 9 "Inc/global.h"
 632              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 633              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 634              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 635              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 636              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 637              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 638              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 639              		.file 17 "Inc/tim.h"
 640              		.file 18 "Inc/control.h"
 641              		.file 19 "Inc/spi.h"
 642              		.file 20 "Inc/motion.h"
 643              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 644              		.file 22 "Inc/gpio.h"
 645              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 mode.c
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:18     .text.Mode_select:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:25     .text.Mode_select:00000000 Mode_select
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:128    .text.Mode_select:00000080 $d
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:134    .text.LeftHand:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:141    .text.LeftHand:00000000 LeftHand
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:207    .text.LeftHand:00000048 $d
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:213    .text.Mode_Straight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:220    .text.Mode_Straight:00000000 Mode_Straight
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:285    .text.Mode_Straight:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:291    .text.Mode_Turn_Half:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:298    .text.Mode_Turn_Half:00000000 Mode_Turn_Half
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:363    .text.Mode_Turn_Half:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:369    .text.Mode_Turn_Quarter_Left:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:376    .text.Mode_Turn_Quarter_Left:00000000 Mode_Turn_Quarter_Left
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:441    .text.Mode_Turn_Quarter_Left:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:447    .text.Mode_Circuit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:454    .text.Mode_Circuit:00000000 Mode_Circuit
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:520    .text.Mode_Circuit:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:526    .text.Mode_mouse:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:533    .text.Mode_mouse:00000000 Mode_mouse
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:550    .text.Mode_mouse:0000000a $d
                            *COM*:00000080 maze
                            *COM*:00000002 yawrate_pid
                            *COM*:00000002 straight_pid_r
                            *COM*:00000002 straight_pid_l
                            *COM*:00000004 y_sumsum
                            *COM*:00000004 y_sum
                            *COM*:00000004 s_sum_r
                            *COM*:00000004 s_sum_l
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:619    .rodata.Mode_select.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:557    .text.Mode_mouse:00000011 $d
C:\Users\kotaro\AppData\Local\Temp\ccl7muPj.s:557    .text.Mode_mouse:00000012 $t

UNDEFINED SYMBOLS
Output_Buzzer
Push
LED_Control
printf
enc
Straight_HalF
Turn_Quarter_Left
Turn_Half
Straight
Turn_Quarter_Right
flag
sensor
gyro_offset_calc_reset
HAL_Delay
Normal_Straight
Sensor_Mode
Test_Create_Map
