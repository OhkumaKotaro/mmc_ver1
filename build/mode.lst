ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Mode_select,"ax",%progbits
  18              		.align	1
  19              		.global	Mode_select
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Mode_select:
  26              	.LFB126:
  27              		.file 1 "Src/mode.c"
   1:Src/mode.c    **** #include "mode.h"
   2:Src/mode.c    **** #include "global.h"
   3:Src/mode.c    **** #include "gpio.h"
   4:Src/mode.c    **** #include "tim.h"
   5:Src/mode.c    **** #include "motion.h"
   6:Src/mode.c    **** #include "control.h"
   7:Src/mode.c    **** #include "spi.h"
   8:Src/mode.c    **** #include "adc.h"
   9:Src/mode.c    **** #include "maze.h"
  10:Src/mode.c    **** 
  11:Src/mode.c    **** maze_t maze;
  12:Src/mode.c    **** 
  13:Src/mode.c    **** 
  14:Src/mode.c    **** /****************************************************************************************
  15:Src/mode.c    ****  * outline  : return mode nomber
  16:Src/mode.c    ****  * argument : void
  17:Src/mode.c    ****  * return   : mode nomber 
  18:Src/mode.c    **** ********************************************************************************************/
  19:Src/mode.c    **** int8_t Mode_select(void){
  28              		.loc 1 19 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LVL0:
  20:Src/mode.c    ****     int8_t mode=0;
  38              		.loc 1 20 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 2


  39 0002 0024     		movs	r4, #0
  40 0004 1FE0     		b	.L7
  41              	.LVL1:
  42              	.L3:
  21:Src/mode.c    ****     while(1){
  22:Src/mode.c    ****         if((int16_t)enc.distance_l > 30 || (int16_t)enc.distance_l < -30){
  23:Src/mode.c    ****             if((int16_t)enc.distance_l > 30){
  24:Src/mode.c    ****                 mode++;
  25:Src/mode.c    ****             }else if((int16_t)enc.distance_l < -30){
  43              		.loc 1 25 0
  44 0006 13F11E0F 		cmn	r3, #30
  45 000a 2DDA     		bge	.L4
  26:Src/mode.c    ****                 mode--;
  46              		.loc 1 26 0
  47 000c 013C     		subs	r4, r4, #1
  48              	.LVL2:
  49 000e 64B2     		sxtb	r4, r4
  50              	.LVL3:
  51 0010 2AE0     		b	.L4
  52              	.L8:
  27:Src/mode.c    ****             }
  28:Src/mode.c    ****             if(mode > 6){
  29:Src/mode.c    ****                 mode = 0;
  53              		.loc 1 29 0
  54 0012 0024     		movs	r4, #0
  55              	.LVL4:
  56              	.L5:
  30:Src/mode.c    ****             }else if(mode < 0){
  31:Src/mode.c    ****                 mode = 6;
  32:Src/mode.c    ****             }
  33:Src/mode.c    ****             enc.distance_l = 0;
  57              		.loc 1 33 0
  58 0014 1A4B     		ldr	r3, .L13
  59 0016 0022     		movs	r2, #0
  60 0018 DA61     		str	r2, [r3, #28]	@ float
  34:Src/mode.c    ****             Output_Buzzer(170-10*mode);
  61              		.loc 1 34 0
  62 001a C4EB4413 		rsb	r3, r4, r4, lsl #5
  63 001e C4EB8303 		rsb	r3, r4, r3, lsl #2
  64 0022 5800     		lsls	r0, r3, #1
  65 0024 C0B2     		uxtb	r0, r0
  66 0026 5638     		subs	r0, r0, #86
  67 0028 00F0FE00 		and	r0, r0, #254
  68 002c FFF7FEFF 		bl	Output_Buzzer
  69              	.LVL5:
  70              	.L2:
  35:Src/mode.c    ****         }
  36:Src/mode.c    ****         if(Push()==ON){
  71              		.loc 1 36 0
  72 0030 FFF7FEFF 		bl	Push
  73              	.LVL6:
  74 0034 0128     		cmp	r0, #1
  75 0036 1DD0     		beq	.L11
  37:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
  38:Src/mode.c    ****             break;
  39:Src/mode.c    ****         }
  40:Src/mode.c    ****         LED_Control(mode);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 3


  76              		.loc 1 40 0
  77 0038 E0B2     		uxtb	r0, r4
  78 003a FFF7FEFF 		bl	LED_Control
  79              	.LVL7:
  41:Src/mode.c    ****         printf("%d\r",mode);
  80              		.loc 1 41 0
  81 003e 2146     		mov	r1, r4
  82 0040 1048     		ldr	r0, .L13+4
  83 0042 FFF7FEFF 		bl	printf
  84              	.LVL8:
  85              	.L7:
  22:Src/mode.c    ****             if((int16_t)enc.distance_l > 30){
  86              		.loc 1 22 0
  87 0046 0E4B     		ldr	r3, .L13
  88 0048 D3ED077A 		vldr.32	s15, [r3, #28]
  89 004c FDEEE77A 		vcvt.s32.f32	s15, s15
  90 0050 17EE903A 		vmov	r3, s15	@ int
  91 0054 1BB2     		sxth	r3, r3
  92 0056 03F11E02 		add	r2, r3, #30
  93 005a 92B2     		uxth	r2, r2
  94 005c 3C2A     		cmp	r2, #60
  95 005e E7D9     		bls	.L2
  23:Src/mode.c    ****                 mode++;
  96              		.loc 1 23 0
  97 0060 1E2B     		cmp	r3, #30
  98 0062 D0DD     		ble	.L3
  24:Src/mode.c    ****             }else if((int16_t)enc.distance_l < -30){
  99              		.loc 1 24 0
 100 0064 0134     		adds	r4, r4, #1
 101              	.LVL9:
 102 0066 64B2     		sxtb	r4, r4
 103              	.LVL10:
 104              	.L4:
  28:Src/mode.c    ****                 mode = 0;
 105              		.loc 1 28 0
 106 0068 062C     		cmp	r4, #6
 107 006a D2DC     		bgt	.L8
  30:Src/mode.c    ****                 mode = 6;
 108              		.loc 1 30 0
 109 006c 002C     		cmp	r4, #0
 110 006e D1DA     		bge	.L5
  31:Src/mode.c    ****             }
 111              		.loc 1 31 0
 112 0070 0624     		movs	r4, #6
 113              	.LVL11:
 114 0072 CFE7     		b	.L5
 115              	.LVL12:
 116              	.L11:
  37:Src/mode.c    ****             break;
 117              		.loc 1 37 0
 118 0074 4C20     		movs	r0, #76
 119 0076 FFF7FEFF 		bl	Output_Buzzer
 120              	.LVL13:
  42:Src/mode.c    ****     }
  43:Src/mode.c    ****     return mode;
  44:Src/mode.c    **** }
 121              		.loc 1 44 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 4


 122 007a 2046     		mov	r0, r4
 123 007c 10BD     		pop	{r4, pc}
 124              	.LVL14:
 125              	.L14:
 126 007e 00BF     		.align	2
 127              	.L13:
 128 0080 00000000 		.word	enc
 129 0084 00000000 		.word	.LC0
 130              		.cfi_endproc
 131              	.LFE126:
 133              		.section	.text.LeftHand,"ax",%progbits
 134              		.align	1
 135              		.global	LeftHand
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu fpv4-sp-d16
 141              	LeftHand:
 142              	.LFB128:
  45:Src/mode.c    **** 
  46:Src/mode.c    **** 
  47:Src/mode.c    **** /****************************************************************************************
  48:Src/mode.c    ****  * outline  : wright mode 
  49:Src/mode.c    ****  * argument : mode nomber
  50:Src/mode.c    ****  * return   : void
  51:Src/mode.c    **** ********************************************************************************************/
  52:Src/mode.c    **** void Mode_mouse(int8_t mode){
  53:Src/mode.c    ****     switch(mode){
  54:Src/mode.c    ****         case 0:
  55:Src/mode.c    ****             LeftHand();
  56:Src/mode.c    ****             break;
  57:Src/mode.c    ****         case 1:
  58:Src/mode.c    ****             Mode_Circuit();
  59:Src/mode.c    ****             break;
  60:Src/mode.c    ****         case 2:
  61:Src/mode.c    ****             flag.ir_led = ON;
  62:Src/mode.c    ****             while(1){
  63:Src/mode.c    ****                 if(sensor.wall[5]==true){
  64:Src/mode.c    ****                 Output_Buzzer(HZ_C_H);
  65:Src/mode.c    ****                 break;
  66:Src/mode.c    ****                 }
  67:Src/mode.c    ****             }
  68:Src/mode.c    ****             flag.ir_led = OFF;
  69:Src/mode.c    ****             Motion_Left();
  70:Src/mode.c    ****             break;
  71:Src/mode.c    ****         case 3:
  72:Src/mode.c    ****             flag.ir_led = ON;
  73:Src/mode.c    ****             while(1){
  74:Src/mode.c    ****                 if(sensor.wall[5]==true){
  75:Src/mode.c    ****                 Output_Buzzer(HZ_C_H);
  76:Src/mode.c    ****                 break;
  77:Src/mode.c    ****                 }
  78:Src/mode.c    ****             }
  79:Src/mode.c    ****             flag.ir_led = OFF;
  80:Src/mode.c    ****             Motion_Right();
  81:Src/mode.c    ****             break;
  82:Src/mode.c    ****         case 4:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 5


  83:Src/mode.c    ****             flag.ir_led = ON;
  84:Src/mode.c    ****             while(1){
  85:Src/mode.c    ****                 if(sensor.wall[5]==true){
  86:Src/mode.c    ****                 Output_Buzzer(HZ_C_H);
  87:Src/mode.c    ****                 break;
  88:Src/mode.c    ****                 }
  89:Src/mode.c    ****             }
  90:Src/mode.c    ****             flag.ir_led = OFF;
  91:Src/mode.c    ****             Motion_Uturn();
  92:Src/mode.c    ****             break;
  93:Src/mode.c    ****         case 5:
  94:Src/mode.c    ****             Motion_Start();
  95:Src/mode.c    ****             break;
  96:Src/mode.c    ****         case 6:
  97:Src/mode.c    ****             Sensor_Mode();
  98:Src/mode.c    ****             break;
  99:Src/mode.c    ****         default:
 100:Src/mode.c    ****             break;
 101:Src/mode.c    ****     }
 102:Src/mode.c    **** }
 103:Src/mode.c    **** 
 104:Src/mode.c    **** 
 105:Src/mode.c    **** void LeftHand(void){
 143              		.loc 1 105 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 148              	.LCFI1:
 149              		.cfi_def_cfa_offset 24
 150              		.cfi_offset 3, -24
 151              		.cfi_offset 4, -20
 152              		.cfi_offset 5, -16
 153              		.cfi_offset 6, -12
 154              		.cfi_offset 7, -8
 155              		.cfi_offset 14, -4
 106:Src/mode.c    ****     flag.ir_led = ON;
 156              		.loc 1 106 0
 157 0002 354B     		ldr	r3, .L34
 158 0004 0122     		movs	r2, #1
 159 0006 5A71     		strb	r2, [r3, #5]
 160              	.LVL15:
 107:Src/mode.c    ****     uint8_t flag_goal_is=false;
 108:Src/mode.c    ****     Maze_Set();
 161              		.loc 1 108 0
 162 0008 FFF7FEFF 		bl	Maze_Set
 163              	.LVL16:
 164              	.L16:
 109:Src/mode.c    **** 
 110:Src/mode.c    ****     while(1){
 111:Src/mode.c    ****         if(sensor.wall[5]==ON){
 165              		.loc 1 111 0
 166 000c 334B     		ldr	r3, .L34+4
 167 000e DC7F     		ldrb	r4, [r3, #31]	@ zero_extendqisi2
 168 0010 012C     		cmp	r4, #1
 169 0012 FBD1     		bne	.L16
 112:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 6


 170              		.loc 1 112 0
 171 0014 4C20     		movs	r0, #76
 172 0016 FFF7FEFF 		bl	Output_Buzzer
 173              	.LVL17:
 113:Src/mode.c    ****             break;
 114:Src/mode.c    ****         }
 115:Src/mode.c    ****     }
 116:Src/mode.c    ****     flag.ir_led = OFF;
 174              		.loc 1 116 0
 175 001a 2F4F     		ldr	r7, .L34
 176 001c 0025     		movs	r5, #0
 177 001e 7D71     		strb	r5, [r7, #5]
 117:Src/mode.c    ****     gyro_offset_calc_reset();
 178              		.loc 1 117 0
 179 0020 FFF7FEFF 		bl	gyro_offset_calc_reset
 180              	.LVL18:
 118:Src/mode.c    ****     HAL_Delay(2000);
 181              		.loc 1 118 0
 182 0024 4FF4FA60 		mov	r0, #2000
 183 0028 FFF7FEFF 		bl	HAL_Delay
 184              	.LVL19:
 119:Src/mode.c    ****     flag.ir_led = ON;
 185              		.loc 1 119 0
 186 002c 0126     		movs	r6, #1
 187 002e 7E71     		strb	r6, [r7, #5]
 120:Src/mode.c    ****     flag.motion_end = true;
 188              		.loc 1 120 0
 189 0030 BE72     		strb	r6, [r7, #10]
 121:Src/mode.c    ****     Motion_Start();
 190              		.loc 1 121 0
 191 0032 FFF7FEFF 		bl	Motion_Start
 192              	.LVL20:
 122:Src/mode.c    ****     position.x=0;
 193              		.loc 1 122 0
 194 0036 2A4B     		ldr	r3, .L34+8
 195 0038 1D70     		strb	r5, [r3]
 123:Src/mode.c    ****     position.y=1;
 196              		.loc 1 123 0
 197 003a 5E70     		strb	r6, [r3, #1]
 124:Src/mode.c    **** 
 125:Src/mode.c    ****     while(flag_goal_is==false){
 198              		.loc 1 125 0
 199 003c 1BE0     		b	.L17
 200              	.LVL21:
 201              	.L18:
 126:Src/mode.c    ****         if( sensor.wall[2]==false ){
 127:Src/mode.c    ****             flag.next_dir = LEFT;
 128:Src/mode.c    ****         }else if( sensor.wall[5] ==false ){
 202              		.loc 1 128 0
 203 003e 274B     		ldr	r3, .L34+4
 204 0040 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 205 0042 1BB9     		cbnz	r3, .L20
 129:Src/mode.c    ****             flag.next_dir = STRAIGHT;
 206              		.loc 1 129 0
 207 0044 244B     		ldr	r3, .L34
 208 0046 0022     		movs	r2, #0
 209 0048 1A73     		strb	r2, [r3, #12]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 7


 210 004a 1CE0     		b	.L19
 211              	.L20:
 130:Src/mode.c    ****         }else if( sensor.wall[1] == false ){
 212              		.loc 1 130 0
 213 004c 234B     		ldr	r3, .L34+4
 214 004e DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 215 0050 1BB9     		cbnz	r3, .L21
 131:Src/mode.c    ****             flag.next_dir = RIGHT;
 216              		.loc 1 131 0
 217 0052 214B     		ldr	r3, .L34
 218 0054 FF22     		movs	r2, #255
 219 0056 1A73     		strb	r2, [r3, #12]
 220 0058 15E0     		b	.L19
 221              	.L21:
 132:Src/mode.c    ****         }else{
 133:Src/mode.c    ****             flag.next_dir = UTURN;
 222              		.loc 1 133 0
 223 005a 1F4B     		ldr	r3, .L34
 224 005c 0222     		movs	r2, #2
 225 005e 1A73     		strb	r2, [r3, #12]
 226 0060 11E0     		b	.L19
 227              	.L33:
 134:Src/mode.c    ****         }
 135:Src/mode.c    **** 
 136:Src/mode.c    ****         Update_Position(flag.next_dir);
 137:Src/mode.c    ****         //Maze_GoalCheck(flag_goal_is);
 138:Src/mode.c    ****         if(position.x==mazeDef.maze_goal_x && position.y==mazeDef.maze_goal_y){
 228              		.loc 1 138 0 discriminator 1
 229 0062 1F4B     		ldr	r3, .L34+8
 230 0064 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 231 0066 1F4B     		ldr	r3, .L34+12
 232 0068 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 233 006a 9A42     		cmp	r2, r3
 234 006c 16D1     		bne	.L22
 139:Src/mode.c    ****             flag_goal_is=true;
 235              		.loc 1 139 0
 236 006e 2546     		mov	r5, r4
 237              	.LVL22:
 238 0070 14E0     		b	.L22
 239              	.LVL23:
 240              	.L27:
 140:Src/mode.c    ****         }
 141:Src/mode.c    **** 
 142:Src/mode.c    ****         switch( flag.next_dir ){
 143:Src/mode.c    ****             case LEFT:
 144:Src/mode.c    ****                 Motion_Left();
 241              		.loc 1 144 0
 242 0072 FFF7FEFF 		bl	Motion_Left
 243              	.LVL24:
 244              	.L17:
 125:Src/mode.c    ****         if( sensor.wall[2]==false ){
 245              		.loc 1 125 0
 246 0076 65BB     		cbnz	r5, .L32
 126:Src/mode.c    ****             flag.next_dir = LEFT;
 247              		.loc 1 126 0
 248 0078 184B     		ldr	r3, .L34+4
 249 007a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 8


 250 007c 002B     		cmp	r3, #0
 251 007e DED1     		bne	.L18
 127:Src/mode.c    ****         }else if( sensor.wall[5] ==false ){
 252              		.loc 1 127 0
 253 0080 154B     		ldr	r3, .L34
 254 0082 0122     		movs	r2, #1
 255 0084 1A73     		strb	r2, [r3, #12]
 256              	.L19:
 136:Src/mode.c    ****         //Maze_GoalCheck(flag_goal_is);
 257              		.loc 1 136 0
 258 0086 144B     		ldr	r3, .L34
 259 0088 187B     		ldrb	r0, [r3, #12]	@ zero_extendqisi2
 260 008a 40B2     		sxtb	r0, r0
 261 008c FFF7FEFF 		bl	Update_Position
 262              	.LVL25:
 138:Src/mode.c    ****             flag_goal_is=true;
 263              		.loc 1 138 0
 264 0090 134B     		ldr	r3, .L34+8
 265 0092 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 266 0094 134B     		ldr	r3, .L34+12
 267 0096 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 268 0098 9A42     		cmp	r2, r3
 269 009a E2D0     		beq	.L33
 270              	.LVL26:
 271              	.L22:
 142:Src/mode.c    ****             case LEFT:
 272              		.loc 1 142 0
 273 009c 0E4B     		ldr	r3, .L34
 274 009e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 275 00a0 5BB2     		sxtb	r3, r3
 276 00a2 0133     		adds	r3, r3, #1
 277 00a4 032B     		cmp	r3, #3
 278 00a6 E6D8     		bhi	.L17
 279 00a8 01A2     		adr	r2, .L25
 280 00aa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 281 00ae 00BF     		.p2align 2
 282              	.L25:
 283 00b0 C7000000 		.word	.L24+1
 284 00b4 C1000000 		.word	.L26+1
 285 00b8 73000000 		.word	.L27+1
 286 00bc CD000000 		.word	.L28+1
 287              		.p2align 1
 288              	.L26:
 145:Src/mode.c    ****                 break;
 146:Src/mode.c    **** 
 147:Src/mode.c    ****             case STRAIGHT:
 148:Src/mode.c    ****                 Motion_Straight();
 289              		.loc 1 148 0
 290 00c0 FFF7FEFF 		bl	Motion_Straight
 291              	.LVL27:
 149:Src/mode.c    ****                 break;
 292              		.loc 1 149 0
 293 00c4 D7E7     		b	.L17
 294              	.L24:
 150:Src/mode.c    ****             
 151:Src/mode.c    ****             case RIGHT:
 152:Src/mode.c    ****                 Motion_Right();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 9


 295              		.loc 1 152 0
 296 00c6 FFF7FEFF 		bl	Motion_Right
 297              	.LVL28:
 153:Src/mode.c    ****                 break;
 298              		.loc 1 153 0
 299 00ca D4E7     		b	.L17
 300              	.L28:
 154:Src/mode.c    **** 
 155:Src/mode.c    ****             case UTURN:
 156:Src/mode.c    ****                 Motion_Uturn();
 301              		.loc 1 156 0
 302 00cc FFF7FEFF 		bl	Motion_Uturn
 303              	.LVL29:
 157:Src/mode.c    ****                 break;
 304              		.loc 1 157 0
 305 00d0 D1E7     		b	.L17
 306              	.L32:
 158:Src/mode.c    ****         }
 159:Src/mode.c    ****     }
 160:Src/mode.c    ****     Motion_Goal();
 307              		.loc 1 160 0
 308 00d2 FFF7FEFF 		bl	Motion_Goal
 309              	.LVL30:
 161:Src/mode.c    **** }
 310              		.loc 1 161 0
 311 00d6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 312              	.LVL31:
 313              	.L35:
 314              		.align	2
 315              	.L34:
 316 00d8 00000000 		.word	flag
 317 00dc 00000000 		.word	sensor
 318 00e0 00000000 		.word	position
 319 00e4 00000000 		.word	mazeDef
 320              		.cfi_endproc
 321              	.LFE128:
 323              		.section	.text.Mode_Adachi,"ax",%progbits
 324              		.align	1
 325              		.global	Mode_Adachi
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu fpv4-sp-d16
 331              	Mode_Adachi:
 332              	.LFB129:
 162:Src/mode.c    **** 
 163:Src/mode.c    **** void Mode_Adachi(void){
 333              		.loc 1 163 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337 0000 08B5     		push	{r3, lr}
 338              	.LCFI2:
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 3, -8
 341              		.cfi_offset 14, -4
 164:Src/mode.c    ****     //uint8_t flag_goal_is;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 10


 165:Src/mode.c    **** 
 166:Src/mode.c    ****     flag.ir_led = ON;
 342              		.loc 1 166 0
 343 0002 094B     		ldr	r3, .L39
 344 0004 0122     		movs	r2, #1
 345 0006 5A71     		strb	r2, [r3, #5]
 346              	.L37:
 167:Src/mode.c    ****     while(1){
 168:Src/mode.c    ****         if(sensor.wall[5]==true){
 347              		.loc 1 168 0
 348 0008 084B     		ldr	r3, .L39+4
 349 000a DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 350 000c 012B     		cmp	r3, #1
 351 000e FBD1     		bne	.L37
 169:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
 352              		.loc 1 169 0
 353 0010 4C20     		movs	r0, #76
 354 0012 FFF7FEFF 		bl	Output_Buzzer
 355              	.LVL32:
 170:Src/mode.c    ****             break;
 171:Src/mode.c    ****         }
 172:Src/mode.c    ****     }
 173:Src/mode.c    ****     gyro_offset_calc_reset();
 356              		.loc 1 173 0
 357 0016 FFF7FEFF 		bl	gyro_offset_calc_reset
 358              	.LVL33:
 174:Src/mode.c    ****     HAL_Delay(2000);
 359              		.loc 1 174 0
 360 001a 4FF4FA60 		mov	r0, #2000
 361 001e FFF7FEFF 		bl	HAL_Delay
 362              	.LVL34:
 175:Src/mode.c    ****     Motion_Start();
 363              		.loc 1 175 0
 364 0022 FFF7FEFF 		bl	Motion_Start
 365              	.LVL35:
 176:Src/mode.c    ****     /*
 177:Src/mode.c    ****     while(flag_goal_is==false){
 178:Src/mode.c    ****         
 179:Src/mode.c    ****     }
 180:Src/mode.c    ****     */
 181:Src/mode.c    **** }
 366              		.loc 1 181 0
 367 0026 08BD     		pop	{r3, pc}
 368              	.L40:
 369              		.align	2
 370              	.L39:
 371 0028 00000000 		.word	flag
 372 002c 00000000 		.word	sensor
 373              		.cfi_endproc
 374              	.LFE129:
 376              		.section	.text.Mode_Circuit,"ax",%progbits
 377              		.align	1
 378              		.global	Mode_Circuit
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 11


 384              	Mode_Circuit:
 385              	.LFB130:
 182:Src/mode.c    **** 
 183:Src/mode.c    **** void Mode_Circuit(void){
 386              		.loc 1 183 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390 0000 10B5     		push	{r4, lr}
 391              	.LCFI3:
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 4, -8
 394              		.cfi_offset 14, -4
 184:Src/mode.c    ****     flag.ir_led = ON;
 395              		.loc 1 184 0
 396 0002 0C4B     		ldr	r3, .L44
 397 0004 0122     		movs	r2, #1
 398 0006 5A71     		strb	r2, [r3, #5]
 399              	.L42:
 185:Src/mode.c    ****     while(1){
 186:Src/mode.c    ****         if(sensor.wall[5]==true){
 400              		.loc 1 186 0
 401 0008 0B4B     		ldr	r3, .L44+4
 402 000a DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 403 000c 012B     		cmp	r3, #1
 404 000e FBD1     		bne	.L42
 187:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
 405              		.loc 1 187 0
 406 0010 4C20     		movs	r0, #76
 407 0012 FFF7FEFF 		bl	Output_Buzzer
 408              	.LVL36:
 188:Src/mode.c    ****             break;
 189:Src/mode.c    ****         }
 190:Src/mode.c    ****     }
 191:Src/mode.c    ****     flag.ir_led=OFF;
 409              		.loc 1 191 0
 410 0016 074C     		ldr	r4, .L44
 411 0018 0023     		movs	r3, #0
 412 001a 6371     		strb	r3, [r4, #5]
 192:Src/mode.c    ****     gyro_offset_calc_reset();
 413              		.loc 1 192 0
 414 001c FFF7FEFF 		bl	gyro_offset_calc_reset
 415              	.LVL37:
 193:Src/mode.c    ****     HAL_Delay(2000);
 416              		.loc 1 193 0
 417 0020 4FF4FA60 		mov	r0, #2000
 418 0024 FFF7FEFF 		bl	HAL_Delay
 419              	.LVL38:
 194:Src/mode.c    ****     flag.ir_led=ON;
 420              		.loc 1 194 0
 421 0028 0123     		movs	r3, #1
 422 002a 6371     		strb	r3, [r4, #5]
 195:Src/mode.c    ****     Motion_Straight_Check();
 423              		.loc 1 195 0
 424 002c FFF7FEFF 		bl	Motion_Straight_Check
 425              	.LVL39:
 196:Src/mode.c    ****     //Motion_Start();    
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 12


 197:Src/mode.c    **** }...
 426              		.loc 1 197 0
 427 0030 10BD     		pop	{r4, pc}
 428              	.L45:
 429 0032 00BF     		.align	2
 430              	.L44:
 431 0034 00000000 		.word	flag
 432 0038 00000000 		.word	sensor
 433              		.cfi_endproc
 434              	.LFE130:
 436              		.section	.text.Mode_mouse,"ax",%progbits
 437              		.align	1
 438              		.global	Mode_mouse
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv4-sp-d16
 444              	Mode_mouse:
 445              	.LFB127:
  52:Src/mode.c    **** void Mode_mouse(int8_t mode){
 446              		.loc 1 52 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              	.LVL40:
 451 0000 08B5     		push	{r3, lr}
 452              	.LCFI4:
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 3, -8
 455              		.cfi_offset 14, -4
  53:Src/mode.c    ****     switch(mode){
 456              		.loc 1 53 0
 457 0002 0628     		cmp	r0, #6
 458 0004 07D8     		bhi	.L46
 459 0006 DFE800F0 		tbb	[pc, r0]
 460              	.L49:
 461 000a 04       		.byte	(.L48-.L49)/2
 462 000b 07       		.byte	(.L50-.L49)/2
 463 000c 0A       		.byte	(.L51-.L49)/2
 464 000d 1A       		.byte	(.L52-.L49)/2
 465 000e 2A       		.byte	(.L53-.L49)/2
 466 000f 3A       		.byte	(.L54-.L49)/2
 467 0010 3D       		.byte	(.L55-.L49)/2
 468 0011 00       		.p2align 1
 469              	.L48:
  55:Src/mode.c    ****             LeftHand();
 470              		.loc 1 55 0
 471 0012 FFF7FEFF 		bl	LeftHand
 472              	.LVL41:
 473              	.L46:
 102:Src/mode.c    **** }
 474              		.loc 1 102 0
 475 0016 08BD     		pop	{r3, pc}
 476              	.LVL42:
 477              	.L50:
  58:Src/mode.c    ****             Mode_Circuit();
 478              		.loc 1 58 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 13


 479 0018 FFF7FEFF 		bl	Mode_Circuit
 480              	.LVL43:
  59:Src/mode.c    ****             break;
 481              		.loc 1 59 0
 482 001c FBE7     		b	.L46
 483              	.LVL44:
 484              	.L51:
  61:Src/mode.c    ****             flag.ir_led = ON;
 485              		.loc 1 61 0
 486 001e 1B4B     		ldr	r3, .L60
 487 0020 0122     		movs	r2, #1
 488 0022 5A71     		strb	r2, [r3, #5]
 489              	.L56:
  63:Src/mode.c    ****                 if(sensor.wall[5]==true){
 490              		.loc 1 63 0
 491 0024 1A4B     		ldr	r3, .L60+4
 492 0026 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 493 0028 012B     		cmp	r3, #1
 494 002a FBD1     		bne	.L56
  64:Src/mode.c    ****                 Output_Buzzer(HZ_C_H);
 495              		.loc 1 64 0
 496 002c 4C20     		movs	r0, #76
 497              	.LVL45:
 498 002e FFF7FEFF 		bl	Output_Buzzer
 499              	.LVL46:
  68:Src/mode.c    ****             flag.ir_led = OFF;
 500              		.loc 1 68 0
 501 0032 164B     		ldr	r3, .L60
 502 0034 0022     		movs	r2, #0
 503 0036 5A71     		strb	r2, [r3, #5]
  69:Src/mode.c    ****             Motion_Left();
 504              		.loc 1 69 0
 505 0038 FFF7FEFF 		bl	Motion_Left
 506              	.LVL47:
  70:Src/mode.c    ****             break;
 507              		.loc 1 70 0
 508 003c EBE7     		b	.L46
 509              	.LVL48:
 510              	.L52:
  72:Src/mode.c    ****             flag.ir_led = ON;
 511              		.loc 1 72 0
 512 003e 134B     		ldr	r3, .L60
 513 0040 0122     		movs	r2, #1
 514 0042 5A71     		strb	r2, [r3, #5]
 515              	.L57:
  74:Src/mode.c    ****                 if(sensor.wall[5]==true){
 516              		.loc 1 74 0
 517 0044 124B     		ldr	r3, .L60+4
 518 0046 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 519 0048 012B     		cmp	r3, #1
 520 004a FBD1     		bne	.L57
  75:Src/mode.c    ****                 Output_Buzzer(HZ_C_H);
 521              		.loc 1 75 0
 522 004c 4C20     		movs	r0, #76
 523              	.LVL49:
 524 004e FFF7FEFF 		bl	Output_Buzzer
 525              	.LVL50:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 14


  79:Src/mode.c    ****             flag.ir_led = OFF;
 526              		.loc 1 79 0
 527 0052 0E4B     		ldr	r3, .L60
 528 0054 0022     		movs	r2, #0
 529 0056 5A71     		strb	r2, [r3, #5]
  80:Src/mode.c    ****             Motion_Right();
 530              		.loc 1 80 0
 531 0058 FFF7FEFF 		bl	Motion_Right
 532              	.LVL51:
  81:Src/mode.c    ****             break;
 533              		.loc 1 81 0
 534 005c DBE7     		b	.L46
 535              	.LVL52:
 536              	.L53:
  83:Src/mode.c    ****             flag.ir_led = ON;
 537              		.loc 1 83 0
 538 005e 0B4B     		ldr	r3, .L60
 539 0060 0122     		movs	r2, #1
 540 0062 5A71     		strb	r2, [r3, #5]
 541              	.L58:
  85:Src/mode.c    ****                 if(sensor.wall[5]==true){
 542              		.loc 1 85 0
 543 0064 0A4B     		ldr	r3, .L60+4
 544 0066 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 545 0068 012B     		cmp	r3, #1
 546 006a FBD1     		bne	.L58
  86:Src/mode.c    ****                 Output_Buzzer(HZ_C_H);
 547              		.loc 1 86 0
 548 006c 4C20     		movs	r0, #76
 549              	.LVL53:
 550 006e FFF7FEFF 		bl	Output_Buzzer
 551              	.LVL54:
  90:Src/mode.c    ****             flag.ir_led = OFF;
 552              		.loc 1 90 0
 553 0072 064B     		ldr	r3, .L60
 554 0074 0022     		movs	r2, #0
 555 0076 5A71     		strb	r2, [r3, #5]
  91:Src/mode.c    ****             Motion_Uturn();
 556              		.loc 1 91 0
 557 0078 FFF7FEFF 		bl	Motion_Uturn
 558              	.LVL55:
  92:Src/mode.c    ****             break;
 559              		.loc 1 92 0
 560 007c CBE7     		b	.L46
 561              	.LVL56:
 562              	.L54:
  94:Src/mode.c    ****             Motion_Start();
 563              		.loc 1 94 0
 564 007e FFF7FEFF 		bl	Motion_Start
 565              	.LVL57:
  95:Src/mode.c    ****             break;
 566              		.loc 1 95 0
 567 0082 C8E7     		b	.L46
 568              	.LVL58:
 569              	.L55:
  97:Src/mode.c    ****             Sensor_Mode();
 570              		.loc 1 97 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 15


 571 0084 FFF7FEFF 		bl	Sensor_Mode
 572              	.LVL59:
 102:Src/mode.c    **** }
 573              		.loc 1 102 0
 574 0088 C5E7     		b	.L46
 575              	.L61:
 576 008a 00BF     		.align	2
 577              	.L60:
 578 008c 00000000 		.word	flag
 579 0090 00000000 		.word	sensor
 580              		.cfi_endproc
 581              	.LFE127:
 583              		.comm	maze,1795,4
 584              		.comm	straight_dir,1,1
 585              		.comm	wall_pid,2,2
 586              		.comm	yawrate_pid,2,2
 587              		.comm	straight_pid_r,2,2
 588              		.comm	straight_pid_l,2,2
 589              		.comm	w_befor,4,4
 590              		.comm	w_sum,4,4
 591              		.comm	y_sumsum,4,4
 592              		.comm	y_sum,4,4
 593              		.comm	s_sum_r,4,4
 594              		.comm	s_sum_l,4,4
 595              		.section	.rodata.Mode_select.str1.4,"aMS",%progbits,1
 596              		.align	2
 597              	.LC0:
 598 0000 25640D00 		.ascii	"%d\015\000"
 599              		.text
 600              	.Letext0:
 601              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 602              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 603              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 604              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 605              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 606              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 607              		.file 8 "Inc/global.h"
 608              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 609              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 610              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 611              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 612              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 613              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 614              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 615              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 616              		.file 17 "Inc/tim.h"
 617              		.file 18 "Inc/control.h"
 618              		.file 19 "Inc/spi.h"
 619              		.file 20 "Inc/adc.h"
 620              		.file 21 "Inc/maze.h"
 621              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 622              		.file 23 "Inc/motion.h"
 623              		.file 24 "Inc/gpio.h"
 624              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 mode.c
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:18     .text.Mode_select:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:25     .text.Mode_select:00000000 Mode_select
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:128    .text.Mode_select:00000080 $d
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:134    .text.LeftHand:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:141    .text.LeftHand:00000000 LeftHand
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:283    .text.LeftHand:000000b0 $d
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:287    .text.LeftHand:000000c0 $t
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:316    .text.LeftHand:000000d8 $d
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:324    .text.Mode_Adachi:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:331    .text.Mode_Adachi:00000000 Mode_Adachi
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:371    .text.Mode_Adachi:00000028 $d
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:377    .text.Mode_Circuit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:384    .text.Mode_Circuit:00000000 Mode_Circuit
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:431    .text.Mode_Circuit:00000034 $d
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:437    .text.Mode_mouse:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:444    .text.Mode_mouse:00000000 Mode_mouse
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:461    .text.Mode_mouse:0000000a $d
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:578    .text.Mode_mouse:0000008c $d
                            *COM*:00000703 maze
                            *COM*:00000001 straight_dir
                            *COM*:00000002 wall_pid
                            *COM*:00000002 yawrate_pid
                            *COM*:00000002 straight_pid_r
                            *COM*:00000002 straight_pid_l
                            *COM*:00000004 w_befor
                            *COM*:00000004 w_sum
                            *COM*:00000004 y_sumsum
                            *COM*:00000004 y_sum
                            *COM*:00000004 s_sum_r
                            *COM*:00000004 s_sum_l
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:596    .rodata.Mode_select.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:468    .text.Mode_mouse:00000011 $d
C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s:468    .text.Mode_mouse:00000012 $t

UNDEFINED SYMBOLS
Output_Buzzer
Push
LED_Control
printf
enc
Maze_Set
gyro_offset_calc_reset
HAL_Delay
Motion_Start
Motion_Left
Update_Position
Motion_Straight
Motion_Right
Motion_Uturn
Motion_Goal
flag
sensor
position
mazeDef
Motion_Straight_Check
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccpWPaEh.s 			page 17


Sensor_Mode
