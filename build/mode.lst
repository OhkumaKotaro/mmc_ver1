ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Mode_select,"ax",%progbits
  18              		.align	1
  19              		.global	Mode_select
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Mode_select:
  26              	.LFB126:
  27              		.file 1 "Src/mode.c"
   1:Src/mode.c    **** #include "mode.h"
   2:Src/mode.c    **** #include "global.h"
   3:Src/mode.c    **** #include "gpio.h"
   4:Src/mode.c    **** #include "tim.h"
   5:Src/mode.c    **** #include "motion.h"
   6:Src/mode.c    **** #include "control.h"
   7:Src/mode.c    **** #include "spi.h"
   8:Src/mode.c    **** #include "adc.h"
   9:Src/mode.c    **** #include "maze.h"
  10:Src/mode.c    **** 
  11:Src/mode.c    **** maze_t maze;
  12:Src/mode.c    **** 
  13:Src/mode.c    **** 
  14:Src/mode.c    **** /****************************************************************************************
  15:Src/mode.c    ****  * outline  : return mode nomber
  16:Src/mode.c    ****  * argument : void
  17:Src/mode.c    ****  * return   : mode nomber 
  18:Src/mode.c    **** ********************************************************************************************/
  19:Src/mode.c    **** int8_t Mode_select(void){
  28              		.loc 1 19 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LVL0:
  20:Src/mode.c    ****     int8_t mode=0;
  38              		.loc 1 20 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 2


  39 0002 0024     		movs	r4, #0
  40 0004 1FE0     		b	.L7
  41              	.LVL1:
  42              	.L3:
  21:Src/mode.c    ****     while(1){
  22:Src/mode.c    ****         if((int16_t)enc.distance_l > 30 || (int16_t)enc.distance_l < -30){
  23:Src/mode.c    ****             if((int16_t)enc.distance_l > 30){
  24:Src/mode.c    ****                 mode++;
  25:Src/mode.c    ****             }else if((int16_t)enc.distance_l < -30){
  43              		.loc 1 25 0
  44 0006 13F11E0F 		cmn	r3, #30
  45 000a 2DDA     		bge	.L4
  26:Src/mode.c    ****                 mode--;
  46              		.loc 1 26 0
  47 000c 013C     		subs	r4, r4, #1
  48              	.LVL2:
  49 000e 64B2     		sxtb	r4, r4
  50              	.LVL3:
  51 0010 2AE0     		b	.L4
  52              	.L8:
  27:Src/mode.c    ****             }
  28:Src/mode.c    ****             if(mode > 6){
  29:Src/mode.c    ****                 mode = 0;
  53              		.loc 1 29 0
  54 0012 0024     		movs	r4, #0
  55              	.LVL4:
  56              	.L5:
  30:Src/mode.c    ****             }else if(mode < 0){
  31:Src/mode.c    ****                 mode = 6;
  32:Src/mode.c    ****             }
  33:Src/mode.c    ****             enc.distance_l = 0;
  57              		.loc 1 33 0
  58 0014 1C4B     		ldr	r3, .L13
  59 0016 0022     		movs	r2, #0
  60 0018 DA61     		str	r2, [r3, #28]	@ float
  34:Src/mode.c    ****             Output_Buzzer(170-10*mode);
  61              		.loc 1 34 0
  62 001a C4EB4413 		rsb	r3, r4, r4, lsl #5
  63 001e C4EB8303 		rsb	r3, r4, r3, lsl #2
  64 0022 5800     		lsls	r0, r3, #1
  65 0024 C0B2     		uxtb	r0, r0
  66 0026 5638     		subs	r0, r0, #86
  67 0028 00F0FE00 		and	r0, r0, #254
  68 002c FFF7FEFF 		bl	Output_Buzzer
  69              	.LVL5:
  70              	.L2:
  35:Src/mode.c    ****         }
  36:Src/mode.c    ****         if(Push()==ON){
  71              		.loc 1 36 0
  72 0030 FFF7FEFF 		bl	Push
  73              	.LVL6:
  74 0034 0128     		cmp	r0, #1
  75 0036 1DD0     		beq	.L11
  37:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
  38:Src/mode.c    ****             HAL_Delay(500);
  39:Src/mode.c    ****             break;
  40:Src/mode.c    ****         }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 3


  41:Src/mode.c    ****         LED_Control(mode);
  76              		.loc 1 41 0
  77 0038 E0B2     		uxtb	r0, r4
  78 003a FFF7FEFF 		bl	LED_Control
  79              	.LVL7:
  42:Src/mode.c    ****         printf("%d\r",mode);
  80              		.loc 1 42 0
  81 003e 2146     		mov	r1, r4
  82 0040 1248     		ldr	r0, .L13+4
  83 0042 FFF7FEFF 		bl	printf
  84              	.LVL8:
  85              	.L7:
  22:Src/mode.c    ****             if((int16_t)enc.distance_l > 30){
  86              		.loc 1 22 0
  87 0046 104B     		ldr	r3, .L13
  88 0048 D3ED077A 		vldr.32	s15, [r3, #28]
  89 004c FDEEE77A 		vcvt.s32.f32	s15, s15
  90 0050 17EE903A 		vmov	r3, s15	@ int
  91 0054 1BB2     		sxth	r3, r3
  92 0056 03F11E02 		add	r2, r3, #30
  93 005a 92B2     		uxth	r2, r2
  94 005c 3C2A     		cmp	r2, #60
  95 005e E7D9     		bls	.L2
  23:Src/mode.c    ****                 mode++;
  96              		.loc 1 23 0
  97 0060 1E2B     		cmp	r3, #30
  98 0062 D0DD     		ble	.L3
  24:Src/mode.c    ****             }else if((int16_t)enc.distance_l < -30){
  99              		.loc 1 24 0
 100 0064 0134     		adds	r4, r4, #1
 101              	.LVL9:
 102 0066 64B2     		sxtb	r4, r4
 103              	.LVL10:
 104              	.L4:
  28:Src/mode.c    ****                 mode = 0;
 105              		.loc 1 28 0
 106 0068 062C     		cmp	r4, #6
 107 006a D2DC     		bgt	.L8
  30:Src/mode.c    ****                 mode = 6;
 108              		.loc 1 30 0
 109 006c 002C     		cmp	r4, #0
 110 006e D1DA     		bge	.L5
  31:Src/mode.c    ****             }
 111              		.loc 1 31 0
 112 0070 0624     		movs	r4, #6
 113              	.LVL11:
 114 0072 CFE7     		b	.L5
 115              	.LVL12:
 116              	.L11:
  37:Src/mode.c    ****             HAL_Delay(500);
 117              		.loc 1 37 0
 118 0074 4C20     		movs	r0, #76
 119 0076 FFF7FEFF 		bl	Output_Buzzer
 120              	.LVL13:
  38:Src/mode.c    ****             break;
 121              		.loc 1 38 0
 122 007a 4FF4FA70 		mov	r0, #500
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 4


 123 007e FFF7FEFF 		bl	HAL_Delay
 124              	.LVL14:
  43:Src/mode.c    ****     }
  44:Src/mode.c    ****     return mode;
  45:Src/mode.c    **** }
 125              		.loc 1 45 0
 126 0082 2046     		mov	r0, r4
 127 0084 10BD     		pop	{r4, pc}
 128              	.LVL15:
 129              	.L14:
 130 0086 00BF     		.align	2
 131              	.L13:
 132 0088 00000000 		.word	enc
 133 008c 00000000 		.word	.LC0
 134              		.cfi_endproc
 135              	.LFE126:
 137              		.section	.text.LeftHand,"ax",%progbits
 138              		.align	1
 139              		.global	LeftHand
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
 145              	LeftHand:
 146              	.LFB128:
  46:Src/mode.c    **** 
  47:Src/mode.c    **** 
  48:Src/mode.c    **** /****************************************************************************************
  49:Src/mode.c    ****  * outline  : wright mode 
  50:Src/mode.c    ****  * argument : mode nomber
  51:Src/mode.c    ****  * return   : void
  52:Src/mode.c    **** ********************************************************************************************/
  53:Src/mode.c    **** void Mode_mouse(int8_t mode){
  54:Src/mode.c    ****     switch(mode){
  55:Src/mode.c    ****         case 0:
  56:Src/mode.c    ****             Mode_Adachi();
  57:Src/mode.c    **** 
  58:Src/mode.c    ****             break;
  59:Src/mode.c    ****         case 1:
  60:Src/mode.c    ****             LeftHand();
  61:Src/mode.c    ****             break;
  62:Src/mode.c    ****         case 2:
  63:Src/mode.c    ****             PT_Switch();
  64:Src/mode.c    ****             gyro_offset_calc_reset();
  65:Src/mode.c    ****             HAL_Delay(2000);
  66:Src/mode.c    ****             Motion_Left();
  67:Src/mode.c    ****             break;
  68:Src/mode.c    ****         case 3:
  69:Src/mode.c    ****             PT_Switch();
  70:Src/mode.c    ****             gyro_offset_calc_reset();
  71:Src/mode.c    ****             HAL_Delay(2000);
  72:Src/mode.c    ****             Motion_Right();
  73:Src/mode.c    ****             break;
  74:Src/mode.c    ****         case 4:
  75:Src/mode.c    ****             PT_Switch();
  76:Src/mode.c    ****             gyro_offset_calc_reset();
  77:Src/mode.c    ****             HAL_Delay(4000);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 5


  78:Src/mode.c    ****             flag.ir_led = ON;
  79:Src/mode.c    ****             if(sensor.wall[5]==false){
  80:Src/mode.c    ****                 flag.kabeate=false;
  81:Src/mode.c    ****             }else{
  82:Src/mode.c    ****                 flag.kabeate=true;
  83:Src/mode.c    ****             }
  84:Src/mode.c    ****             Motion_Uturn();
  85:Src/mode.c    ****             break;
  86:Src/mode.c    ****         case 5:
  87:Src/mode.c    ****             PT_Switch();
  88:Src/mode.c    ****             gyro_offset_calc_reset();
  89:Src/mode.c    ****             HAL_Delay(2000);
  90:Src/mode.c    ****             Motion_Kabeate();
  91:Src/mode.c    ****             break;
  92:Src/mode.c    ****         case 6:
  93:Src/mode.c    ****             //Show_log();
  94:Src/mode.c    ****             Sensor_Mode();
  95:Src/mode.c    ****             break;
  96:Src/mode.c    ****         default:
  97:Src/mode.c    ****             break;
  98:Src/mode.c    ****     }
  99:Src/mode.c    **** }
 100:Src/mode.c    **** 
 101:Src/mode.c    **** 
 102:Src/mode.c    **** void LeftHand(void){
 147              		.loc 1 102 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151 0000 70B5     		push	{r4, r5, r6, lr}
 152              	.LCFI1:
 153              		.cfi_def_cfa_offset 16
 154              		.cfi_offset 4, -16
 155              		.cfi_offset 5, -12
 156              		.cfi_offset 6, -8
 157              		.cfi_offset 14, -4
 103:Src/mode.c    ****     flag.ir_led = ON;
 158              		.loc 1 103 0
 159 0002 2F4B     		ldr	r3, .L33
 160 0004 0122     		movs	r2, #1
 161 0006 5A71     		strb	r2, [r3, #5]
 162              	.LVL16:
 104:Src/mode.c    ****     uint8_t flag_goal_is=false;
 105:Src/mode.c    ****     Maze_Set();
 163              		.loc 1 105 0
 164 0008 FFF7FEFF 		bl	Maze_Set
 165              	.LVL17:
 166              	.L16:
 106:Src/mode.c    **** 
 107:Src/mode.c    ****     while(1){
 108:Src/mode.c    ****         if(sensor.wall[5]==ON){
 167              		.loc 1 108 0
 168 000c 2D4B     		ldr	r3, .L33+4
 169 000e DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 170 0010 012B     		cmp	r3, #1
 171 0012 FBD1     		bne	.L16
 109:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 6


 172              		.loc 1 109 0
 173 0014 4C20     		movs	r0, #76
 174 0016 FFF7FEFF 		bl	Output_Buzzer
 175              	.LVL18:
 110:Src/mode.c    ****             break;
 111:Src/mode.c    ****         }
 112:Src/mode.c    ****     }
 113:Src/mode.c    ****     flag.ir_led = OFF;
 176              		.loc 1 113 0
 177 001a 294D     		ldr	r5, .L33
 178 001c 0026     		movs	r6, #0
 179 001e 6E71     		strb	r6, [r5, #5]
 114:Src/mode.c    ****     gyro_offset_calc_reset();
 180              		.loc 1 114 0
 181 0020 FFF7FEFF 		bl	gyro_offset_calc_reset
 182              	.LVL19:
 115:Src/mode.c    ****     HAL_Delay(2000);
 183              		.loc 1 115 0
 184 0024 4FF4FA60 		mov	r0, #2000
 185 0028 FFF7FEFF 		bl	HAL_Delay
 186              	.LVL20:
 116:Src/mode.c    ****     flag.ir_led = ON;
 187              		.loc 1 116 0
 188 002c 0124     		movs	r4, #1
 189 002e 6C71     		strb	r4, [r5, #5]
 117:Src/mode.c    ****     flag.motion_end = true;
 190              		.loc 1 117 0
 191 0030 AC72     		strb	r4, [r5, #10]
 118:Src/mode.c    ****     Motion_Start();
 192              		.loc 1 118 0
 193 0032 FFF7FEFF 		bl	Motion_Start
 194              	.LVL21:
 119:Src/mode.c    ****     position.x=0;
 195              		.loc 1 119 0
 196 0036 244B     		ldr	r3, .L33+8
 197 0038 1E70     		strb	r6, [r3]
 120:Src/mode.c    ****     position.y=1;
 198              		.loc 1 120 0
 199 003a 5C70     		strb	r4, [r3, #1]
 121:Src/mode.c    **** 
 122:Src/mode.c    ****     while(flag_goal_is==false){
 200              		.loc 1 122 0
 201 003c 13E0     		b	.L21
 202              	.L32:
 123:Src/mode.c    ****         if( sensor.wall[2]==false ){
 124:Src/mode.c    ****             flag.next_dir = LEFT;
 125:Src/mode.c    ****         }else if( sensor.wall[5] ==false ){
 203              		.loc 1 125 0
 204 003e 214B     		ldr	r3, .L33+4
 205 0040 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 206 0042 1BB9     		cbnz	r3, .L19
 126:Src/mode.c    ****             flag.next_dir = STRAIGHT;
 207              		.loc 1 126 0
 208 0044 1E4B     		ldr	r3, .L33
 209 0046 0022     		movs	r2, #0
 210 0048 1A73     		strb	r2, [r3, #12]
 211 004a 13E0     		b	.L18
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 7


 212              	.L19:
 127:Src/mode.c    ****         }else if( sensor.wall[1] == false ){
 213              		.loc 1 127 0
 214 004c 1D4B     		ldr	r3, .L33+4
 215 004e DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 216 0050 1BB9     		cbnz	r3, .L20
 128:Src/mode.c    ****             flag.next_dir = RIGHT;
 217              		.loc 1 128 0
 218 0052 1B4B     		ldr	r3, .L33
 219 0054 FF22     		movs	r2, #255
 220 0056 1A73     		strb	r2, [r3, #12]
 221 0058 0CE0     		b	.L18
 222              	.L20:
 129:Src/mode.c    ****         }else{
 130:Src/mode.c    ****             flag.next_dir = UTURN;
 223              		.loc 1 130 0
 224 005a 194B     		ldr	r3, .L33
 225 005c 0222     		movs	r2, #2
 226 005e 1A73     		strb	r2, [r3, #12]
 227 0060 08E0     		b	.L18
 228              	.L25:
 131:Src/mode.c    ****         }
 132:Src/mode.c    **** 
 133:Src/mode.c    ****         Update_Position(flag.next_dir);
 134:Src/mode.c    ****         Maze_GoalCheck(flag_goal_is);
 135:Src/mode.c    ****         HAL_Delay(200);
 136:Src/mode.c    ****         switch( flag.next_dir ){
 137:Src/mode.c    ****             case LEFT:
 138:Src/mode.c    ****                 Motion_Left();
 229              		.loc 1 138 0
 230 0062 FFF7FEFF 		bl	Motion_Left
 231              	.LVL22:
 232              	.L21:
 123:Src/mode.c    ****             flag.next_dir = LEFT;
 233              		.loc 1 123 0
 234 0066 174B     		ldr	r3, .L33+4
 235 0068 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 236 006a 002B     		cmp	r3, #0
 237 006c E7D1     		bne	.L32
 124:Src/mode.c    ****         }else if( sensor.wall[5] ==false ){
 238              		.loc 1 124 0
 239 006e 144B     		ldr	r3, .L33
 240 0070 0122     		movs	r2, #1
 241 0072 1A73     		strb	r2, [r3, #12]
 242              	.L18:
 133:Src/mode.c    ****         Maze_GoalCheck(flag_goal_is);
 243              		.loc 1 133 0
 244 0074 124C     		ldr	r4, .L33
 245 0076 207B     		ldrb	r0, [r4, #12]	@ zero_extendqisi2
 246 0078 40B2     		sxtb	r0, r0
 247 007a FFF7FEFF 		bl	Update_Position
 248              	.LVL23:
 134:Src/mode.c    ****         HAL_Delay(200);
 249              		.loc 1 134 0
 250 007e 0020     		movs	r0, #0
 251 0080 FFF7FEFF 		bl	Maze_GoalCheck
 252              	.LVL24:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 8


 135:Src/mode.c    ****         switch( flag.next_dir ){
 253              		.loc 1 135 0
 254 0084 C820     		movs	r0, #200
 255 0086 FFF7FEFF 		bl	HAL_Delay
 256              	.LVL25:
 136:Src/mode.c    ****             case LEFT:
 257              		.loc 1 136 0
 258 008a 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 259 008c 5BB2     		sxtb	r3, r3
 260 008e 0133     		adds	r3, r3, #1
 261 0090 032B     		cmp	r3, #3
 262 0092 E8D8     		bhi	.L21
 263 0094 01A2     		adr	r2, .L23
 264 0096 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 265 009a 00BF     		.p2align 2
 266              	.L23:
 267 009c B3000000 		.word	.L22+1
 268 00a0 AD000000 		.word	.L24+1
 269 00a4 63000000 		.word	.L25+1
 270 00a8 B9000000 		.word	.L26+1
 271              		.p2align 1
 272              	.L24:
 139:Src/mode.c    ****                 break;
 140:Src/mode.c    **** 
 141:Src/mode.c    ****             case STRAIGHT:
 142:Src/mode.c    ****                 Motion_Straight();
 273              		.loc 1 142 0
 274 00ac FFF7FEFF 		bl	Motion_Straight
 275              	.LVL26:
 143:Src/mode.c    ****                 break;
 276              		.loc 1 143 0
 277 00b0 D9E7     		b	.L21
 278              	.L22:
 144:Src/mode.c    ****             
 145:Src/mode.c    ****             case RIGHT:
 146:Src/mode.c    ****                 Motion_Right();
 279              		.loc 1 146 0
 280 00b2 FFF7FEFF 		bl	Motion_Right
 281              	.LVL27:
 147:Src/mode.c    ****                 break;
 282              		.loc 1 147 0
 283 00b6 D6E7     		b	.L21
 284              	.L26:
 148:Src/mode.c    **** 
 149:Src/mode.c    ****             case UTURN:
 150:Src/mode.c    ****                 Motion_Uturn();
 285              		.loc 1 150 0
 286 00b8 FFF7FEFF 		bl	Motion_Uturn
 287              	.LVL28:
 151:Src/mode.c    ****                 break;
 288              		.loc 1 151 0
 289 00bc D3E7     		b	.L21
 290              	.L34:
 291 00be 00BF     		.align	2
 292              	.L33:
 293 00c0 00000000 		.word	flag
 294 00c4 00000000 		.word	sensor
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 9


 295 00c8 00000000 		.word	position
 296              		.cfi_endproc
 297              	.LFE128:
 299              		.section	.text.Mode_Adachi,"ax",%progbits
 300              		.align	1
 301              		.global	Mode_Adachi
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu fpv4-sp-d16
 307              	Mode_Adachi:
 308              	.LFB129:
 152:Src/mode.c    ****         }
 153:Src/mode.c    ****     }
 154:Src/mode.c    ****     Motion_Goal();
 155:Src/mode.c    **** }
 156:Src/mode.c    **** 
 157:Src/mode.c    **** void Mode_Adachi(void){
 309              		.loc 1 157 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 314              	.LCFI2:
 315              		.cfi_def_cfa_offset 24
 316              		.cfi_offset 3, -24
 317              		.cfi_offset 4, -20
 318              		.cfi_offset 5, -16
 319              		.cfi_offset 6, -12
 320              		.cfi_offset 7, -8
 321              		.cfi_offset 14, -4
 322              	.LVL29:
 158:Src/mode.c    ****     uint8_t flag_goal_is=false;
 159:Src/mode.c    ****     int8_t next_dir;
 160:Src/mode.c    **** 
 161:Src/mode.c    ****    
 162:Src/mode.c    ****     Init_maze();
 323              		.loc 1 162 0
 324 0002 FFF7FEFF 		bl	Init_maze
 325              	.LVL30:
 163:Src/mode.c    **** 
 164:Src/mode.c    ****     flag.ir_led = ON;
 326              		.loc 1 164 0
 327 0006 294B     		ldr	r3, .L51
 328 0008 0122     		movs	r2, #1
 329 000a 5A71     		strb	r2, [r3, #5]
 330              	.L36:
 165:Src/mode.c    ****     while(1){
 166:Src/mode.c    ****         if(sensor.wall[5]==true){
 331              		.loc 1 166 0
 332 000c 284B     		ldr	r3, .L51+4
 333 000e DE7F     		ldrb	r6, [r3, #31]	@ zero_extendqisi2
 334 0010 012E     		cmp	r6, #1
 335 0012 FBD1     		bne	.L36
 167:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
 336              		.loc 1 167 0
 337 0014 4C20     		movs	r0, #76
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 10


 338 0016 FFF7FEFF 		bl	Output_Buzzer
 339              	.LVL31:
 168:Src/mode.c    ****             break;
 169:Src/mode.c    ****         }
 170:Src/mode.c    ****     }
 171:Src/mode.c    ****     gyro_offset_calc_reset();
 340              		.loc 1 171 0
 341 001a FFF7FEFF 		bl	gyro_offset_calc_reset
 342              	.LVL32:
 172:Src/mode.c    ****     HAL_Delay(2000);
 343              		.loc 1 172 0
 344 001e 4FF4FA60 		mov	r0, #2000
 345 0022 FFF7FEFF 		bl	HAL_Delay
 346              	.LVL33:
 173:Src/mode.c    ****     Motion_Start();
 347              		.loc 1 173 0
 348 0026 FFF7FEFF 		bl	Motion_Start
 349              	.LVL34:
 174:Src/mode.c    ****     position.x=0;
 350              		.loc 1 174 0
 351 002a 224B     		ldr	r3, .L51+8
 352 002c 0027     		movs	r7, #0
 353 002e 1F70     		strb	r7, [r3]
 175:Src/mode.c    ****     position.y=1;
 354              		.loc 1 175 0
 355 0030 0122     		movs	r2, #1
 356 0032 5A70     		strb	r2, [r3, #1]
 176:Src/mode.c    ****     position.dir=NORTH;
 357              		.loc 1 176 0
 358 0034 9F70     		strb	r7, [r3, #2]
 177:Src/mode.c    ****     Maze_Set();
 359              		.loc 1 177 0
 360 0036 FFF7FEFF 		bl	Maze_Set
 361              	.LVL35:
 362              	.L37:
 178:Src/mode.c    ****     
 179:Src/mode.c    ****     while(flag_goal_is==false){
 363              		.loc 1 179 0
 364 003a 002F     		cmp	r7, #0
 365 003c 33D1     		bne	.L49
 180:Src/mode.c    ****         Maze_Get_Wall(position.x,position.y);
 366              		.loc 1 180 0
 367 003e 1D4D     		ldr	r5, .L51+8
 368 0040 95F90110 		ldrsb	r1, [r5, #1]
 369 0044 95F90000 		ldrsb	r0, [r5]
 370 0048 FFF7FEFF 		bl	Maze_Get_Wall
 371              	.LVL36:
 181:Src/mode.c    ****         MAZE_Create_Step();
 372              		.loc 1 181 0
 373 004c FFF7FEFF 		bl	MAZE_Create_Step
 374              	.LVL37:
 182:Src/mode.c    ****         HAL_Delay(200);
 375              		.loc 1 182 0
 376 0050 C820     		movs	r0, #200
 377 0052 FFF7FEFF 		bl	HAL_Delay
 378              	.LVL38:
 183:Src/mode.c    ****         next_dir=Maze_Next_Motion();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 11


 379              		.loc 1 183 0
 380 0056 FFF7FEFF 		bl	Maze_Next_Motion
 381              	.LVL39:
 382 005a 0446     		mov	r4, r0
 383              	.LVL40:
 184:Src/mode.c    ****         Update_Position(next_dir);
 384              		.loc 1 184 0
 385 005c FFF7FEFF 		bl	Update_Position
 386              	.LVL41:
 185:Src/mode.c    ****         if(position.x==mazeDef.maze_goal_x && position.y==mazeDef.maze_goal_y){
 387              		.loc 1 185 0
 388 0060 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 389 0062 154B     		ldr	r3, .L51+12
 390 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 391 0066 9A42     		cmp	r2, r3
 392 0068 07D0     		beq	.L50
 393              	.LVL42:
 394              	.L38:
 186:Src/mode.c    ****             flag_goal_is=true;
 187:Src/mode.c    ****         }
 188:Src/mode.c    **** 
 189:Src/mode.c    ****         switch( next_dir ){
 395              		.loc 1 189 0
 396 006a 601C     		adds	r0, r4, #1
 397 006c 0428     		cmp	r0, #4
 398 006e E4D8     		bhi	.L37
 399 0070 DFE800F0 		tbb	[pc, r0]
 400              	.L41:
 401 0074 10       		.byte	(.L40-.L41)/2
 402 0075 0D       		.byte	(.L42-.L41)/2
 403 0076 0A       		.byte	(.L43-.L41)/2
 404 0077 13       		.byte	(.L44-.L41)/2
 405 0078 16       		.byte	(.L45-.L41)/2
 406 0079 00       		.p2align 1
 407              	.L50:
 185:Src/mode.c    ****         if(position.x==mazeDef.maze_goal_x && position.y==mazeDef.maze_goal_y){
 408              		.loc 1 185 0 discriminator 1
 409 007a 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 410 007c 0E4B     		ldr	r3, .L51+12
 411 007e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 412 0080 9A42     		cmp	r2, r3
 413 0082 F2D1     		bne	.L38
 186:Src/mode.c    ****             flag_goal_is=true;
 414              		.loc 1 186 0
 415 0084 3746     		mov	r7, r6
 416              	.LVL43:
 417 0086 F0E7     		b	.L38
 418              	.LVL44:
 419              	.L43:
 190:Src/mode.c    ****             case LEFT:
 191:Src/mode.c    ****                 Motion_Left();
 420              		.loc 1 191 0
 421 0088 FFF7FEFF 		bl	Motion_Left
 422              	.LVL45:
 192:Src/mode.c    ****                 break;
 423              		.loc 1 192 0
 424 008c D5E7     		b	.L37
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 12


 425              	.L42:
 193:Src/mode.c    **** 
 194:Src/mode.c    ****             case STRAIGHT:
 195:Src/mode.c    ****                 Motion_Straight();
 426              		.loc 1 195 0
 427 008e FFF7FEFF 		bl	Motion_Straight
 428              	.LVL46:
 196:Src/mode.c    ****                 break;
 429              		.loc 1 196 0
 430 0092 D2E7     		b	.L37
 431              	.L40:
 197:Src/mode.c    ****             
 198:Src/mode.c    ****             case RIGHT:
 199:Src/mode.c    ****                 Motion_Right();
 432              		.loc 1 199 0
 433 0094 FFF7FEFF 		bl	Motion_Right
 434              	.LVL47:
 200:Src/mode.c    ****                 break;
 435              		.loc 1 200 0
 436 0098 CFE7     		b	.L37
 437              	.L44:
 201:Src/mode.c    **** 
 202:Src/mode.c    ****             case UTURN:
 203:Src/mode.c    ****                 Motion_Uturn();
 438              		.loc 1 203 0
 439 009a FFF7FEFF 		bl	Motion_Uturn
 440              	.LVL48:
 204:Src/mode.c    ****                 break;
 441              		.loc 1 204 0
 442 009e CCE7     		b	.L37
 443              	.L45:
 205:Src/mode.c    ****             case KABEATE:
 206:Src/mode.c    ****                 Motion_Kabeate();
 444              		.loc 1 206 0
 445 00a0 FFF7FEFF 		bl	Motion_Kabeate
 446              	.LVL49:
 207:Src/mode.c    ****                 break;
 447              		.loc 1 207 0
 448 00a4 C9E7     		b	.L37
 449              	.LVL50:
 450              	.L49:
 208:Src/mode.c    ****         }
 209:Src/mode.c    ****     }
 210:Src/mode.c    ****     Motion_Goal();
 451              		.loc 1 210 0
 452 00a6 FFF7FEFF 		bl	Motion_Goal
 453              	.LVL51:
 211:Src/mode.c    **** }
 454              		.loc 1 211 0
 455 00aa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 456              	.LVL52:
 457              	.L52:
 458              		.align	2
 459              	.L51:
 460 00ac 00000000 		.word	flag
 461 00b0 00000000 		.word	sensor
 462 00b4 00000000 		.word	position
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 13


 463 00b8 00000000 		.word	mazeDef
 464              		.cfi_endproc
 465              	.LFE129:
 467              		.section	.text.Mode_mouse,"ax",%progbits
 468              		.align	1
 469              		.global	Mode_mouse
 470              		.syntax unified
 471              		.thumb
 472              		.thumb_func
 473              		.fpu fpv4-sp-d16
 475              	Mode_mouse:
 476              	.LFB127:
  53:Src/mode.c    ****     switch(mode){
 477              		.loc 1 53 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              	.LVL53:
 482 0000 08B5     		push	{r3, lr}
 483              	.LCFI3:
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 3, -8
 486              		.cfi_offset 14, -4
  54:Src/mode.c    ****         case 0:
 487              		.loc 1 54 0
 488 0002 0628     		cmp	r0, #6
 489 0004 07D8     		bhi	.L53
 490 0006 DFE800F0 		tbb	[pc, r0]
 491              	.L56:
 492 000a 04       		.byte	(.L55-.L56)/2
 493 000b 07       		.byte	(.L57-.L56)/2
 494 000c 09       		.byte	(.L58-.L56)/2
 495 000d 14       		.byte	(.L59-.L56)/2
 496 000e 1F       		.byte	(.L60-.L56)/2
 497 000f 37       		.byte	(.L61-.L56)/2
 498 0010 42       		.byte	(.L62-.L56)/2
 499 0011 00       		.p2align 1
 500              	.L55:
  56:Src/mode.c    **** 
 501              		.loc 1 56 0
 502 0012 FFF7FEFF 		bl	Mode_Adachi
 503              	.LVL54:
 504              	.L53:
  99:Src/mode.c    **** 
 505              		.loc 1 99 0
 506 0016 08BD     		pop	{r3, pc}
 507              	.LVL55:
 508              	.L57:
  60:Src/mode.c    ****             break;
 509              		.loc 1 60 0
 510 0018 FFF7FEFF 		bl	LeftHand
 511              	.LVL56:
 512              	.L58:
  63:Src/mode.c    ****             gyro_offset_calc_reset();
 513              		.loc 1 63 0
 514 001c FFF7FEFF 		bl	PT_Switch
 515              	.LVL57:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 14


  64:Src/mode.c    ****             HAL_Delay(2000);
 516              		.loc 1 64 0
 517 0020 FFF7FEFF 		bl	gyro_offset_calc_reset
 518              	.LVL58:
  65:Src/mode.c    ****             Motion_Left();
 519              		.loc 1 65 0
 520 0024 4FF4FA60 		mov	r0, #2000
 521 0028 FFF7FEFF 		bl	HAL_Delay
 522              	.LVL59:
  66:Src/mode.c    ****             break;
 523              		.loc 1 66 0
 524 002c FFF7FEFF 		bl	Motion_Left
 525              	.LVL60:
  67:Src/mode.c    ****         case 3:
 526              		.loc 1 67 0
 527 0030 F1E7     		b	.L53
 528              	.LVL61:
 529              	.L59:
  69:Src/mode.c    ****             gyro_offset_calc_reset();
 530              		.loc 1 69 0
 531 0032 FFF7FEFF 		bl	PT_Switch
 532              	.LVL62:
  70:Src/mode.c    ****             HAL_Delay(2000);
 533              		.loc 1 70 0
 534 0036 FFF7FEFF 		bl	gyro_offset_calc_reset
 535              	.LVL63:
  71:Src/mode.c    ****             Motion_Right();
 536              		.loc 1 71 0
 537 003a 4FF4FA60 		mov	r0, #2000
 538 003e FFF7FEFF 		bl	HAL_Delay
 539              	.LVL64:
  72:Src/mode.c    ****             break;
 540              		.loc 1 72 0
 541 0042 FFF7FEFF 		bl	Motion_Right
 542              	.LVL65:
  73:Src/mode.c    ****         case 4:
 543              		.loc 1 73 0
 544 0046 E6E7     		b	.L53
 545              	.LVL66:
 546              	.L60:
  75:Src/mode.c    ****             gyro_offset_calc_reset();
 547              		.loc 1 75 0
 548 0048 FFF7FEFF 		bl	PT_Switch
 549              	.LVL67:
  76:Src/mode.c    ****             HAL_Delay(4000);
 550              		.loc 1 76 0
 551 004c FFF7FEFF 		bl	gyro_offset_calc_reset
 552              	.LVL68:
  77:Src/mode.c    ****             flag.ir_led = ON;
 553              		.loc 1 77 0
 554 0050 4FF47A60 		mov	r0, #4000
 555 0054 FFF7FEFF 		bl	HAL_Delay
 556              	.LVL69:
  78:Src/mode.c    ****             if(sensor.wall[5]==false){
 557              		.loc 1 78 0
 558 0058 0E4B     		ldr	r3, .L66
 559 005a 0122     		movs	r2, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 15


 560 005c 5A71     		strb	r2, [r3, #5]
  79:Src/mode.c    ****                 flag.kabeate=false;
 561              		.loc 1 79 0
 562 005e 0E4B     		ldr	r3, .L66+4
 563 0060 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 564 0062 2BB9     		cbnz	r3, .L63
  80:Src/mode.c    ****             }else{
 565              		.loc 1 80 0
 566 0064 0B4B     		ldr	r3, .L66
 567 0066 0022     		movs	r2, #0
 568 0068 5A73     		strb	r2, [r3, #13]
 569              	.L64:
  84:Src/mode.c    ****             break;
 570              		.loc 1 84 0
 571 006a FFF7FEFF 		bl	Motion_Uturn
 572              	.LVL70:
  85:Src/mode.c    ****         case 5:
 573              		.loc 1 85 0
 574 006e D2E7     		b	.L53
 575              	.L63:
  82:Src/mode.c    ****             }
 576              		.loc 1 82 0
 577 0070 084B     		ldr	r3, .L66
 578 0072 0122     		movs	r2, #1
 579 0074 5A73     		strb	r2, [r3, #13]
 580 0076 F8E7     		b	.L64
 581              	.LVL71:
 582              	.L61:
  87:Src/mode.c    ****             gyro_offset_calc_reset();
 583              		.loc 1 87 0
 584 0078 FFF7FEFF 		bl	PT_Switch
 585              	.LVL72:
  88:Src/mode.c    ****             HAL_Delay(2000);
 586              		.loc 1 88 0
 587 007c FFF7FEFF 		bl	gyro_offset_calc_reset
 588              	.LVL73:
  89:Src/mode.c    ****             Motion_Kabeate();
 589              		.loc 1 89 0
 590 0080 4FF4FA60 		mov	r0, #2000
 591 0084 FFF7FEFF 		bl	HAL_Delay
 592              	.LVL74:
  90:Src/mode.c    ****             break;
 593              		.loc 1 90 0
 594 0088 FFF7FEFF 		bl	Motion_Kabeate
 595              	.LVL75:
  91:Src/mode.c    ****         case 6:
 596              		.loc 1 91 0
 597 008c C3E7     		b	.L53
 598              	.LVL76:
 599              	.L62:
  94:Src/mode.c    ****             break;
 600              		.loc 1 94 0
 601 008e FFF7FEFF 		bl	Sensor_Mode
 602              	.LVL77:
  99:Src/mode.c    **** 
 603              		.loc 1 99 0
 604 0092 C0E7     		b	.L53
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 16


 605              	.L67:
 606              		.align	2
 607              	.L66:
 608 0094 00000000 		.word	flag
 609 0098 00000000 		.word	sensor
 610              		.cfi_endproc
 611              	.LFE127:
 613              		.section	.text.Mode_Circuit,"ax",%progbits
 614              		.align	1
 615              		.global	Mode_Circuit
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 619              		.fpu fpv4-sp-d16
 621              	Mode_Circuit:
 622              	.LFB130:
 212:Src/mode.c    **** 
 213:Src/mode.c    **** void Mode_Circuit(void){
 623              		.loc 1 213 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627 0000 10B5     		push	{r4, lr}
 628              	.LCFI4:
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 4, -8
 631              		.cfi_offset 14, -4
 214:Src/mode.c    ****     flag.ir_led = ON;
 632              		.loc 1 214 0
 633 0002 0C4B     		ldr	r3, .L71
 634 0004 0122     		movs	r2, #1
 635 0006 5A71     		strb	r2, [r3, #5]
 636              	.L69:
 215:Src/mode.c    ****     while(1){
 216:Src/mode.c    ****         if(sensor.wall[5]==true){
 637              		.loc 1 216 0
 638 0008 0B4B     		ldr	r3, .L71+4
 639 000a DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 640 000c 012B     		cmp	r3, #1
 641 000e FBD1     		bne	.L69
 217:Src/mode.c    ****             Output_Buzzer(HZ_C_H);
 642              		.loc 1 217 0
 643 0010 4C20     		movs	r0, #76
 644 0012 FFF7FEFF 		bl	Output_Buzzer
 645              	.LVL78:
 218:Src/mode.c    ****             break;
 219:Src/mode.c    ****         }
 220:Src/mode.c    ****     }
 221:Src/mode.c    ****     flag.ir_led=OFF;
 646              		.loc 1 221 0
 647 0016 074C     		ldr	r4, .L71
 648 0018 0023     		movs	r3, #0
 649 001a 6371     		strb	r3, [r4, #5]
 222:Src/mode.c    ****     gyro_offset_calc_reset();
 650              		.loc 1 222 0
 651 001c FFF7FEFF 		bl	gyro_offset_calc_reset
 652              	.LVL79:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 17


 223:Src/mode.c    ****     HAL_Delay(2000);
 653              		.loc 1 223 0
 654 0020 4FF4FA60 		mov	r0, #2000
 655 0024 FFF7FEFF 		bl	HAL_Delay
 656              	.LVL80:
 224:Src/mode.c    ****     flag.ir_led=ON;
 657              		.loc 1 224 0
 658 0028 0123     		movs	r3, #1
 659 002a 6371     		strb	r3, [r4, #5]
 225:Src/mode.c    ****     Motion_Straight_Check();
 660              		.loc 1 225 0
 661 002c FFF7FEFF 		bl	Motion_Straight_Check
 662              	.LVL81:
 226:Src/mode.c    ****     //Motion_Start();    
 227:Src/mode.c    **** }...
 663              		.loc 1 227 0
 664 0030 10BD     		pop	{r4, pc}
 665              	.L72:
 666 0032 00BF     		.align	2
 667              	.L71:
 668 0034 00000000 		.word	flag
 669 0038 00000000 		.word	sensor
 670              		.cfi_endproc
 671              	.LFE130:
 673              		.comm	maze,1793,4
 674              		.comm	straight_dir,1,1
 675              		.comm	wall_pid,2,2
 676              		.comm	yawrate_pid,2,2
 677              		.comm	straight_pid_r,2,2
 678              		.comm	straight_pid_l,2,2
 679              		.comm	w_befor,4,4
 680              		.comm	w_sum,4,4
 681              		.comm	y_sumsum,4,4
 682              		.comm	y_sum,4,4
 683              		.comm	s_sum_r,4,4
 684              		.comm	s_sum_l,4,4
 685              		.section	.rodata.Mode_select.str1.4,"aMS",%progbits,1
 686              		.align	2
 687              	.LC0:
 688 0000 25640D00 		.ascii	"%d\015\000"
 689              		.text
 690              	.Letext0:
 691              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 692              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 693              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 694              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 695              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 696              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 697              		.file 8 "Inc/global.h"
 698              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 699              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 700              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 701              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 702              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 703              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 704              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 705              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 18


 706              		.file 17 "Inc/tim.h"
 707              		.file 18 "Inc/control.h"
 708              		.file 19 "Inc/spi.h"
 709              		.file 20 "Inc/adc.h"
 710              		.file 21 "Inc/maze.h"
 711              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 712              		.file 23 "Inc/motion.h"
 713              		.file 24 "Inc/gpio.h"
 714              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 mode.c
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:18     .text.Mode_select:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:25     .text.Mode_select:00000000 Mode_select
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:132    .text.Mode_select:00000088 $d
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:138    .text.LeftHand:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:145    .text.LeftHand:00000000 LeftHand
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:267    .text.LeftHand:0000009c $d
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:271    .text.LeftHand:000000ac $t
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:293    .text.LeftHand:000000c0 $d
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:300    .text.Mode_Adachi:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:307    .text.Mode_Adachi:00000000 Mode_Adachi
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:401    .text.Mode_Adachi:00000074 $d
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:460    .text.Mode_Adachi:000000ac $d
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:468    .text.Mode_mouse:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:475    .text.Mode_mouse:00000000 Mode_mouse
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:492    .text.Mode_mouse:0000000a $d
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:608    .text.Mode_mouse:00000094 $d
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:614    .text.Mode_Circuit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:621    .text.Mode_Circuit:00000000 Mode_Circuit
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:668    .text.Mode_Circuit:00000034 $d
                            *COM*:00000701 maze
                            *COM*:00000001 straight_dir
                            *COM*:00000002 wall_pid
                            *COM*:00000002 yawrate_pid
                            *COM*:00000002 straight_pid_r
                            *COM*:00000002 straight_pid_l
                            *COM*:00000004 w_befor
                            *COM*:00000004 w_sum
                            *COM*:00000004 y_sumsum
                            *COM*:00000004 y_sum
                            *COM*:00000004 s_sum_r
                            *COM*:00000004 s_sum_l
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:686    .rodata.Mode_select.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:406    .text.Mode_Adachi:00000079 $d
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:406    .text.Mode_Adachi:0000007a $t
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:499    .text.Mode_mouse:00000011 $d
C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s:499    .text.Mode_mouse:00000012 $t

UNDEFINED SYMBOLS
Output_Buzzer
Push
LED_Control
printf
HAL_Delay
enc
Maze_Set
gyro_offset_calc_reset
Motion_Start
Motion_Left
Update_Position
Maze_GoalCheck
Motion_Straight
Motion_Right
Motion_Uturn
flag
sensor
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cca89RzB.s 			page 20


position
Init_maze
Maze_Get_Wall
MAZE_Create_Step
Maze_Next_Motion
Motion_Kabeate
Motion_Goal
mazeDef
PT_Switch
Sensor_Mode
Motion_Straight_Check
