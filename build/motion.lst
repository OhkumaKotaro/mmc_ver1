ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"motion.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Normal_Turn_Half,"ax",%progbits
  18              		.align	1
  19              		.global	Normal_Turn_Half
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Normal_Turn_Half:
  26              	.LFB126:
  27              		.file 1 "Src/motion.c"
   1:Src/motion.c  **** #include "motion.h"
   2:Src/motion.c  **** #include "tim.h"
   3:Src/motion.c  **** #include "global.h"
   4:Src/motion.c  **** #include "control.h"
   5:Src/motion.c  **** #include "gpio.h"
   6:Src/motion.c  **** #include "spi.h"
   7:Src/motion.c  **** #include "maze.h"
   8:Src/motion.c  **** 
   9:Src/motion.c  **** 
  10:Src/motion.c  **** void Normal_Turn_Half(void){
  28              		.loc 1 10 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  11:Src/motion.c  ****     flag.ir_led = ON;
  39              		.loc 1 11 0
  40 0002 164B     		ldr	r3, .L6
  41 0004 0122     		movs	r2, #1
  42 0006 5A71     		strb	r2, [r3, #5]
  43              	.L2:
  12:Src/motion.c  ****     while(1){
  13:Src/motion.c  ****         if(sensor.wall[0]==true && sensor.wall[3]==true){
  44              		.loc 1 13 0
  45 0008 154B     		ldr	r3, .L6+4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 2


  46 000a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  47 000c 012B     		cmp	r3, #1
  48 000e FBD1     		bne	.L2
  49              		.loc 1 13 0 is_stmt 0 discriminator 1
  50 0010 134B     		ldr	r3, .L6+4
  51 0012 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
  52 0014 012B     		cmp	r3, #1
  53 0016 F7D1     		bne	.L2
  14:Src/motion.c  ****             Output_Buzzer(HZ_C_H);
  54              		.loc 1 14 0 is_stmt 1
  55 0018 4C20     		movs	r0, #76
  56 001a FFF7FEFF 		bl	Output_Buzzer
  57              	.LVL0:
  15:Src/motion.c  ****             break;
  16:Src/motion.c  ****         }
  17:Src/motion.c  ****     }
  18:Src/motion.c  ****     flag.ir_led = OFF;
  58              		.loc 1 18 0
  59 001e 0F4D     		ldr	r5, .L6
  60 0020 0024     		movs	r4, #0
  61 0022 6C71     		strb	r4, [r5, #5]
  19:Src/motion.c  ****     gyro_offset_calc_reset();
  62              		.loc 1 19 0
  63 0024 FFF7FEFF 		bl	gyro_offset_calc_reset
  64              	.LVL1:
  20:Src/motion.c  ****     Yawrate_Calc_fb(180,0,0);
  65              		.loc 1 20 0
  66 0028 2246     		mov	r2, r4
  67 002a 2146     		mov	r1, r4
  68 002c B420     		movs	r0, #180
  69 002e FFF7FEFF 		bl	Yawrate_Calc_fb
  70              	.LVL2:
  21:Src/motion.c  ****     HAL_Delay(1500);
  71              		.loc 1 21 0
  72 0032 40F2DC50 		movw	r0, #1500
  73 0036 FFF7FEFF 		bl	HAL_Delay
  74              	.LVL3:
  22:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
  75              		.loc 1 22 0
  76 003a 4C20     		movs	r0, #76
  77 003c FFF7FEFF 		bl	Output_Buzzer
  78              	.LVL4:
  23:Src/motion.c  ****     flag.yawrate = ON;
  79              		.loc 1 23 0
  80 0040 0123     		movs	r3, #1
  81 0042 AB70     		strb	r3, [r5, #2]
  82              	.L4:
  24:Src/motion.c  ****     while(1){
  25:Src/motion.c  ****         if(Push()==ON){
  83              		.loc 1 25 0
  84 0044 FFF7FEFF 		bl	Push
  85              	.LVL5:
  86 0048 0128     		cmp	r0, #1
  87 004a FBD1     		bne	.L4
  26:Src/motion.c  ****             flag.yawrate = OFF;
  88              		.loc 1 26 0
  89 004c 034B     		ldr	r3, .L6
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 3


  90 004e 0022     		movs	r2, #0
  91 0050 9A70     		strb	r2, [r3, #2]
  27:Src/motion.c  ****             Output_Buzzer(HZ_A);
  92              		.loc 1 27 0
  93 0052 5B20     		movs	r0, #91
  94 0054 FFF7FEFF 		bl	Output_Buzzer
  95              	.LVL6:
  28:Src/motion.c  ****             break;
  29:Src/motion.c  ****         }
  30:Src/motion.c  ****     }
  31:Src/motion.c  **** }
  96              		.loc 1 31 0
  97 0058 38BD     		pop	{r3, r4, r5, pc}
  98              	.L7:
  99 005a 00BF     		.align	2
 100              	.L6:
 101 005c 00000000 		.word	flag
 102 0060 00000000 		.word	sensor
 103              		.cfi_endproc
 104              	.LFE126:
 106              		.section	.text.Turn_Half,"ax",%progbits
 107              		.align	1
 108              		.global	Turn_Half
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu fpv4-sp-d16
 114              	Turn_Half:
 115              	.LFB127:
  32:Src/motion.c  **** 
  33:Src/motion.c  **** 
  34:Src/motion.c  **** void Turn_Half(void){
 116              		.loc 1 34 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120 0000 38B5     		push	{r3, r4, r5, lr}
 121              	.LCFI1:
 122              		.cfi_def_cfa_offset 16
 123              		.cfi_offset 3, -16
 124              		.cfi_offset 4, -12
 125              		.cfi_offset 5, -8
 126              		.cfi_offset 14, -4
  35:Src/motion.c  ****     flag.dir = LEFT;
 127              		.loc 1 35 0
 128 0002 074C     		ldr	r4, .L10
 129 0004 0125     		movs	r5, #1
 130 0006 2581     		strh	r5, [r4, #8]	@ movhi
  36:Src/motion.c  ****     flag.ir_led = OFF;
 131              		.loc 1 36 0
 132 0008 0021     		movs	r1, #0
 133 000a 6171     		strb	r1, [r4, #5]
  37:Src/motion.c  ****     Yawrate_Calc_fb(180,0,0);
 134              		.loc 1 37 0
 135 000c 0A46     		mov	r2, r1
 136 000e B420     		movs	r0, #180
 137 0010 FFF7FEFF 		bl	Yawrate_Calc_fb
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 4


 138              	.LVL7:
  38:Src/motion.c  ****     Straight_Calc_Zero();
 139              		.loc 1 38 0
 140 0014 FFF7FEFF 		bl	Straight_Calc_Zero
 141              	.LVL8:
  39:Src/motion.c  ****     flag.yawrate = ON;
 142              		.loc 1 39 0
 143 0018 A570     		strb	r5, [r4, #2]
  40:Src/motion.c  ****     flag.straight = ON;
 144              		.loc 1 40 0
 145 001a 6570     		strb	r5, [r4, #1]
  41:Src/motion.c  **** }
 146              		.loc 1 41 0
 147 001c 38BD     		pop	{r3, r4, r5, pc}
 148              	.L11:
 149 001e 00BF     		.align	2
 150              	.L10:
 151 0020 00000000 		.word	flag
 152              		.cfi_endproc
 153              	.LFE127:
 155              		.section	.text.Turn_Quarter_Left,"ax",%progbits
 156              		.align	1
 157              		.global	Turn_Quarter_Left
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	Turn_Quarter_Left:
 164              	.LFB128:
  42:Src/motion.c  **** 
  43:Src/motion.c  **** void Turn_Quarter_Left(void){
 165              		.loc 1 43 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 38B5     		push	{r3, r4, r5, lr}
 170              	.LCFI2:
 171              		.cfi_def_cfa_offset 16
 172              		.cfi_offset 3, -16
 173              		.cfi_offset 4, -12
 174              		.cfi_offset 5, -8
 175              		.cfi_offset 14, -4
  44:Src/motion.c  ****     flag.ir_led = OFF;
 176              		.loc 1 44 0
 177 0002 074C     		ldr	r4, .L14
 178 0004 0021     		movs	r1, #0
 179 0006 6171     		strb	r1, [r4, #5]
  45:Src/motion.c  ****     flag.dir = LEFT;
 180              		.loc 1 45 0
 181 0008 0125     		movs	r5, #1
 182 000a 2581     		strh	r5, [r4, #8]	@ movhi
  46:Src/motion.c  ****     Yawrate_Calc_fb(90,0,0);
 183              		.loc 1 46 0
 184 000c 0A46     		mov	r2, r1
 185 000e 5A20     		movs	r0, #90
 186 0010 FFF7FEFF 		bl	Yawrate_Calc_fb
 187              	.LVL9:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 5


  47:Src/motion.c  ****     Straight_Calc_Zero();
 188              		.loc 1 47 0
 189 0014 FFF7FEFF 		bl	Straight_Calc_Zero
 190              	.LVL10:
  48:Src/motion.c  ****     flag.yawrate = ON;
 191              		.loc 1 48 0
 192 0018 A570     		strb	r5, [r4, #2]
  49:Src/motion.c  ****     flag.straight = ON;
 193              		.loc 1 49 0
 194 001a 6570     		strb	r5, [r4, #1]
  50:Src/motion.c  **** }
 195              		.loc 1 50 0
 196 001c 38BD     		pop	{r3, r4, r5, pc}
 197              	.L15:
 198 001e 00BF     		.align	2
 199              	.L14:
 200 0020 00000000 		.word	flag
 201              		.cfi_endproc
 202              	.LFE128:
 204              		.section	.text.Turn_Quarter_Right,"ax",%progbits
 205              		.align	1
 206              		.global	Turn_Quarter_Right
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 210              		.fpu fpv4-sp-d16
 212              	Turn_Quarter_Right:
 213              	.LFB129:
  51:Src/motion.c  **** 
  52:Src/motion.c  **** void Turn_Quarter_Right(void){
 214              		.loc 1 52 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218 0000 10B5     		push	{r4, lr}
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 4, -8
 222              		.cfi_offset 14, -4
  53:Src/motion.c  ****     flag.ir_led = OFF;
 223              		.loc 1 53 0
 224 0002 084C     		ldr	r4, .L18
 225 0004 0021     		movs	r1, #0
 226 0006 6171     		strb	r1, [r4, #5]
  54:Src/motion.c  ****     flag.dir = RIGHT;
 227              		.loc 1 54 0
 228 0008 4FF6FF73 		movw	r3, #65535
 229 000c 2381     		strh	r3, [r4, #8]	@ movhi
  55:Src/motion.c  ****     Yawrate_Calc_fb(90,0,0);
 230              		.loc 1 55 0
 231 000e 0A46     		mov	r2, r1
 232 0010 5A20     		movs	r0, #90
 233 0012 FFF7FEFF 		bl	Yawrate_Calc_fb
 234              	.LVL11:
  56:Src/motion.c  ****     Straight_Calc_Zero();
 235              		.loc 1 56 0
 236 0016 FFF7FEFF 		bl	Straight_Calc_Zero
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 6


 237              	.LVL12:
  57:Src/motion.c  ****     flag.yawrate = ON;
 238              		.loc 1 57 0
 239 001a 0123     		movs	r3, #1
 240 001c A370     		strb	r3, [r4, #2]
  58:Src/motion.c  ****     flag.straight = ON;
 241              		.loc 1 58 0
 242 001e 6370     		strb	r3, [r4, #1]
  59:Src/motion.c  **** }
 243              		.loc 1 59 0
 244 0020 10BD     		pop	{r4, pc}
 245              	.L19:
 246 0022 00BF     		.align	2
 247              	.L18:
 248 0024 00000000 		.word	flag
 249              		.cfi_endproc
 250              	.LFE129:
 252              		.section	.text.Normal_Ennkai,"ax",%progbits
 253              		.align	1
 254              		.global	Normal_Ennkai
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	Normal_Ennkai:
 261              	.LFB130:
  60:Src/motion.c  **** /****************************************************************************************
  61:Src/motion.c  ****  * outline  : "ennkaigei"
  62:Src/motion.c  ****  * argument : void
  63:Src/motion.c  ****  * return   : void
  64:Src/motion.c  **** ********************************************************************************************/
  65:Src/motion.c  **** void Normal_Ennkai(void){
 262              		.loc 1 65 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 10B5     		push	{r4, lr}
 267              	.LCFI4:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
  66:Src/motion.c  ****     flag.ir_led = ON;
 271              		.loc 1 66 0
 272 0002 164B     		ldr	r3, .L25
 273 0004 0122     		movs	r2, #1
 274 0006 5A71     		strb	r2, [r3, #5]
 275              	.L21:
  67:Src/motion.c  ****     while(1){
  68:Src/motion.c  ****         if(sensor.wall[0]==true && sensor.wall[3]==true){
 276              		.loc 1 68 0
 277 0008 154B     		ldr	r3, .L25+4
 278 000a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 279 000c 012B     		cmp	r3, #1
 280 000e FBD1     		bne	.L21
 281              		.loc 1 68 0 is_stmt 0 discriminator 1
 282 0010 134B     		ldr	r3, .L25+4
 283 0012 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 7


 284 0014 012B     		cmp	r3, #1
 285 0016 F7D1     		bne	.L21
  69:Src/motion.c  ****             Output_Buzzer(HZ_C_H);
 286              		.loc 1 69 0 is_stmt 1
 287 0018 4C20     		movs	r0, #76
 288 001a FFF7FEFF 		bl	Output_Buzzer
 289              	.LVL13:
  70:Src/motion.c  ****             break;
  71:Src/motion.c  ****         }
  72:Src/motion.c  ****     }
  73:Src/motion.c  ****     flag.ir_led = OFF;
 290              		.loc 1 73 0
 291 001e 0F4C     		ldr	r4, .L25
 292 0020 0023     		movs	r3, #0
 293 0022 6371     		strb	r3, [r4, #5]
  74:Src/motion.c  ****     HAL_Delay(500);
 294              		.loc 1 74 0
 295 0024 4FF4FA70 		mov	r0, #500
 296 0028 FFF7FEFF 		bl	HAL_Delay
 297              	.LVL14:
  75:Src/motion.c  ****     gyro_offset_calc_reset();
 298              		.loc 1 75 0
 299 002c FFF7FEFF 		bl	gyro_offset_calc_reset
 300              	.LVL15:
  76:Src/motion.c  ****     Yawrate_Calc_Zero();
 301              		.loc 1 76 0
 302 0030 FFF7FEFF 		bl	Yawrate_Calc_Zero
 303              	.LVL16:
  77:Src/motion.c  ****     HAL_Delay(1500);
 304              		.loc 1 77 0
 305 0034 40F2DC50 		movw	r0, #1500
 306 0038 FFF7FEFF 		bl	HAL_Delay
 307              	.LVL17:
  78:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 308              		.loc 1 78 0
 309 003c 4C20     		movs	r0, #76
 310 003e FFF7FEFF 		bl	Output_Buzzer
 311              	.LVL18:
  79:Src/motion.c  ****     flag.yawrate = ON;
 312              		.loc 1 79 0
 313 0042 0123     		movs	r3, #1
 314 0044 A370     		strb	r3, [r4, #2]
 315              	.L23:
  80:Src/motion.c  ****     while(1){
  81:Src/motion.c  ****         if(Push()==ON){
 316              		.loc 1 81 0
 317 0046 FFF7FEFF 		bl	Push
 318              	.LVL19:
 319 004a 0128     		cmp	r0, #1
 320 004c FBD1     		bne	.L23
  82:Src/motion.c  ****             flag.yawrate = OFF;
 321              		.loc 1 82 0
 322 004e 034B     		ldr	r3, .L25
 323 0050 0022     		movs	r2, #0
 324 0052 9A70     		strb	r2, [r3, #2]
  83:Src/motion.c  ****             Output_Buzzer(HZ_A);
 325              		.loc 1 83 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 8


 326 0054 5B20     		movs	r0, #91
 327 0056 FFF7FEFF 		bl	Output_Buzzer
 328              	.LVL20:
  84:Src/motion.c  ****             break;
  85:Src/motion.c  ****         }
  86:Src/motion.c  ****     }
  87:Src/motion.c  **** }
 329              		.loc 1 87 0
 330 005a 10BD     		pop	{r4, pc}
 331              	.L26:
 332              		.align	2
 333              	.L25:
 334 005c 00000000 		.word	flag
 335 0060 00000000 		.word	sensor
 336              		.cfi_endproc
 337              	.LFE130:
 339              		.section	.text.Ennkai,"ax",%progbits
 340              		.align	1
 341              		.global	Ennkai
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv4-sp-d16
 347              	Ennkai:
 348              	.LFB131:
  88:Src/motion.c  **** 
  89:Src/motion.c  **** void Ennkai(void){
 349              		.loc 1 89 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353 0000 10B5     		push	{r4, lr}
 354              	.LCFI5:
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 4, -8
 357              		.cfi_offset 14, -4
  90:Src/motion.c  ****     flag.ir_led = ON;
 358              		.loc 1 90 0
 359 0002 184B     		ldr	r3, .L32
 360 0004 0122     		movs	r2, #1
 361 0006 5A71     		strb	r2, [r3, #5]
 362              	.L28:
  91:Src/motion.c  ****     while(1){
  92:Src/motion.c  ****         if(sensor.wall[0]==true && sensor.wall[3]==true){
 363              		.loc 1 92 0
 364 0008 174B     		ldr	r3, .L32+4
 365 000a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 366 000c 012B     		cmp	r3, #1
 367 000e FBD1     		bne	.L28
 368              		.loc 1 92 0 is_stmt 0 discriminator 1
 369 0010 154B     		ldr	r3, .L32+4
 370 0012 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 371 0014 012B     		cmp	r3, #1
 372 0016 F7D1     		bne	.L28
  93:Src/motion.c  ****             Output_Buzzer(HZ_C_H);
 373              		.loc 1 93 0 is_stmt 1
 374 0018 4C20     		movs	r0, #76
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 9


 375 001a FFF7FEFF 		bl	Output_Buzzer
 376              	.LVL21:
  94:Src/motion.c  ****             break;
  95:Src/motion.c  ****         }
  96:Src/motion.c  ****     }
  97:Src/motion.c  ****     flag.ir_led = OFF;
 377              		.loc 1 97 0
 378 001e 114C     		ldr	r4, .L32
 379 0020 0023     		movs	r3, #0
 380 0022 6371     		strb	r3, [r4, #5]
  98:Src/motion.c  ****     HAL_Delay(500);
 381              		.loc 1 98 0
 382 0024 4FF4FA70 		mov	r0, #500
 383 0028 FFF7FEFF 		bl	HAL_Delay
 384              	.LVL22:
  99:Src/motion.c  ****     gyro_offset_calc_reset();
 385              		.loc 1 99 0
 386 002c FFF7FEFF 		bl	gyro_offset_calc_reset
 387              	.LVL23:
 100:Src/motion.c  ****     Yawrate_Calc_Zero();
 388              		.loc 1 100 0
 389 0030 FFF7FEFF 		bl	Yawrate_Calc_Zero
 390              	.LVL24:
 101:Src/motion.c  ****     Straight_Calc_Zero();
 391              		.loc 1 101 0
 392 0034 FFF7FEFF 		bl	Straight_Calc_Zero
 393              	.LVL25:
 102:Src/motion.c  ****     HAL_Delay(1500);
 394              		.loc 1 102 0
 395 0038 40F2DC50 		movw	r0, #1500
 396 003c FFF7FEFF 		bl	HAL_Delay
 397              	.LVL26:
 103:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 398              		.loc 1 103 0
 399 0040 4C20     		movs	r0, #76
 400 0042 FFF7FEFF 		bl	Output_Buzzer
 401              	.LVL27:
 104:Src/motion.c  ****     flag.yawrate = ON;
 402              		.loc 1 104 0
 403 0046 0123     		movs	r3, #1
 404 0048 A370     		strb	r3, [r4, #2]
 105:Src/motion.c  ****     flag.straight = ON;
 405              		.loc 1 105 0
 406 004a 6370     		strb	r3, [r4, #1]
 407              	.L30:
 106:Src/motion.c  ****     while(1){
 107:Src/motion.c  ****         if(Push()==ON){
 408              		.loc 1 107 0
 409 004c FFF7FEFF 		bl	Push
 410              	.LVL28:
 411 0050 0128     		cmp	r0, #1
 412 0052 FBD1     		bne	.L30
 108:Src/motion.c  ****             flag.yawrate = OFF;
 413              		.loc 1 108 0
 414 0054 034B     		ldr	r3, .L32
 415 0056 0022     		movs	r2, #0
 416 0058 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 10


 109:Src/motion.c  ****             flag.straight = OFF;
 417              		.loc 1 109 0
 418 005a 5A70     		strb	r2, [r3, #1]
 110:Src/motion.c  ****             Output_Buzzer(HZ_A);
 419              		.loc 1 110 0
 420 005c 5B20     		movs	r0, #91
 421 005e FFF7FEFF 		bl	Output_Buzzer
 422              	.LVL29:
 111:Src/motion.c  ****             break;
 112:Src/motion.c  ****         }
 113:Src/motion.c  ****     }
 114:Src/motion.c  **** }
 423              		.loc 1 114 0
 424 0062 10BD     		pop	{r4, pc}
 425              	.L33:
 426              		.align	2
 427              	.L32:
 428 0064 00000000 		.word	flag
 429 0068 00000000 		.word	sensor
 430              		.cfi_endproc
 431              	.LFE131:
 433              		.section	.text.Normal_Straight,"ax",%progbits
 434              		.align	1
 435              		.global	Normal_Straight
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv4-sp-d16
 441              	Normal_Straight:
 442              	.LFB132:
 115:Src/motion.c  **** 
 116:Src/motion.c  **** 
 117:Src/motion.c  **** /****************************************************************************************
 118:Src/motion.c  ****  * outline  : straight run one block by feadbuck control
 119:Src/motion.c  ****  * argument : void
 120:Src/motion.c  ****  * return   : void
 121:Src/motion.c  **** ********************************************************************************************/
 122:Src/motion.c  **** void Normal_Straight(void){
 443              		.loc 1 122 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447 0000 38B5     		push	{r3, r4, r5, lr}
 448              	.LCFI6:
 449              		.cfi_def_cfa_offset 16
 450              		.cfi_offset 3, -16
 451              		.cfi_offset 4, -12
 452              		.cfi_offset 5, -8
 453              		.cfi_offset 14, -4
 123:Src/motion.c  ****     flag.ir_led = ON;
 454              		.loc 1 123 0
 455 0002 174B     		ldr	r3, .L39
 456 0004 0122     		movs	r2, #1
 457 0006 5A71     		strb	r2, [r3, #5]
 458              	.L35:
 124:Src/motion.c  ****     while(1){
 125:Src/motion.c  ****         if(sensor.wall[0]==true && sensor.wall[3]==true){
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 11


 459              		.loc 1 125 0
 460 0008 164B     		ldr	r3, .L39+4
 461 000a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 462 000c 012B     		cmp	r3, #1
 463 000e FBD1     		bne	.L35
 464              		.loc 1 125 0 is_stmt 0 discriminator 1
 465 0010 144B     		ldr	r3, .L39+4
 466 0012 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 467 0014 012B     		cmp	r3, #1
 468 0016 F7D1     		bne	.L35
 126:Src/motion.c  ****             Output_Buzzer(HZ_C_H);
 469              		.loc 1 126 0 is_stmt 1
 470 0018 4C20     		movs	r0, #76
 471 001a FFF7FEFF 		bl	Output_Buzzer
 472              	.LVL30:
 127:Src/motion.c  ****             break;
 128:Src/motion.c  ****         }
 129:Src/motion.c  ****     }
 130:Src/motion.c  ****     flag.ir_led = OFF;
 473              		.loc 1 130 0
 474 001e 104D     		ldr	r5, .L39
 475 0020 0024     		movs	r4, #0
 476 0022 6C71     		strb	r4, [r5, #5]
 131:Src/motion.c  ****     HAL_Delay(500);
 477              		.loc 1 131 0
 478 0024 4FF4FA70 		mov	r0, #500
 479 0028 FFF7FEFF 		bl	HAL_Delay
 480              	.LVL31:
 132:Src/motion.c  ****     Straight_Calc_fb(180,0,0);
 481              		.loc 1 132 0
 482 002c 2246     		mov	r2, r4
 483 002e 2146     		mov	r1, r4
 484 0030 B420     		movs	r0, #180
 485 0032 FFF7FEFF 		bl	Straight_Calc_fb
 486              	.LVL32:
 133:Src/motion.c  ****     HAL_Delay(1000);
 487              		.loc 1 133 0
 488 0036 4FF47A70 		mov	r0, #1000
 489 003a FFF7FEFF 		bl	HAL_Delay
 490              	.LVL33:
 134:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 491              		.loc 1 134 0
 492 003e 4C20     		movs	r0, #76
 493 0040 FFF7FEFF 		bl	Output_Buzzer
 494              	.LVL34:
 135:Src/motion.c  ****     flag.straight = ON;
 495              		.loc 1 135 0
 496 0044 0123     		movs	r3, #1
 497 0046 6B70     		strb	r3, [r5, #1]
 498              	.L37:
 136:Src/motion.c  ****     while(1){
 137:Src/motion.c  ****         if(Push()==ON){
 499              		.loc 1 137 0
 500 0048 FFF7FEFF 		bl	Push
 501              	.LVL35:
 502 004c 0128     		cmp	r0, #1
 503 004e FBD1     		bne	.L37
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 12


 138:Src/motion.c  ****             flag.straight = OFF;
 504              		.loc 1 138 0
 505 0050 034B     		ldr	r3, .L39
 506 0052 0022     		movs	r2, #0
 507 0054 5A70     		strb	r2, [r3, #1]
 139:Src/motion.c  ****             Output_Buzzer(HZ_A);
 508              		.loc 1 139 0
 509 0056 5B20     		movs	r0, #91
 510 0058 FFF7FEFF 		bl	Output_Buzzer
 511              	.LVL36:
 140:Src/motion.c  ****             break;
 141:Src/motion.c  ****         }
 142:Src/motion.c  ****     }
 143:Src/motion.c  **** }
 512              		.loc 1 143 0
 513 005c 38BD     		pop	{r3, r4, r5, pc}
 514              	.L40:
 515 005e 00BF     		.align	2
 516              	.L39:
 517 0060 00000000 		.word	flag
 518 0064 00000000 		.word	sensor
 519              		.cfi_endproc
 520              	.LFE132:
 522              		.section	.text.Straight,"ax",%progbits
 523              		.align	1
 524              		.global	Straight
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 528              		.fpu fpv4-sp-d16
 530              	Straight:
 531              	.LFB133:
 144:Src/motion.c  **** 
 145:Src/motion.c  **** 
 146:Src/motion.c  **** /****************************************************************************************
 147:Src/motion.c  ****  * outline  : straight one block by encoder and gyro
 148:Src/motion.c  ****  * argument : void
 149:Src/motion.c  ****  * return   : void
 150:Src/motion.c  **** ********************************************************************************************/
 151:Src/motion.c  **** void Straight(void){
 532              		.loc 1 151 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536 0000 10B5     		push	{r4, lr}
 537              	.LCFI7:
 538              		.cfi_def_cfa_offset 8
 539              		.cfi_offset 4, -8
 540              		.cfi_offset 14, -4
 152:Src/motion.c  ****     flag.ir_led = OFF;
 541              		.loc 1 152 0
 542 0002 094C     		ldr	r4, .L43
 543 0004 0021     		movs	r1, #0
 544 0006 6171     		strb	r1, [r4, #5]
 153:Src/motion.c  ****     Straight_Calc_fb(180.0f,0.0f,0.0f);
 545              		.loc 1 153 0
 546 0008 0A46     		mov	r2, r1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 13


 547 000a B420     		movs	r0, #180
 548 000c FFF7FEFF 		bl	Straight_Calc_fb
 549              	.LVL37:
 154:Src/motion.c  ****     Yawrate_Calc_Zero();
 550              		.loc 1 154 0
 551 0010 FFF7FEFF 		bl	Yawrate_Calc_Zero
 552              	.LVL38:
 155:Src/motion.c  ****     HAL_Delay(10);
 553              		.loc 1 155 0
 554 0014 0A20     		movs	r0, #10
 555 0016 FFF7FEFF 		bl	HAL_Delay
 556              	.LVL39:
 156:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 557              		.loc 1 156 0
 558 001a 4C20     		movs	r0, #76
 559 001c FFF7FEFF 		bl	Output_Buzzer
 560              	.LVL40:
 157:Src/motion.c  ****     flag.straight = ON;
 561              		.loc 1 157 0
 562 0020 0123     		movs	r3, #1
 563 0022 6370     		strb	r3, [r4, #1]
 158:Src/motion.c  ****     flag.yawrate = ON;
 564              		.loc 1 158 0
 565 0024 A370     		strb	r3, [r4, #2]
 159:Src/motion.c  **** }
 566              		.loc 1 159 0
 567 0026 10BD     		pop	{r4, pc}
 568              	.L44:
 569              		.align	2
 570              	.L43:
 571 0028 00000000 		.word	flag
 572              		.cfi_endproc
 573              	.LFE133:
 575              		.section	.text.Straight_HalF,"ax",%progbits
 576              		.align	1
 577              		.global	Straight_HalF
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu fpv4-sp-d16
 583              	Straight_HalF:
 584              	.LFB134:
 160:Src/motion.c  **** 
 161:Src/motion.c  **** void Straight_HalF(void){
 585              		.loc 1 161 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 10B5     		push	{r4, lr}
 590              	.LCFI8:
 591              		.cfi_def_cfa_offset 8
 592              		.cfi_offset 4, -8
 593              		.cfi_offset 14, -4
 162:Src/motion.c  ****     flag.ir_led = OFF;
 594              		.loc 1 162 0
 595 0002 094C     		ldr	r4, .L47
 596 0004 0021     		movs	r1, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 14


 597 0006 6171     		strb	r1, [r4, #5]
 163:Src/motion.c  ****     Straight_Calc_fb(90.0f,0.0f,0.0f);
 598              		.loc 1 163 0
 599 0008 0A46     		mov	r2, r1
 600 000a 5A20     		movs	r0, #90
 601 000c FFF7FEFF 		bl	Straight_Calc_fb
 602              	.LVL41:
 164:Src/motion.c  ****     Yawrate_Calc_Zero();
 603              		.loc 1 164 0
 604 0010 FFF7FEFF 		bl	Yawrate_Calc_Zero
 605              	.LVL42:
 165:Src/motion.c  ****     HAL_Delay(10);
 606              		.loc 1 165 0
 607 0014 0A20     		movs	r0, #10
 608 0016 FFF7FEFF 		bl	HAL_Delay
 609              	.LVL43:
 166:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 610              		.loc 1 166 0
 611 001a 4C20     		movs	r0, #76
 612 001c FFF7FEFF 		bl	Output_Buzzer
 613              	.LVL44:
 167:Src/motion.c  ****     flag.straight = ON;
 614              		.loc 1 167 0
 615 0020 0123     		movs	r3, #1
 616 0022 6370     		strb	r3, [r4, #1]
 168:Src/motion.c  ****     flag.yawrate = ON;
 617              		.loc 1 168 0
 618 0024 A370     		strb	r3, [r4, #2]
 169:Src/motion.c  **** }
 619              		.loc 1 169 0
 620 0026 10BD     		pop	{r4, pc}
 621              	.L48:
 622              		.align	2
 623              	.L47:
 624 0028 00000000 		.word	flag
 625              		.cfi_endproc
 626              	.LFE134:
 628              		.global	__aeabi_f2d
 629              		.section	.text.Show_log,"ax",%progbits
 630              		.align	1
 631              		.global	Show_log
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 635              		.fpu fpv4-sp-d16
 637              	Show_log:
 638              	.LFB135:
 170:Src/motion.c  **** 
 171:Src/motion.c  **** 
 172:Src/motion.c  **** /****************************************************************************************
 173:Src/motion.c  ****  * outline  : show log
 174:Src/motion.c  ****  * argument : void
 175:Src/motion.c  ****  * return   : void
 176:Src/motion.c  **** ********************************************************************************************/
 177:Src/motion.c  **** void Show_log(void){
 639              		.loc 1 177 0
 640              		.cfi_startproc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 15


 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 644              	.LCFI9:
 645              		.cfi_def_cfa_offset 24
 646              		.cfi_offset 4, -24
 647              		.cfi_offset 5, -20
 648              		.cfi_offset 6, -16
 649              		.cfi_offset 7, -12
 650              		.cfi_offset 8, -8
 651              		.cfi_offset 14, -4
 652 0004 84B0     		sub	sp, sp, #16
 653              	.LCFI10:
 654              		.cfi_def_cfa_offset 40
 178:Src/motion.c  ****     printf("\na:%d,c:%d,d:%d\r\n",y_accel_T,y_constant_T,y_decrease_T);
 655              		.loc 1 178 0
 656 0006 1F4B     		ldr	r3, .L56
 657 0008 1B88     		ldrh	r3, [r3]
 658 000a 1F4A     		ldr	r2, .L56+4
 659 000c 1288     		ldrh	r2, [r2]
 660 000e 1F49     		ldr	r1, .L56+8
 661 0010 0988     		ldrh	r1, [r1]
 662 0012 1F48     		ldr	r0, .L56+12
 663 0014 FFF7FEFF 		bl	printf
 664              	.LVL45:
 665              	.LBB2:
 179:Src/motion.c  ****     for(uint16_t i=0;i<2000;i++){
 666              		.loc 1 179 0
 667 0018 0024     		movs	r4, #0
 668              	.LVL46:
 669              	.L50:
 670              		.loc 1 179 0 is_stmt 0 discriminator 1
 671 001a B4F5FA6F 		cmp	r4, #2000
 672 001e 2ED2     		bcs	.L49
 180:Src/motion.c  ****         printf("%f\t%f\t%f\r\n",loger.target_y_velocity[i],loger.y_velocity[i],loger.velocity_c[i])
 673              		.loc 1 180 0 is_stmt 1
 674 0020 1C4B     		ldr	r3, .L56+16
 675 0022 04F5FA61 		add	r1, r4, #2000
 676 0026 03EB8101 		add	r1, r3, r1, lsl #2
 677 002a 04F5BB52 		add	r2, r4, #5984
 678 002e 1032     		adds	r2, r2, #16
 679 0030 03EB8202 		add	r2, r3, r2, lsl #2
 680 0034 1568     		ldr	r5, [r2]	@ float
 681 0036 04F57A62 		add	r2, r4, #4000
 682 003a 03EB8203 		add	r3, r3, r2, lsl #2
 683 003e D3F80080 		ldr	r8, [r3]	@ float
 684 0042 0868     		ldr	r0, [r1]	@ float
 685 0044 FFF7FEFF 		bl	__aeabi_f2d
 686              	.LVL47:
 687 0048 0646     		mov	r6, r0
 688 004a 0F46     		mov	r7, r1
 689 004c 4046     		mov	r0, r8	@ float
 690 004e FFF7FEFF 		bl	__aeabi_f2d
 691              	.LVL48:
 692 0052 CDE90201 		strd	r0, [sp, #8]
 693 0056 2846     		mov	r0, r5	@ float
 694 0058 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 16


 695              	.LVL49:
 696 005c CDE90001 		strd	r0, [sp]
 697 0060 3246     		mov	r2, r6
 698 0062 3B46     		mov	r3, r7
 699 0064 0C48     		ldr	r0, .L56+20
 700 0066 FFF7FEFF 		bl	printf
 701              	.LVL50:
 181:Src/motion.c  ****         if(Push()==ON){
 702              		.loc 1 181 0
 703 006a FFF7FEFF 		bl	Push
 704              	.LVL51:
 705 006e 0128     		cmp	r0, #1
 706 0070 02D0     		beq	.L55
 179:Src/motion.c  ****     for(uint16_t i=0;i<2000;i++){
 707              		.loc 1 179 0 discriminator 2
 708 0072 0134     		adds	r4, r4, #1
 709              	.LVL52:
 710 0074 A4B2     		uxth	r4, r4
 711              	.LVL53:
 712 0076 D0E7     		b	.L50
 713              	.L55:
 182:Src/motion.c  ****             Output_Buzzer(HZ_A);
 714              		.loc 1 182 0
 715 0078 5B20     		movs	r0, #91
 716 007a FFF7FEFF 		bl	Output_Buzzer
 717              	.LVL54:
 718              	.L49:
 719              	.LBE2:
 183:Src/motion.c  ****             break;
 184:Src/motion.c  ****         }
 185:Src/motion.c  ****     }
 186:Src/motion.c  **** }
 720              		.loc 1 186 0
 721 007e 04B0     		add	sp, sp, #16
 722              	.LCFI11:
 723              		.cfi_def_cfa_offset 24
 724              		@ sp needed
 725 0080 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 726              	.LVL55:
 727              	.L57:
 728              		.align	2
 729              	.L56:
 730 0084 00000000 		.word	y_decrease_T
 731 0088 00000000 		.word	y_constant_T
 732 008c 00000000 		.word	y_accel_T
 733 0090 00000000 		.word	.LC0
 734 0094 00000000 		.word	loger
 735 0098 14000000 		.word	.LC1
 736              		.cfi_endproc
 737              	.LFE135:
 739              		.section	.text.Sensor_Mode,"ax",%progbits
 740              		.align	1
 741              		.global	Sensor_Mode
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 17


 747              	Sensor_Mode:
 748              	.LFB136:
 187:Src/motion.c  **** 
 188:Src/motion.c  **** void Sensor_Mode(void){
 749              		.loc 1 188 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753 0000 10B5     		push	{r4, lr}
 754              	.LCFI12:
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 4, -8
 757              		.cfi_offset 14, -4
 189:Src/motion.c  ****     flag.ir_led = ON;
 758              		.loc 1 189 0
 759 0002 104B     		ldr	r3, .L64
 760 0004 0122     		movs	r2, #1
 761 0006 5A71     		strb	r2, [r3, #5]
 762 0008 11E0     		b	.L61
 763              	.LVL56:
 764              	.L60:
 765              	.LBB3:
 190:Src/motion.c  ****     while(1){
 191:Src/motion.c  ****         Sensor_Check();
 192:Src/motion.c  ****         for(int i=0;i<4;i++){
 193:Src/motion.c  ****             printf("%d\t",sensor.adc[i]);
 766              		.loc 1 193 0 discriminator 3
 767 000a 04F10802 		add	r2, r4, #8
 768 000e 0E4B     		ldr	r3, .L64+4
 769 0010 33F81210 		ldrh	r1, [r3, r2, lsl #1]
 770 0014 0D48     		ldr	r0, .L64+8
 771 0016 FFF7FEFF 		bl	printf
 772              	.LVL57:
 192:Src/motion.c  ****             printf("%d\t",sensor.adc[i]);
 773              		.loc 1 192 0 discriminator 3
 774 001a 0134     		adds	r4, r4, #1
 775              	.LVL58:
 776              	.L59:
 192:Src/motion.c  ****             printf("%d\t",sensor.adc[i]);
 777              		.loc 1 192 0 is_stmt 0 discriminator 1
 778 001c 032C     		cmp	r4, #3
 779 001e F4DD     		ble	.L60
 780              	.LBE3:
 194:Src/motion.c  ****         }
 195:Src/motion.c  ****         printf("\r");
 781              		.loc 1 195 0 is_stmt 1
 782 0020 0D20     		movs	r0, #13
 783 0022 FFF7FEFF 		bl	putchar
 784              	.LVL59:
 196:Src/motion.c  ****         if(Push()==ON){
 785              		.loc 1 196 0
 786 0026 FFF7FEFF 		bl	Push
 787              	.LVL60:
 788 002a 0128     		cmp	r0, #1
 789 002c 03D0     		beq	.L63
 790              	.LVL61:
 791              	.L61:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 18


 191:Src/motion.c  ****         for(int i=0;i<4;i++){
 792              		.loc 1 191 0
 793 002e FFF7FEFF 		bl	Sensor_Check
 794              	.LVL62:
 795              	.LBB4:
 192:Src/motion.c  ****             printf("%d\t",sensor.adc[i]);
 796              		.loc 1 192 0
 797 0032 0024     		movs	r4, #0
 798 0034 F2E7     		b	.L59
 799              	.LVL63:
 800              	.L63:
 801              	.LBE4:
 197:Src/motion.c  ****             Output_Buzzer(HZ_A);
 802              		.loc 1 197 0
 803 0036 5B20     		movs	r0, #91
 804 0038 FFF7FEFF 		bl	Output_Buzzer
 805              	.LVL64:
 198:Src/motion.c  ****             flag.ir_led = OFF;
 806              		.loc 1 198 0
 807 003c 014B     		ldr	r3, .L64
 808 003e 0022     		movs	r2, #0
 809 0040 5A71     		strb	r2, [r3, #5]
 199:Src/motion.c  ****             break;
 200:Src/motion.c  ****         }
 201:Src/motion.c  ****     }
 202:Src/motion.c  **** }
 810              		.loc 1 202 0
 811 0042 10BD     		pop	{r4, pc}
 812              	.LVL65:
 813              	.L65:
 814              		.align	2
 815              	.L64:
 816 0044 00000000 		.word	flag
 817 0048 00000000 		.word	sensor
 818 004c 00000000 		.word	.LC2
 819              		.cfi_endproc
 820              	.LFE136:
 822              		.section	.text.Test_Create_Map,"ax",%progbits
 823              		.align	1
 824              		.global	Test_Create_Map
 825              		.syntax unified
 826              		.thumb
 827              		.thumb_func
 828              		.fpu fpv4-sp-d16
 830              	Test_Create_Map:
 831              	.LFB137:
 203:Src/motion.c  **** 
 204:Src/motion.c  **** void Test_Create_Map(void){
 832              		.loc 1 204 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836 0000 08B5     		push	{r3, lr}
 837              	.LCFI13:
 838              		.cfi_def_cfa_offset 8
 839              		.cfi_offset 3, -8
 840              		.cfi_offset 14, -4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 19


 205:Src/motion.c  ****     flag.ir_led = OFF;
 841              		.loc 1 205 0
 842 0002 064B     		ldr	r3, .L68
 843 0004 0022     		movs	r2, #0
 844 0006 5A71     		strb	r2, [r3, #5]
 206:Src/motion.c  **** 
 207:Src/motion.c  ****     Maze_Set();
 845              		.loc 1 207 0
 846 0008 FFF7FEFF 		bl	Maze_Set
 847              	.LVL66:
 208:Src/motion.c  ****     Init_maze();
 848              		.loc 1 208 0
 849 000c FFF7FEFF 		bl	Init_maze
 850              	.LVL67:
 209:Src/motion.c  ****     MAZE_Create_Step();
 851              		.loc 1 209 0
 852 0010 FFF7FEFF 		bl	MAZE_Create_Step
 853              	.LVL68:
 210:Src/motion.c  ****     MAZE_Out_Step();
 854              		.loc 1 210 0
 855 0014 FFF7FEFF 		bl	MAZE_Out_Step
 856              	.LVL69:
 211:Src/motion.c  **** }
 857              		.loc 1 211 0
 858 0018 08BD     		pop	{r3, pc}
 859              	.L69:
 860 001a 00BF     		.align	2
 861              	.L68:
 862 001c 00000000 		.word	flag
 863              		.cfi_endproc
 864              	.LFE137:
 866              		.section	.text.Batt_Check,"ax",%progbits
 867              		.align	1
 868              		.global	Batt_Check
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 872              		.fpu fpv4-sp-d16
 874              	Batt_Check:
 875              	.LFB138:
 212:Src/motion.c  **** 
 213:Src/motion.c  **** /****************************************************************************************
 214:Src/motion.c  ****  * outline  : normalize battery (12bit -> dec)
 215:Src/motion.c  ****  * argument : void
 216:Src/motion.c  ****  * return   : void
 217:Src/motion.c  **** ********************************************************************************************/
 218:Src/motion.c  **** void Batt_Check(void)
 219:Src/motion.c  **** {
 876              		.loc 1 219 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 0
 879              		@ frame_needed = 0, uses_anonymous_args = 0
 880 0000 08B5     		push	{r3, lr}
 881              	.LCFI14:
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 3, -8
 884              		.cfi_offset 14, -4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 20


 885              	.LVL70:
 886              	.LBB5:
 220:Src/motion.c  ****   float batt=0;
 221:Src/motion.c  ****   for(int i=0;i<10;i++){
 887              		.loc 1 221 0
 888 0002 0023     		movs	r3, #0
 889              	.LBE5:
 220:Src/motion.c  ****   float batt=0;
 890              		.loc 1 220 0
 891 0004 9FED177A 		vldr.32	s14, .L74
 892              	.LBB6:
 893              		.loc 1 221 0
 894 0008 08E0     		b	.L71
 895              	.LVL71:
 896              	.L72:
 222:Src/motion.c  ****     batt += batt_analog;
 897              		.loc 1 222 0 discriminator 3
 898 000a 174A     		ldr	r2, .L74+4
 899 000c 1288     		ldrh	r2, [r2]
 900 000e 07EE902A 		vmov	s15, r2	@ int
 901 0012 F8EEE77A 		vcvt.f32.s32	s15, s15
 902 0016 37EE277A 		vadd.f32	s14, s14, s15
 903              	.LVL72:
 221:Src/motion.c  ****     batt += batt_analog;
 904              		.loc 1 221 0 discriminator 3
 905 001a 0133     		adds	r3, r3, #1
 906              	.LVL73:
 907              	.L71:
 221:Src/motion.c  ****     batt += batt_analog;
 908              		.loc 1 221 0 is_stmt 0 discriminator 1
 909 001c 092B     		cmp	r3, #9
 910 001e F4DD     		ble	.L72
 911              	.LBE6:
 223:Src/motion.c  ****   }
 224:Src/motion.c  ****   batt /= 10.0f;
 912              		.loc 1 224 0 is_stmt 1
 913 0020 F2EE047A 		vmov.f32	s15, #1.0e+1
 914 0024 C7EE276A 		vdiv.f32	s13, s14, s15
 915              	.LVL74:
 225:Src/motion.c  ****   batt = batt/4095.0f*133.0f/33.0f*3.3f;
 916              		.loc 1 225 0
 917 0028 DFED107A 		vldr.32	s15, .L74+8
 918 002c 86EEA77A 		vdiv.f32	s14, s13, s15
 919 0030 DFED0F7A 		vldr.32	s15, .L74+12
 920 0034 27EE277A 		vmul.f32	s14, s14, s15
 921 0038 DFED0E6A 		vldr.32	s13, .L74+16
 922              	.LVL75:
 923 003c C7EE267A 		vdiv.f32	s15, s14, s13
 924 0040 9FED0D7A 		vldr.32	s14, .L74+20
 925 0044 67EE877A 		vmul.f32	s15, s15, s14
 926              	.LVL76:
 226:Src/motion.c  ****   batt_Vcc = batt;
 927              		.loc 1 226 0
 928 0048 0C4B     		ldr	r3, .L74+24
 929              	.LVL77:
 930 004a C3ED007A 		vstr.32	s15, [r3]
 227:Src/motion.c  ****   printf("\nbatt:%lf\r\n",batt);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 21


 931              		.loc 1 227 0
 932 004e 17EE900A 		vmov	r0, s15
 933 0052 FFF7FEFF 		bl	__aeabi_f2d
 934              	.LVL78:
 935 0056 0246     		mov	r2, r0
 936 0058 0B46     		mov	r3, r1
 937 005a 0948     		ldr	r0, .L74+28
 938 005c FFF7FEFF 		bl	printf
 939              	.LVL79:
 228:Src/motion.c  **** }
 940              		.loc 1 228 0
 941 0060 08BD     		pop	{r3, pc}
 942              	.L75:
 943 0062 00BF     		.align	2
 944              	.L74:
 945 0064 00000000 		.word	0
 946 0068 00000000 		.word	batt_analog
 947 006c 00F07F45 		.word	1166012416
 948 0070 00000543 		.word	1124401152
 949 0074 00000442 		.word	1107558400
 950 0078 33335340 		.word	1079194419
 951 007c 00000000 		.word	batt_Vcc
 952 0080 00000000 		.word	.LC3
 953              		.cfi_endproc
 954              	.LFE138:
 956              		.comm	yawrate_pid,2,2
 957              		.comm	straight_pid_r,2,2
 958              		.comm	straight_pid_l,2,2
 959              		.comm	y_sumsum,4,4
 960              		.comm	y_sum,4,4
 961              		.comm	s_sum_r,4,4
 962              		.comm	s_sum_l,4,4
 963              		.section	.rodata.Batt_Check.str1.4,"aMS",%progbits,1
 964              		.align	2
 965              	.LC3:
 966 0000 0A626174 		.ascii	"\012batt:%lf\015\012\000"
 966      743A256C 
 966      660D0A00 
 967              		.section	.rodata.Sensor_Mode.str1.4,"aMS",%progbits,1
 968              		.align	2
 969              	.LC2:
 970 0000 25640900 		.ascii	"%d\011\000"
 971              		.section	.rodata.Show_log.str1.4,"aMS",%progbits,1
 972              		.align	2
 973              	.LC0:
 974 0000 0A613A25 		.ascii	"\012a:%d,c:%d,d:%d\015\012\000"
 974      642C633A 
 974      25642C64 
 974      3A25640D 
 974      0A00
 975 0012 0000     		.space	2
 976              	.LC1:
 977 0014 25660925 		.ascii	"%f\011%f\011%f\015\012\000"
 977      66092566 
 977      0D0A00
 978              		.text
 979              	.Letext0:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 22


 980              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 981              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 982              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 983              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 984              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 985              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 986              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 987              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 988              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 989              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 990              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 991              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 992              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 993              		.file 15 "Inc/tim.h"
 994              		.file 16 "Inc/global.h"
 995              		.file 17 "Inc/control.h"
 996              		.file 18 "Inc/spi.h"
 997              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 998              		.file 20 "Inc/maze.h"
 999              		.file 21 "Inc/gpio.h"
 1000              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1001              		.file 23 "<built-in>"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 motion.c
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:18     .text.Normal_Turn_Half:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:25     .text.Normal_Turn_Half:00000000 Normal_Turn_Half
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:101    .text.Normal_Turn_Half:0000005c $d
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:107    .text.Turn_Half:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:114    .text.Turn_Half:00000000 Turn_Half
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:151    .text.Turn_Half:00000020 $d
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:156    .text.Turn_Quarter_Left:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:163    .text.Turn_Quarter_Left:00000000 Turn_Quarter_Left
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:200    .text.Turn_Quarter_Left:00000020 $d
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:205    .text.Turn_Quarter_Right:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:212    .text.Turn_Quarter_Right:00000000 Turn_Quarter_Right
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:248    .text.Turn_Quarter_Right:00000024 $d
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:253    .text.Normal_Ennkai:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:260    .text.Normal_Ennkai:00000000 Normal_Ennkai
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:334    .text.Normal_Ennkai:0000005c $d
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:340    .text.Ennkai:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:347    .text.Ennkai:00000000 Ennkai
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:428    .text.Ennkai:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:434    .text.Normal_Straight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:441    .text.Normal_Straight:00000000 Normal_Straight
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:517    .text.Normal_Straight:00000060 $d
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:523    .text.Straight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:530    .text.Straight:00000000 Straight
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:571    .text.Straight:00000028 $d
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:576    .text.Straight_HalF:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:583    .text.Straight_HalF:00000000 Straight_HalF
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:624    .text.Straight_HalF:00000028 $d
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:630    .text.Show_log:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:637    .text.Show_log:00000000 Show_log
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:730    .text.Show_log:00000084 $d
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:740    .text.Sensor_Mode:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:747    .text.Sensor_Mode:00000000 Sensor_Mode
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:816    .text.Sensor_Mode:00000044 $d
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:823    .text.Test_Create_Map:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:830    .text.Test_Create_Map:00000000 Test_Create_Map
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:862    .text.Test_Create_Map:0000001c $d
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:867    .text.Batt_Check:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:874    .text.Batt_Check:00000000 Batt_Check
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:945    .text.Batt_Check:00000064 $d
                            *COM*:00000002 yawrate_pid
                            *COM*:00000002 straight_pid_r
                            *COM*:00000002 straight_pid_l
                            *COM*:00000004 y_sumsum
                            *COM*:00000004 y_sum
                            *COM*:00000004 s_sum_r
                            *COM*:00000004 s_sum_l
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:964    .rodata.Batt_Check.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:968    .rodata.Sensor_Mode.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s:972    .rodata.Show_log.str1.4:00000000 $d

UNDEFINED SYMBOLS
Output_Buzzer
gyro_offset_calc_reset
Yawrate_Calc_fb
HAL_Delay
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccii8IGc.s 			page 24


Push
flag
sensor
Straight_Calc_Zero
Yawrate_Calc_Zero
Straight_Calc_fb
__aeabi_f2d
printf
y_decrease_T
y_constant_T
y_accel_T
loger
putchar
Sensor_Check
Maze_Set
Init_maze
MAZE_Create_Step
MAZE_Out_Step
batt_analog
batt_Vcc
