ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB126:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Src/stm32f4xx_it.c ****   *
   7:Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****   *
  20:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c ****   *
  31:Src/stm32f4xx_it.c ****   ******************************************************************************
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 2


  32:Src/stm32f4xx_it.c ****   */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f4xx_it.c **** #include "adc.h"
  40:Src/stm32f4xx_it.c **** #include "gpio.h"
  41:Src/stm32f4xx_it.c **** #include "spi.h"
  42:Src/stm32f4xx_it.c **** #include "tim.h"
  43:Src/stm32f4xx_it.c **** #include "global.h"
  44:Src/stm32f4xx_it.c **** #include "control.h"
  45:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  46:Src/stm32f4xx_it.c **** 
  47:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  48:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim5;
  49:Src/stm32f4xx_it.c **** 
  50:Src/stm32f4xx_it.c **** /******************************************************************************/
  51:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  52:Src/stm32f4xx_it.c **** /******************************************************************************/
  53:Src/stm32f4xx_it.c **** 
  54:Src/stm32f4xx_it.c **** /**
  55:Src/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  56:Src/stm32f4xx_it.c **** */
  57:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  58:Src/stm32f4xx_it.c **** {
  28              		.loc 1 58 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  59:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  60:Src/stm32f4xx_it.c **** 
  61:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  62:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  63:Src/stm32f4xx_it.c **** 
  64:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  65:Src/stm32f4xx_it.c **** }
  33              		.loc 1 65 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE126:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	HardFault_Handler:
  47              	.LFB127:
  66:Src/stm32f4xx_it.c **** 
  67:Src/stm32f4xx_it.c **** /**
  68:Src/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
  69:Src/stm32f4xx_it.c **** */
  70:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 3


  71:Src/stm32f4xx_it.c **** {
  48              		.loc 1 71 0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  55 0000 FEE7     		b	.L3
  56              		.cfi_endproc
  57              	.LFE127:
  59              		.section	.text.MemManage_Handler,"ax",%progbits
  60              		.align	1
  61              		.global	MemManage_Handler
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	MemManage_Handler:
  68              	.LFB128:
  72:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  73:Src/stm32f4xx_it.c **** 
  74:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  75:Src/stm32f4xx_it.c ****   while (1)
  76:Src/stm32f4xx_it.c ****   {
  77:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  78:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  79:Src/stm32f4xx_it.c ****   }
  80:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  81:Src/stm32f4xx_it.c **** 
  82:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  83:Src/stm32f4xx_it.c **** }
  84:Src/stm32f4xx_it.c **** 
  85:Src/stm32f4xx_it.c **** /**
  86:Src/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
  87:Src/stm32f4xx_it.c **** */
  88:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  89:Src/stm32f4xx_it.c **** {
  69              		.loc 1 89 0
  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.L5:
  76 0000 FEE7     		b	.L5
  77              		.cfi_endproc
  78              	.LFE128:
  80              		.section	.text.BusFault_Handler,"ax",%progbits
  81              		.align	1
  82              		.global	BusFault_Handler
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv4-sp-d16
  88              	BusFault_Handler:
  89              	.LFB129:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 4


  90:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  91:Src/stm32f4xx_it.c **** 
  92:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  93:Src/stm32f4xx_it.c ****   while (1)
  94:Src/stm32f4xx_it.c ****   {
  95:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  96:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
  97:Src/stm32f4xx_it.c ****   }
  98:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  99:Src/stm32f4xx_it.c **** 
 100:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
 101:Src/stm32f4xx_it.c **** }
 102:Src/stm32f4xx_it.c **** 
 103:Src/stm32f4xx_it.c **** /**
 104:Src/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
 105:Src/stm32f4xx_it.c **** */
 106:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 107:Src/stm32f4xx_it.c **** {
  90              		.loc 1 107 0
  91              		.cfi_startproc
  92              		@ Volatile: function does not return.
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.L7:
  97 0000 FEE7     		b	.L7
  98              		.cfi_endproc
  99              	.LFE129:
 101              		.section	.text.UsageFault_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	UsageFault_Handler
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	UsageFault_Handler:
 110              	.LFB130:
 108:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 109:Src/stm32f4xx_it.c **** 
 110:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 111:Src/stm32f4xx_it.c ****   while (1)
 112:Src/stm32f4xx_it.c ****   {
 113:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 114:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 115:Src/stm32f4xx_it.c ****   }
 116:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 117:Src/stm32f4xx_it.c **** 
 118:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 119:Src/stm32f4xx_it.c **** }
 120:Src/stm32f4xx_it.c **** 
 121:Src/stm32f4xx_it.c **** /**
 122:Src/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 123:Src/stm32f4xx_it.c **** */
 124:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 125:Src/stm32f4xx_it.c **** {
 111              		.loc 1 125 0
 112              		.cfi_startproc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 5


 113              		@ Volatile: function does not return.
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.L9:
 118 0000 FEE7     		b	.L9
 119              		.cfi_endproc
 120              	.LFE130:
 122              		.section	.text.SVC_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	SVC_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	SVC_Handler:
 131              	.LFB131:
 126:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 127:Src/stm32f4xx_it.c **** 
 128:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 129:Src/stm32f4xx_it.c ****   while (1)
 130:Src/stm32f4xx_it.c ****   {
 131:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 132:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 133:Src/stm32f4xx_it.c ****   }
 134:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 135:Src/stm32f4xx_it.c **** 
 136:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 137:Src/stm32f4xx_it.c **** }
 138:Src/stm32f4xx_it.c **** 
 139:Src/stm32f4xx_it.c **** /**
 140:Src/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
 141:Src/stm32f4xx_it.c **** */
 142:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 143:Src/stm32f4xx_it.c **** {
 132              		.loc 1 143 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 144:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 145:Src/stm32f4xx_it.c **** 
 146:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 147:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 148:Src/stm32f4xx_it.c **** 
 149:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 150:Src/stm32f4xx_it.c **** }
 137              		.loc 1 150 0
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE131:
 142              		.section	.text.DebugMon_Handler,"ax",%progbits
 143              		.align	1
 144              		.global	DebugMon_Handler
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 6


 148              		.fpu fpv4-sp-d16
 150              	DebugMon_Handler:
 151              	.LFB132:
 151:Src/stm32f4xx_it.c **** 
 152:Src/stm32f4xx_it.c **** /**
 153:Src/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
 154:Src/stm32f4xx_it.c **** */
 155:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 156:Src/stm32f4xx_it.c **** {
 152              		.loc 1 156 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 158:Src/stm32f4xx_it.c **** 
 159:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 160:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 161:Src/stm32f4xx_it.c **** 
 162:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 163:Src/stm32f4xx_it.c **** }
 157              		.loc 1 163 0
 158 0000 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE132:
 162              		.section	.text.PendSV_Handler,"ax",%progbits
 163              		.align	1
 164              		.global	PendSV_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	PendSV_Handler:
 171              	.LFB133:
 164:Src/stm32f4xx_it.c **** 
 165:Src/stm32f4xx_it.c **** /**
 166:Src/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 167:Src/stm32f4xx_it.c **** */
 168:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 169:Src/stm32f4xx_it.c **** {
 172              		.loc 1 169 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 170:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 171:Src/stm32f4xx_it.c **** 
 172:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 173:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 174:Src/stm32f4xx_it.c **** 
 175:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 176:Src/stm32f4xx_it.c **** }
 177              		.loc 1 176 0
 178 0000 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE133:
 182              		.global	__aeabi_f2d
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 7


 183              		.global	__aeabi_dmul
 184              		.global	__aeabi_ddiv
 185              		.global	__aeabi_dadd
 186              		.global	__aeabi_d2f
 187              		.global	__aeabi_i2d
 188              		.global	__aeabi_d2iz
 189              		.global	__aeabi_dsub
 190              		.section	.text.SysTick_Handler,"ax",%progbits
 191              		.align	1
 192              		.global	SysTick_Handler
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu fpv4-sp-d16
 198              	SysTick_Handler:
 199              	.LFB134:
 177:Src/stm32f4xx_it.c **** 
 178:Src/stm32f4xx_it.c **** /**
 179:Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
 180:Src/stm32f4xx_it.c **** */
 181:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 182:Src/stm32f4xx_it.c **** {
 200              		.loc 1 182 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 205              	.LCFI0:
 206              		.cfi_def_cfa_offset 32
 207              		.cfi_offset 3, -32
 208              		.cfi_offset 4, -28
 209              		.cfi_offset 5, -24
 210              		.cfi_offset 6, -20
 211              		.cfi_offset 7, -16
 212              		.cfi_offset 8, -12
 213              		.cfi_offset 9, -8
 214              		.cfi_offset 14, -4
 183:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 184:Src/stm32f4xx_it.c **** 
 185:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 186:Src/stm32f4xx_it.c ****   HAL_IncTick();
 215              		.loc 1 186 0
 216 0004 FFF7FEFF 		bl	HAL_IncTick
 217              	.LVL0:
 187:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 218              		.loc 1 187 0
 219 0008 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 220              	.LVL1:
 188:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 189:Src/stm32f4xx_it.c ****   if(flag.gyro_calc == true){
 221              		.loc 1 189 0
 222 000c 844B     		ldr	r3, .L33+24
 223 000e B3F90030 		ldrsh	r3, [r3]
 224 0012 012B     		cmp	r3, #1
 225 0014 00F0C080 		beq	.L27
 190:Src/stm32f4xx_it.c ****     gyro.befor = gyro.degree;
 191:Src/stm32f4xx_it.c ****     gyro.degree = get_gyro();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 8


 192:Src/stm32f4xx_it.c ****     gyro.degree_sum += (gyro.degree + gyro.befor)/2.0/1000.0;
 193:Src/stm32f4xx_it.c ****   }else{
 194:Src/stm32f4xx_it.c ****     gyro_offset_calc();
 226              		.loc 1 194 0
 227 0018 FFF7FEFF 		bl	gyro_offset_calc
 228              	.LVL2:
 229              	.L15:
 195:Src/stm32f4xx_it.c ****   }
 196:Src/stm32f4xx_it.c **** 
 197:Src/stm32f4xx_it.c ****   update_encoder();
 230              		.loc 1 197 0
 231 001c FFF7FEFF 		bl	update_encoder
 232              	.LVL3:
 198:Src/stm32f4xx_it.c ****   enc.rpm_l = enc.rpms_left * 60000 / IE_1024 / GEAR_RATE;
 233              		.loc 1 198 0
 234 0020 804B     		ldr	r3, .L33+28
 235 0022 1D68     		ldr	r5, [r3]
 236 0024 4EF66020 		movw	r0, #60000
 237 0028 00FB05F0 		mul	r0, r0, r5
 238 002c 0028     		cmp	r0, #0
 239 002e C0F2D780 		blt	.L28
 240              	.L16:
 241 0032 8012     		asrs	r0, r0, #10
 242 0034 FFF7FEFF 		bl	__aeabi_i2d
 243              	.LVL4:
 244 0038 0022     		movs	r2, #0
 245 003a 7B4B     		ldr	r3, .L33+32
 246 003c FFF7FEFF 		bl	__aeabi_ddiv
 247              	.LVL5:
 248 0040 FFF7FEFF 		bl	__aeabi_d2iz
 249              	.LVL6:
 250 0044 07B2     		sxth	r7, r0
 251 0046 774B     		ldr	r3, .L33+28
 252 0048 1F82     		strh	r7, [r3, #16]	@ movhi
 199:Src/stm32f4xx_it.c ****   enc.rpm_r = enc.rpms_right * 60000 / IE_1024 / GEAR_RATE;
 253              		.loc 1 199 0
 254 004a 5C68     		ldr	r4, [r3, #4]
 255 004c 4EF66020 		movw	r0, #60000
 256 0050 00FB04F0 		mul	r0, r0, r4
 257 0054 0028     		cmp	r0, #0
 258 0056 C0F2C680 		blt	.L29
 259              	.L17:
 260 005a 8012     		asrs	r0, r0, #10
 261 005c FFF7FEFF 		bl	__aeabi_i2d
 262              	.LVL7:
 263 0060 0022     		movs	r2, #0
 264 0062 714B     		ldr	r3, .L33+32
 265 0064 FFF7FEFF 		bl	__aeabi_ddiv
 266              	.LVL8:
 267 0068 6E4E     		ldr	r6, .L33+28
 268 006a FFF7FEFF 		bl	__aeabi_d2iz
 269              	.LVL9:
 270 006e 7082     		strh	r0, [r6, #18]	@ movhi
 200:Src/stm32f4xx_it.c **** 
 201:Src/stm32f4xx_it.c ****   enc.sum_l += enc.rpms_left;
 271              		.loc 1 201 0
 272 0070 B368     		ldr	r3, [r6, #8]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 9


 273 0072 2B44     		add	r3, r3, r5
 274 0074 B360     		str	r3, [r6, #8]
 202:Src/stm32f4xx_it.c ****   enc.sum_r += enc.rpms_right;
 275              		.loc 1 202 0
 276 0076 F268     		ldr	r2, [r6, #12]
 277 0078 1444     		add	r4, r4, r2
 278 007a F460     		str	r4, [r6, #12]
 203:Src/stm32f4xx_it.c ****   sit.distance_l = enc.sum_l / IE_1024 / GEAR_RATE;//hoeal rot
 279              		.loc 1 203 0
 280 007c 1846     		mov	r0, r3
 281 007e 002B     		cmp	r3, #0
 282 0080 C0F2B480 		blt	.L30
 283              	.L18:
 284 0084 8012     		asrs	r0, r0, #10
 285 0086 FFF7FEFF 		bl	__aeabi_i2d
 286              	.LVL10:
 287 008a 0022     		movs	r2, #0
 288 008c 664B     		ldr	r3, .L33+32
 289 008e FFF7FEFF 		bl	__aeabi_ddiv
 290              	.LVL11:
 291 0092 FFF7FEFF 		bl	__aeabi_d2f
 292              	.LVL12:
 293 0096 654B     		ldr	r3, .L33+36
 294 0098 1860     		str	r0, [r3]	@ float
 204:Src/stm32f4xx_it.c ****   sit.distance_r = enc.sum_r / IE_1024 / GEAR_RATE;//hoeal rot
 295              		.loc 1 204 0
 296 009a 2046     		mov	r0, r4
 297 009c 002C     		cmp	r4, #0
 298 009e C0F2A880 		blt	.L31
 299              	.L19:
 300 00a2 8012     		asrs	r0, r0, #10
 301 00a4 FFF7FEFF 		bl	__aeabi_i2d
 302              	.LVL13:
 303 00a8 0022     		movs	r2, #0
 304 00aa 5F4B     		ldr	r3, .L33+32
 305 00ac FFF7FEFF 		bl	__aeabi_ddiv
 306              	.LVL14:
 307 00b0 FFF7FEFF 		bl	__aeabi_d2f
 308              	.LVL15:
 309 00b4 5D4B     		ldr	r3, .L33+36
 310 00b6 5860     		str	r0, [r3, #4]	@ float
 205:Src/stm32f4xx_it.c **** 
 206:Src/stm32f4xx_it.c **** 
 207:Src/stm32f4xx_it.c ****    if(flag.accel == OFF){
 311              		.loc 1 207 0
 312 00b8 594B     		ldr	r3, .L33+24
 313 00ba B3F90230 		ldrsh	r3, [r3, #2]
 314 00be 002B     		cmp	r3, #0
 315 00c0 00F09A80 		beq	.L32
 208:Src/stm32f4xx_it.c ****         motor.pwm_l = 0;
 209:Src/stm32f4xx_it.c ****         motor.pwm_r = 0;
 210:Src/stm32f4xx_it.c ****         speed_count = 0;
 211:Src/stm32f4xx_it.c ****     }else if(flag.accel == ON){
 316              		.loc 1 211 0
 317 00c4 012B     		cmp	r3, #1
 318 00c6 40F09C80 		bne	.L13
 212:Src/stm32f4xx_it.c ****         if(speed_count < 300){
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 10


 319              		.loc 1 212 0
 320 00ca 594B     		ldr	r3, .L33+40
 321 00cc 1C88     		ldrh	r4, [r3]
 322 00ce B4F5967F 		cmp	r4, #300
 323 00d2 23D2     		bcs	.L22
 213:Src/stm32f4xx_it.c ****             motor.pwm_l = 999*(Resistance*TORQUE/KT+KE*0.001*enc.rpm_l)/sit.batt;
 324              		.loc 1 213 0
 325 00d4 3846     		mov	r0, r7
 326 00d6 FFF7FEFF 		bl	__aeabi_i2d
 327              	.LVL16:
 328 00da 4BA3     		adr	r3, .L33
 329 00dc D3E90023 		ldrd	r2, [r3]
 330 00e0 FFF7FEFF 		bl	__aeabi_dmul
 331              	.LVL17:
 332 00e4 4AA3     		adr	r3, .L33+8
 333 00e6 D3E90023 		ldrd	r2, [r3]
 334 00ea FFF7FEFF 		bl	__aeabi_dadd
 335              	.LVL18:
 336 00ee 4AA3     		adr	r3, .L33+16
 337 00f0 D3E90023 		ldrd	r2, [r3]
 338 00f4 FFF7FEFF 		bl	__aeabi_dmul
 339              	.LVL19:
 340 00f8 8046     		mov	r8, r0
 341 00fa 8946     		mov	r9, r1
 342 00fc 4B4B     		ldr	r3, .L33+36
 343 00fe 9868     		ldr	r0, [r3, #8]	@ float
 344 0100 FFF7FEFF 		bl	__aeabi_f2d
 345              	.LVL20:
 346 0104 0246     		mov	r2, r0
 347 0106 0B46     		mov	r3, r1
 348 0108 4046     		mov	r0, r8
 349 010a 4946     		mov	r1, r9
 350 010c FFF7FEFF 		bl	__aeabi_ddiv
 351              	.LVL21:
 352 0110 FFF7FEFF 		bl	__aeabi_d2iz
 353              	.LVL22:
 354 0114 00B2     		sxth	r0, r0
 355 0116 474B     		ldr	r3, .L33+44
 356 0118 1880     		strh	r0, [r3]	@ movhi
 214:Src/stm32f4xx_it.c ****             motor.pwm_r = motor.pwm_l;
 357              		.loc 1 214 0
 358 011a 5880     		strh	r0, [r3, #2]	@ movhi
 359              	.L22:
 215:Src/stm32f4xx_it.c ****         }
 216:Src/stm32f4xx_it.c **** 
 217:Src/stm32f4xx_it.c ****         if(speed_count >= 300 && speed_count < 600){
 360              		.loc 1 217 0
 361 011c A4F59673 		sub	r3, r4, #300
 362 0120 9BB2     		uxth	r3, r3
 363 0122 B3F5967F 		cmp	r3, #300
 364 0126 03D2     		bcs	.L23
 218:Src/stm32f4xx_it.c ****             motor.pwm_l = 0;
 365              		.loc 1 218 0
 366 0128 424B     		ldr	r3, .L33+44
 367 012a 0022     		movs	r2, #0
 368 012c 1A80     		strh	r2, [r3]	@ movhi
 219:Src/stm32f4xx_it.c ****             motor.pwm_r = 0;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 11


 369              		.loc 1 219 0
 370 012e 5A80     		strh	r2, [r3, #2]	@ movhi
 371              	.L23:
 220:Src/stm32f4xx_it.c ****         }
 221:Src/stm32f4xx_it.c **** 
 222:Src/stm32f4xx_it.c ****         if(speed_count >= 600 && speed_count < 900){
 372              		.loc 1 222 0
 373 0130 A4F51673 		sub	r3, r4, #600
 374 0134 9BB2     		uxth	r3, r3
 375 0136 B3F5967F 		cmp	r3, #300
 376 013a 23D2     		bcs	.L24
 223:Src/stm32f4xx_it.c ****             motor.pwm_l = 999*(-Resistance*TORQUE/KT+KE*0.001*enc.rpm_l)/sit.batt;
 377              		.loc 1 223 0
 378 013c 3846     		mov	r0, r7
 379 013e FFF7FEFF 		bl	__aeabi_i2d
 380              	.LVL23:
 381 0142 31A3     		adr	r3, .L33
 382 0144 D3E90023 		ldrd	r2, [r3]
 383 0148 FFF7FEFF 		bl	__aeabi_dmul
 384              	.LVL24:
 385 014c 30A3     		adr	r3, .L33+8
 386 014e D3E90023 		ldrd	r2, [r3]
 387 0152 FFF7FEFF 		bl	__aeabi_dsub
 388              	.LVL25:
 389 0156 30A3     		adr	r3, .L33+16
 390 0158 D3E90023 		ldrd	r2, [r3]
 391 015c FFF7FEFF 		bl	__aeabi_dmul
 392              	.LVL26:
 393 0160 0646     		mov	r6, r0
 394 0162 0F46     		mov	r7, r1
 395 0164 314B     		ldr	r3, .L33+36
 396 0166 9868     		ldr	r0, [r3, #8]	@ float
 397 0168 FFF7FEFF 		bl	__aeabi_f2d
 398              	.LVL27:
 399 016c 0246     		mov	r2, r0
 400 016e 0B46     		mov	r3, r1
 401 0170 3046     		mov	r0, r6
 402 0172 3946     		mov	r1, r7
 403 0174 FFF7FEFF 		bl	__aeabi_ddiv
 404              	.LVL28:
 405 0178 FFF7FEFF 		bl	__aeabi_d2iz
 406              	.LVL29:
 407 017c 00B2     		sxth	r0, r0
 408 017e 2D4B     		ldr	r3, .L33+44
 409 0180 1880     		strh	r0, [r3]	@ movhi
 224:Src/stm32f4xx_it.c ****             motor.pwm_r = motor.pwm_l;
 410              		.loc 1 224 0
 411 0182 5880     		strh	r0, [r3, #2]	@ movhi
 412              	.L24:
 225:Src/stm32f4xx_it.c ****         }
 226:Src/stm32f4xx_it.c ****         if(speed_count >= 900){
 413              		.loc 1 226 0
 414 0184 B4F5617F 		cmp	r4, #900
 415 0188 02D3     		bcc	.L25
 227:Src/stm32f4xx_it.c ****             flag.accel = OFF;
 416              		.loc 1 227 0
 417 018a 254B     		ldr	r3, .L33+24
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 12


 418 018c 0022     		movs	r2, #0
 419 018e 5A80     		strh	r2, [r3, #2]	@ movhi
 420              	.L25:
 228:Src/stm32f4xx_it.c ****         }
 229:Src/stm32f4xx_it.c ****         speed_count ++;
 421              		.loc 1 229 0
 422 0190 0134     		adds	r4, r4, #1
 423 0192 274B     		ldr	r3, .L33+40
 424 0194 1C80     		strh	r4, [r3]	@ movhi
 230:Src/stm32f4xx_it.c ****     }
 231:Src/stm32f4xx_it.c **** 
 232:Src/stm32f4xx_it.c ****     //motor.pwm_l = 999*(Resistance*TORQUE/KT+KE*0.001*enc.rpm_l)/sit.batt;
 233:Src/stm32f4xx_it.c ****     
 234:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 235:Src/stm32f4xx_it.c **** }
 425              		.loc 1 235 0
 426 0196 34E0     		b	.L13
 427              	.L27:
 190:Src/stm32f4xx_it.c ****     gyro.degree = get_gyro();
 428              		.loc 1 190 0
 429 0198 274C     		ldr	r4, .L33+48
 430 019a 2369     		ldr	r3, [r4, #16]	@ float
 431 019c A360     		str	r3, [r4, #8]	@ float
 191:Src/stm32f4xx_it.c ****     gyro.degree_sum += (gyro.degree + gyro.befor)/2.0/1000.0;
 432              		.loc 1 191 0
 433 019e FFF7FEFF 		bl	get_gyro
 434              	.LVL30:
 435 01a2 84ED040A 		vstr.32	s0, [r4, #16]
 192:Src/stm32f4xx_it.c ****   }else{
 436              		.loc 1 192 0
 437 01a6 D4ED027A 		vldr.32	s15, [r4, #8]
 438 01aa 70EE277A 		vadd.f32	s15, s0, s15
 439 01ae 17EE900A 		vmov	r0, s15
 440 01b2 FFF7FEFF 		bl	__aeabi_f2d
 441              	.LVL31:
 442 01b6 0022     		movs	r2, #0
 443 01b8 204B     		ldr	r3, .L33+52
 444 01ba FFF7FEFF 		bl	__aeabi_dmul
 445              	.LVL32:
 446 01be 0022     		movs	r2, #0
 447 01c0 1F4B     		ldr	r3, .L33+56
 448 01c2 FFF7FEFF 		bl	__aeabi_ddiv
 449              	.LVL33:
 450 01c6 0646     		mov	r6, r0
 451 01c8 0F46     		mov	r7, r1
 452 01ca 6069     		ldr	r0, [r4, #20]	@ float
 453 01cc FFF7FEFF 		bl	__aeabi_f2d
 454              	.LVL34:
 455 01d0 3246     		mov	r2, r6
 456 01d2 3B46     		mov	r3, r7
 457 01d4 FFF7FEFF 		bl	__aeabi_dadd
 458              	.LVL35:
 459 01d8 FFF7FEFF 		bl	__aeabi_d2f
 460              	.LVL36:
 461 01dc 6061     		str	r0, [r4, #20]	@ float
 462 01de 1DE7     		b	.L15
 463              	.L28:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 13


 198:Src/stm32f4xx_it.c ****   enc.rpm_r = enc.rpms_right * 60000 / IE_1024 / GEAR_RATE;
 464              		.loc 1 198 0
 465 01e0 00F2FF30 		addw	r0, r0, #1023
 466 01e4 25E7     		b	.L16
 467              	.L29:
 199:Src/stm32f4xx_it.c **** 
 468              		.loc 1 199 0
 469 01e6 00F2FF30 		addw	r0, r0, #1023
 470 01ea 36E7     		b	.L17
 471              	.L30:
 203:Src/stm32f4xx_it.c ****   sit.distance_r = enc.sum_r / IE_1024 / GEAR_RATE;//hoeal rot
 472              		.loc 1 203 0
 473 01ec 03F2FF30 		addw	r0, r3, #1023
 474 01f0 48E7     		b	.L18
 475              	.L31:
 204:Src/stm32f4xx_it.c **** 
 476              		.loc 1 204 0
 477 01f2 04F2FF30 		addw	r0, r4, #1023
 478 01f6 54E7     		b	.L19
 479              	.L32:
 208:Src/stm32f4xx_it.c ****         motor.pwm_r = 0;
 480              		.loc 1 208 0
 481 01f8 0E4A     		ldr	r2, .L33+44
 482 01fa 1380     		strh	r3, [r2]	@ movhi
 209:Src/stm32f4xx_it.c ****         speed_count = 0;
 483              		.loc 1 209 0
 484 01fc 5380     		strh	r3, [r2, #2]	@ movhi
 210:Src/stm32f4xx_it.c ****     }else if(flag.accel == ON){
 485              		.loc 1 210 0
 486 01fe 0C4A     		ldr	r2, .L33+40
 487 0200 1380     		strh	r3, [r2]	@ movhi
 488              	.L13:
 489              		.loc 1 235 0
 490 0202 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 491              	.L34:
 492 0206 00BF     		.align	3
 493              	.L33:
 494 0208 2A36E675 		.word	1978021418
 495 020c C4212B3F 		.word	1059791300
 496 0210 57460810 		.word	268977751
 497 0214 2FABBB3F 		.word	1069263663
 498 0218 00000000 		.word	0
 499 021c 00388F40 		.word	1083127808
 500 0220 00000000 		.word	flag
 501 0224 00000000 		.word	enc
 502 0228 00001540 		.word	1075118080
 503 022c 00000000 		.word	sit
 504 0230 00000000 		.word	speed_count
 505 0234 00000000 		.word	motor
 506 0238 00000000 		.word	gyro
 507 023c 0000E03F 		.word	1071644672
 508 0240 00408F40 		.word	1083129856
 509              		.cfi_endproc
 510              	.LFE134:
 512              		.section	.text.TIM5_IRQHandler,"ax",%progbits
 513              		.align	1
 514              		.global	TIM5_IRQHandler
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 14


 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 518              		.fpu fpv4-sp-d16
 520              	TIM5_IRQHandler:
 521              	.LFB135:
 236:Src/stm32f4xx_it.c **** 
 237:Src/stm32f4xx_it.c **** /******************************************************************************/
 238:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 239:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 240:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 241:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 242:Src/stm32f4xx_it.c **** /******************************************************************************/
 243:Src/stm32f4xx_it.c **** 
 244:Src/stm32f4xx_it.c **** /**
 245:Src/stm32f4xx_it.c **** * @brief This function handles TIM5 global interrupt.
 246:Src/stm32f4xx_it.c **** */
 247:Src/stm32f4xx_it.c **** void TIM5_IRQHandler(void)
 248:Src/stm32f4xx_it.c **** {
 522              		.loc 1 248 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 08B5     		push	{r3, lr}
 527              	.LCFI1:
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 3, -8
 530              		.cfi_offset 14, -4
 249:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 0 */
 250:Src/stm32f4xx_it.c **** 
 251:Src/stm32f4xx_it.c ****   /* USER CODE END TIM5_IRQn 0 */
 252:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim5);
 531              		.loc 1 252 0
 532 0002 1B48     		ldr	r0, .L48
 533 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 534              	.LVL37:
 253:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 1 */
 254:Src/stm32f4xx_it.c ****   count_tim5++;
 535              		.loc 1 254 0
 536 0008 1A4A     		ldr	r2, .L48+4
 537 000a 1388     		ldrh	r3, [r2]
 538 000c 0133     		adds	r3, r3, #1
 539 000e 9BB2     		uxth	r3, r3
 540 0010 1380     		strh	r3, [r2]	@ movhi
 255:Src/stm32f4xx_it.c **** 
 256:Src/stm32f4xx_it.c ****   switch(count_tim5){
 541              		.loc 1 256 0
 542 0012 013B     		subs	r3, r3, #1
 543 0014 072B     		cmp	r3, #7
 544 0016 26D8     		bhi	.L36
 545 0018 DFE803F0 		tbb	[pc, r3]
 546              	.L38:
 547 001c 04       		.byte	(.L37-.L38)/2
 548 001d 07       		.byte	(.L39-.L38)/2
 549 001e 0B       		.byte	(.L40-.L38)/2
 550 001f 10       		.byte	(.L41-.L38)/2
 551 0020 13       		.byte	(.L42-.L38)/2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 15


 552 0021 17       		.byte	(.L43-.L38)/2
 553 0022 1A       		.byte	(.L44-.L38)/2
 554 0023 1F       		.byte	(.L45-.L38)/2
 555              		.p2align 1
 556              	.L37:
 257:Src/stm32f4xx_it.c ****     case 1:
 258:Src/stm32f4xx_it.c ****       update_side_sen_off();
 557              		.loc 1 258 0
 558 0024 FFF7FEFF 		bl	update_side_sen_off
 559              	.LVL38:
 560              	.L35:
 259:Src/stm32f4xx_it.c ****       break;
 260:Src/stm32f4xx_it.c ****     case 2:
 261:Src/stm32f4xx_it.c ****       IR_Contoroll(0b0110);
 262:Src/stm32f4xx_it.c ****       break;
 263:Src/stm32f4xx_it.c ****     case 3:
 264:Src/stm32f4xx_it.c ****       update_side_sen_on();
 265:Src/stm32f4xx_it.c ****       All_IR_OFF();
 266:Src/stm32f4xx_it.c ****       break;
 267:Src/stm32f4xx_it.c ****     case 4:
 268:Src/stm32f4xx_it.c ****       update_fr_sen_off();
 269:Src/stm32f4xx_it.c ****       break;
 270:Src/stm32f4xx_it.c ****     case 5:
 271:Src/stm32f4xx_it.c ****       IR_Contoroll(0b1001);
 272:Src/stm32f4xx_it.c ****       break;
 273:Src/stm32f4xx_it.c ****     case 6:
 274:Src/stm32f4xx_it.c ****       update_fr_sen_on();
 275:Src/stm32f4xx_it.c ****       break;
 276:Src/stm32f4xx_it.c ****     case 7:
 277:Src/stm32f4xx_it.c ****       All_IR_OFF();
 278:Src/stm32f4xx_it.c ****       update_batt_date();
 279:Src/stm32f4xx_it.c ****       break;
 280:Src/stm32f4xx_it.c ****     case 8:
 281:Src/stm32f4xx_it.c ****       update_wall();
 282:Src/stm32f4xx_it.c ****       count_tim5 = 0;
 283:Src/stm32f4xx_it.c ****       break;
 284:Src/stm32f4xx_it.c ****     default:
 285:Src/stm32f4xx_it.c ****       count_tim5 = 0;
 286:Src/stm32f4xx_it.c ****       break;
 287:Src/stm32f4xx_it.c ****   }
 288:Src/stm32f4xx_it.c ****   /* USER CODE END TIM5_IRQn 1 */
 289:Src/stm32f4xx_it.c **** }
 561              		.loc 1 289 0
 562 0028 08BD     		pop	{r3, pc}
 563              	.L39:
 261:Src/stm32f4xx_it.c ****       break;
 564              		.loc 1 261 0
 565 002a 0620     		movs	r0, #6
 566 002c FFF7FEFF 		bl	IR_Contoroll
 567              	.LVL39:
 262:Src/stm32f4xx_it.c ****     case 3:
 568              		.loc 1 262 0
 569 0030 FAE7     		b	.L35
 570              	.L40:
 264:Src/stm32f4xx_it.c ****       All_IR_OFF();
 571              		.loc 1 264 0
 572 0032 FFF7FEFF 		bl	update_side_sen_on
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 16


 573              	.LVL40:
 265:Src/stm32f4xx_it.c ****       break;
 574              		.loc 1 265 0
 575 0036 FFF7FEFF 		bl	All_IR_OFF
 576              	.LVL41:
 266:Src/stm32f4xx_it.c ****     case 4:
 577              		.loc 1 266 0
 578 003a F5E7     		b	.L35
 579              	.L41:
 268:Src/stm32f4xx_it.c ****       break;
 580              		.loc 1 268 0
 581 003c FFF7FEFF 		bl	update_fr_sen_off
 582              	.LVL42:
 269:Src/stm32f4xx_it.c ****     case 5:
 583              		.loc 1 269 0
 584 0040 F2E7     		b	.L35
 585              	.L42:
 271:Src/stm32f4xx_it.c ****       break;
 586              		.loc 1 271 0
 587 0042 0920     		movs	r0, #9
 588 0044 FFF7FEFF 		bl	IR_Contoroll
 589              	.LVL43:
 272:Src/stm32f4xx_it.c ****     case 6:
 590              		.loc 1 272 0
 591 0048 EEE7     		b	.L35
 592              	.L43:
 274:Src/stm32f4xx_it.c ****       break;
 593              		.loc 1 274 0
 594 004a FFF7FEFF 		bl	update_fr_sen_on
 595              	.LVL44:
 275:Src/stm32f4xx_it.c ****     case 7:
 596              		.loc 1 275 0
 597 004e EBE7     		b	.L35
 598              	.L44:
 277:Src/stm32f4xx_it.c ****       update_batt_date();
 599              		.loc 1 277 0
 600 0050 FFF7FEFF 		bl	All_IR_OFF
 601              	.LVL45:
 278:Src/stm32f4xx_it.c ****       break;
 602              		.loc 1 278 0
 603 0054 FFF7FEFF 		bl	update_batt_date
 604              	.LVL46:
 279:Src/stm32f4xx_it.c ****     case 8:
 605              		.loc 1 279 0
 606 0058 E6E7     		b	.L35
 607              	.L45:
 281:Src/stm32f4xx_it.c ****       count_tim5 = 0;
 608              		.loc 1 281 0
 609 005a FFF7FEFF 		bl	update_wall
 610              	.LVL47:
 282:Src/stm32f4xx_it.c ****       break;
 611              		.loc 1 282 0
 612 005e 054B     		ldr	r3, .L48+4
 613 0060 0022     		movs	r2, #0
 614 0062 1A80     		strh	r2, [r3]	@ movhi
 283:Src/stm32f4xx_it.c ****     default:
 615              		.loc 1 283 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 17


 616 0064 E0E7     		b	.L35
 617              	.L36:
 285:Src/stm32f4xx_it.c ****       break;
 618              		.loc 1 285 0
 619 0066 034B     		ldr	r3, .L48+4
 620 0068 0022     		movs	r2, #0
 621 006a 1A80     		strh	r2, [r3]	@ movhi
 622              		.loc 1 289 0
 623 006c DCE7     		b	.L35
 624              	.L49:
 625 006e 00BF     		.align	2
 626              	.L48:
 627 0070 00000000 		.word	htim5
 628 0074 00000000 		.word	count_tim5
 629              		.cfi_endproc
 630              	.LFE135:
 632              		.text
 633              	.Letext0:
 634              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 635              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 636              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 637              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 638              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 639              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 640              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 641              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 642              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 643              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 644              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 645              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 646              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 647              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 648              		.file 16 "Inc/adc.h"
 649              		.file 17 "Inc/spi.h"
 650              		.file 18 "Inc/tim.h"
 651              		.file 19 "Inc/global.h"
 652              		.file 20 "Inc/gpio.h"
 653              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 654              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:18     .text.NMI_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:39     .text.HardFault_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:46     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:60     .text.MemManage_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:67     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:81     .text.BusFault_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:88     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:102    .text.UsageFault_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:109    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:123    .text.SVC_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:130    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:143    .text.DebugMon_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:150    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:163    .text.PendSV_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:170    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:191    .text.SysTick_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:198    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:494    .text.SysTick_Handler:00000208 $d
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:513    .text.TIM5_IRQHandler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:520    .text.TIM5_IRQHandler:00000000 TIM5_IRQHandler
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:547    .text.TIM5_IRQHandler:0000001c $d
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:555    .text.TIM5_IRQHandler:00000024 $t
C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s:627    .text.TIM5_IRQHandler:00000070 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_dadd
__aeabi_d2f
__aeabi_i2d
__aeabi_d2iz
__aeabi_dsub
HAL_IncTick
HAL_SYSTICK_IRQHandler
gyro_offset_calc
update_encoder
get_gyro
flag
enc
sit
speed_count
motor
gyro
HAL_TIM_IRQHandler
update_side_sen_off
IR_Contoroll
update_side_sen_on
All_IR_OFF
update_fr_sen_off
update_fr_sen_on
update_batt_date
update_wall
htim5
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccjyNFlN.s 			page 19


count_tim5
